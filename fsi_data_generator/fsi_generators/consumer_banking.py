from ..fsi_text.consumer_banking.consumer_banking__statement__descriptions import \
    consumer_banking__statement__descriptions
from .helpers import apply_schema_to_regex, random_record, text_list
from .intelligent_generators.consumer_banking import (
    generate_random_account, generate_random_account_access_consent,
    generate_random_balance, generate_random_beneficiary,
    generate_random_beneficiary_creditor_account,
    generate_random_beneficiary_creditor_agent, generate_random_direct_debit,
    generate_random_mandate_related_information, generate_random_offer,
    generate_random_product, generate_random_scheduled_payment,
    generate_random_scheduled_payment_creditor_account,
    generate_random_scheduled_payment_creditor_agent,
    generate_random_standing_order,
    generate_random_standing_order_creditor_agent, generate_random_statement,
    generate_random_statement_amount, generate_random_statement_benefit,
    generate_random_statement_date_time, generate_random_statement_fee,
    generate_random_statement_interest, generate_random_statement_rate,
    generate_random_statement_value, generate_random_transaction, generate_random_standing_order_creditor_account,
    generate_random_transaction_statement_reference, generate_random_transaction_currency_exchange,
    generate_random_transaction_bank_transaction_code, generate_random_proprietary_transaction_code,
    generate_random_transaction_balance, generate_random_transaction_merchant_detail,
    generate_random_transaction_creditor_agent, generate_random_transaction_creditor_account,
    generate_random_transaction_debtor_account, generate_random_transaction_debtor_agent,
    generate_random_transaction_card_instrument, generate_random_transaction_ultimate_creditor,
    generate_random_transaction_ultimate_debtor, generate_random_account_statement_preference,
    generate_random_customer_interaction)
from faker import Faker

fake = Faker()


def consumer_banking(dg):
    return apply_schema_to_regex('consumer_banking', [
        ('customer_interactions', random_record(dg, generate_random_customer_interaction)),
        ('account_statement_preferences', random_record(dg, generate_random_account_statement_preference)),
        ('transaction_ultimate_debtors', random_record(dg, generate_random_transaction_ultimate_debtor)),
        ('transaction_ultimate_creditors', random_record(dg, generate_random_transaction_ultimate_creditor)),
        ('transaction_card_instruments', random_record(dg, generate_random_transaction_card_instrument)),
        ('transaction_debtor_agents', random_record(dg, generate_random_transaction_debtor_agent)),
        ('transaction_debtor_accounts', random_record(dg, generate_random_transaction_debtor_account)),
        ('transaction_creditor_accounts', random_record(dg, generate_random_transaction_creditor_account)),
        ('transaction_creditor_agents', random_record(dg, generate_random_transaction_creditor_agent)),
        ('transaction_merchant_details', random_record(dg, generate_random_transaction_merchant_detail)),
        ('transaction_balances', random_record(dg, generate_random_transaction_balance)),
        ('proprietary_transaction_codes', random_record(dg, generate_random_proprietary_transaction_code)),
        ('transactions', random_record(dg, generate_random_transaction)),
        ('transaction_bank_transaction_codes', random_record(dg, generate_random_transaction_bank_transaction_code)),
        ('transaction_currency_exchanges', random_record(dg, generate_random_transaction_currency_exchange)),
        ('transaction_statement_references', random_record(dg, generate_random_transaction_statement_reference)),
        ('statement_benefits', random_record(dg, generate_random_statement_benefit)),
        ('statement_values', random_record(dg, generate_random_statement_value)),
        ('statement_rates', random_record(dg, generate_random_statement_rate)),
        ('statement_date_times', random_record(dg, generate_random_statement_date_time)),
        ('statement_amounts', random_record(dg, generate_random_statement_amount)),
        ('statement_interests', random_record(dg, generate_random_statement_interest)),
        ('statement_fees', random_record(dg, generate_random_statement_fee)),
        ('statements', random_record(dg, generate_random_statement)),
        ('standing_order_creditor_agents', random_record(dg, generate_random_standing_order_creditor_agent)),
        ('standing_order_creditor_accounts', random_record(dg, generate_random_standing_order_creditor_account)),
        ('standing_orders', random_record(dg, generate_random_standing_order)),
        ('scheduled_payment_creditor_accounts', random_record(dg, generate_random_scheduled_payment_creditor_account)),
        ('scheduled_payment_creditor_agents', random_record(dg, generate_random_scheduled_payment_creditor_agent)),
        ('scheduled_payments', random_record(dg, generate_random_scheduled_payment)),
        ('products', random_record(dg, generate_random_product)),
        ('offers', random_record(dg, generate_random_offer)),
        ('mandate_related_information', random_record(dg, generate_random_mandate_related_information)),
        ('direct_debits', random_record(dg, generate_random_direct_debit)),
        ('beneficiary_creditor_accounts', random_record(dg, generate_random_beneficiary_creditor_account)),
        ('beneficiary_creditor_agents', random_record(dg, generate_random_beneficiary_creditor_agent)),
        ('beneficiaries', random_record(dg, generate_random_beneficiary)),
        ('account_access_consents', random_record(dg, generate_random_account_access_consent)),
        ('accounts', random_record(dg, generate_random_account)),
        ('balances', random_record(dg, generate_random_balance)),
        ('statement_descriptions', 'description', text_list(consumer_banking__statement__descriptions)),
    ])
