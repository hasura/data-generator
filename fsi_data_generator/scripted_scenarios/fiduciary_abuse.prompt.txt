Analyze all fiduciary relationships for potential fiduciary misconduct.

Technical requirements:
1. Handle transaction dates in these formats:
   - ISO format with microseconds (e.g., '2023-03-01T10:15:00.123456')
   - ISO format without microseconds (e.g., '2023-03-01T10:15:00')
   - Simple date format (e.g., '2023-03-01')
2. When comparing amounts:
   - Use absolute values to handle negative amounts
   - Allow for small differences (< $0.01) in amount matching
   - Handle both string and numeric amount formats
3. For credit/debit indicators:
   - Check for opposite indicators (CREDIT vs DEBIT)
   - Handle various formats (credit/debit, CR/DR, +/-)
4. Do not use DATEADD in generated SQL. Date math should be done in Python.
5. LOB accounts and enterprise accounts are related by the enterpriseAccountId.
   But transactions are identified by the LOB account id.
6. Suggest you use simple SQL and use Python to connect data sets. Do not use CTEs.

Analysis requirements:
1. Analyze relationship types to determine fiduciary relationship types. Make no assumptions
   about the names of relationship types.
2. Focus on consumer banking transactions.
3. Identify matching transaction patterns between fiduciary and client accounts within 3 days, including:
   - Exact amount matches with opposite credit/debit indicators
   - Split transactions where multiple guardian transactions add up to a ward transaction
   - Focus on cash transactions, ATM withdrawals, or transfers
4. Flag patterns where:
   - Money moves between fiduciary and client accounts
   - Transactions occur in close temporal proximity
   - Transaction descriptions suggest potential concealment
5. Report for each fiduciary-client pair:
   - Names of fiduciary and client
   - Number and total amount of suspicious transactions
   - Date range of suspicious activity
   - Types of suspicious patterns found
6. Highlight cases where:
   - A guardian shows patterns across multiple clients
   - Patterns occur repeatedly over time
   - Large amounts are involved

