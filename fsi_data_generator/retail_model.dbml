//
// ENTERPRISE
//

Table "enterprise"."permissions" {
  "enterprise_permission_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each permission"]
  "permission_name" VARCHAR(50) [not null, note: "Unique name describing the permission (e.g., read_balances)"]

  note: "Defines all possible permission types that can be granted in the system"
}

Table "enterprise"."account_identifiers" {
  "enterprise_account_identifier_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each account identifier entry"]
  "enterprise_account_id" INTEGER [not null, ref: > enterprise.accounts.enterprise_account_id, note: "References the main account"]
  "identification" VARCHAR(256) [not null, note: "The actual identifier value"]
  "scheme_name" VARCHAR(50) [not null, note: "Naming scheme for the identifier (e.g., IBAN, BIC)"]
  "name" VARCHAR(350) [note: "Optional display name for this identifier"]
  "lei" VARCHAR(20) [note: "Legal Entity Identifier (if applicable)"]
  "secondary_identification" VARCHAR(34) [note: "Additional identification value (if applicable)"]

  note: "Stores various identifiers associated with accounts, supports multiple identification schemes"
}

Table "enterprise"."parties" {
  "enterprise_party_id" SERIAL [pk, increment, note: "Unique identifier for each party"]
  "party_number" VARCHAR(35) [note: "Alternative reference number for the party"]
  "party_type" VARCHAR(20) [not null, note: "Type of party (e.g., individual, organization)"]
  "name" VARCHAR(350) [not null, note: "Name of the party"]
  "full_business_legal_name" VARCHAR(350) [note: "Complete legal name for business entities"]
  "legal_structure" VARCHAR(50) [note: "Legal structure of the organization (e.g., LLC, corporation)"]
  "lei" VARCHAR(20) [note: "Legal Entity Identifier for organizations"]
  "beneficial_ownership" BOOLEAN [note: "Indicates if this party has beneficial ownership"]
  "account_role" VARCHAR(50) [note: "Role in relation to the account (e.g., owner, authorized user)"]
  "email_address" VARCHAR(256) [note: "Primary email contact"]
  "phone" VARCHAR(30) [note: "Primary phone contact"]
  "mobile" VARCHAR(30) [note: "Mobile phone contact"]

  note: "Stores information about individuals and organizations that interact with accounts"
}

Table "enterprise"."party_relationships" {
  "enterprise_party_relationship_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each relationship record"]
  "enterprise_party_id" INTEGER [not null, ref: > enterprise.parties.enterprise_party_id, note: "References the party initiating the relationship"]
  "related_party_id" INTEGER [not null, ref: > enterprise.parties.enterprise_party_id, note: "References the party related to the first party"]
  "relationship_type" VARCHAR(50) [note: "Type of relationship (e.g., power_of_attorney, beneficiary, guardian)"]
  "priority" INT [note: "Order of precedence for the relationship type (lower number = higher priority)"]

  note: "Defines relationships between parties, such as power of attorney, beneficiary designations, etc."
}

Table "enterprise"."party_addresses" {
  "enterprise_party_address_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each address record"]
  "enterprise_party_id" INTEGER [not null, ref: > enterprise.parties.enterprise_party_id, note: "References the party this address belongs to"]
  "address_type" VARCHAR(5) [not null, note: "Type of address (e.g., home, business, mailing)"]
  "address_line" VARCHAR(70) [not null, note: "Main address line"]
  "building_number" VARCHAR(16) [note: "Building or house number"]
  "building_name" VARCHAR(140) [note: "Name of building if applicable"]
  "floor" VARCHAR(70) [note: "Floor number or description"]
  "unit_number" VARCHAR(16) [note: "Apartment or unit number"]
  "room" VARCHAR(70) [note: "Room identifier if applicable"]
  "post_box" VARCHAR(16) [note: "Post office box number"]
  "town_location_name" VARCHAR(140) [note: "Name of area within town"]
  "district_name" VARCHAR(140) [note: "District or county"]
  "care_of" VARCHAR(140) [note: "Person to whose attention mail should be sent"]
  "post_code" VARCHAR(16) [note: "Postal or zip code"]
  "town_name" VARCHAR(140) [note: "City or town name"]
  "country_sub_division" VARCHAR(35) [note: "State, province, or region"]
  "country" VARCHAR(2) [note: "Two-letter country code"]

  note: "Stores address information for parties with detailed address components"
}

Table "enterprise"."addresses" {
  "enterprise_address_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each address record"]
  "address_type" VARCHAR(5) [note: "Type of address (e.g., home, work, mailing)"]
  "department" VARCHAR(70) [note: "Department name for organizational addresses"]
  "sub_department" VARCHAR(70) [note: "Sub-department name for organizational addresses"]
  "street_name" VARCHAR(140) [note: "Street name component of the address"]
  "building_number" VARCHAR(16) [note: "Building or house number"]
  "building_name" VARCHAR(140) [note: "Name of building if applicable"]
  "floor" VARCHAR(70) [note: "Floor number or description"]
  "room" VARCHAR(70) [note: "Room identifier if applicable"]
  "unit_number" VARCHAR(16) [note: "Apartment or unit number"]
  "post_box" VARCHAR(16) [note: "Post office box number"]
  "town_location_name" VARCHAR(140) [note: "Name of area within town"]
  "district_name" VARCHAR(140) [note: "District or county"]
  "care_of" VARCHAR(140) [note: "Person to whose attention mail should be sent"]
  "post_code" VARCHAR(16) [note: "Postal or zip code"]
  "town_name" VARCHAR(140) [note: "City or town name"]
  "country_sub_division" VARCHAR(35) [note: "State, province, or region"]
  "country" VARCHAR(2) [note: "Two-letter country code"]

  note: "Central repository for address information used across the system"
}

Table "enterprise"."address_lines" {
  "enterprise_address_line_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each address line"]
  "enterprise_address_id" INTEGER [not null, ref: > enterprise.addresses.enterprise_address_id, note: "References the parent address record"]
  "line_number" INTEGER [not null, note: "Sequential number indicating the order of address lines"]
  "address_line" VARCHAR(70) [not null, note: "Text content of the address line"]

  Indexes {
    (enterprise_address_id, line_number) [unique, note: "Ensures unique combination of address ID and line number"]
  }

  note: "Stores multiple address lines for addresses that require them"
}

Table "enterprise"."entity_addresses" {
  "enterprise_entity_address_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each entity-address association"]
  "enterprise_address_id" INTEGER [not null, ref: > enterprise.addresses.enterprise_address_id, note: "References the address record"]
  "entity_type" VARCHAR(50) [not null, note: "Type of entity (e.g., customer, borrower, business)"]
  "entity_id" VARCHAR(255) [not null, note: "Identifier of the entity this address belongs to"]

  Indexes {
    (entity_type, entity_id, enterprise_address_id) [unique, note: "Ensures unique combination of entity type, entity ID, and address ID"]
  }

  note: "Junction table linking addresses to various entities across the system"
}

Table "enterprise"."accounts" {
  "enterprise_account_id" SERIAL [pk, increment, note: "Unique identifier for each account"]
  "opened_date" TIMESTAMPTZ [note: "When the account was opened"]
  "status" VARCHAR(10) [not null, note: "Current status of the account (e.g., active, closed)"]
  "status_update_date_time" TIMESTAMPTZ [not null, note: "When the status was last updated"]
  "account_category" VARCHAR(40) [note: "Customer defined category of account (e.g., personal, business)"]
  "description" VARCHAR(35) [note: "Customer defined description of the account"]

  note: "Core account information for all account types. Indicates that any LOB account was created or requested."
}

Table "enterprise"."account_ownership" {
  "enterprise_account_ownership_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each account ownership record"]
  "enterprise_account_id" INTEGER [not null, ref: > enterprise.accounts.enterprise_account_id, note: "References the account"]
  "enterprise_party_id" INTEGER [not null, ref: > enterprise.parties.enterprise_party_id, note: "References the party (owner)"]

  note: "Represents ownership of an account by a party, allowing for joint ownership across multiple accounts"
}

Table "enterprise"."associates" {
  "enterprise_associate_id" SERIAL [pk, increment, note: 'Unique identifier for each associate.']
  "first_name" VARCHAR(255) [note: 'Associate\'s first name.']
  "last_name" VARCHAR(255) [note: 'Associate\'s last name.']
  "email" VARCHAR(255) [unique, note: 'Associate\'s unique email address.']
  "phone_number" VARCHAR(20) [note: 'Associate\'s phone number.']
  "hire_date" DATE [note: 'Date the associate was hired.']
  "status" VARCHAR(20) [note: 'Current status of the associate (e.g., Active, Inactive).']
  "release_date" DATE [null, note: 'Date the associate was released from employment, if applicable.']
  "job_title" VARCHAR(255) [note: 'Associate\'s functional job title (e.g., Teller, Loan Officer).']
  "officer_title" VARCHAR(50) [note: 'Associate\'s formal officer title (e.g., VP, MD), if applicable.']
  "enterprise_department_id" INTEGER [ref: > enterprise.departments.enterprise_department_id, note: 'Foreign key referencing the department the associate belongs to.']
  "manager_id" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: 'Foreign key referencing the associate\'s manager.']
  "salary" decimal(10, 2) [note: 'Associate\'s annual salary.']
  "relationship_type" VARCHAR(20) [note: 'Type of relationship with the company (e.g., Employee, Contractor).']
  "street_address" VARCHAR(255) [note: 'Associate\'s street address.']
  "city" VARCHAR(255) [note: 'Associate\'s city of residence.']
  "state" VARCHAR(2) [note: 'Associate\'s state of residence.']
  "post_code" VARCHAR(10) [note: 'Associate\'s postal code.']
  "country" VARCHAR(255) [note: 'Associate\'s country of residence.'] // Added country
  "enterprise_building_id" INTEGER [ref: > enterprise.buildings.enterprise_building_id, note: 'Foreign key referencing the building where the associate is primarily located.']

  note: 'Stores information about employees, contractors, or other individuals associated with the enterprise.'
}

Table "enterprise"."departments" {
  "enterprise_department_id" SERIAL [pk, increment, note: 'Unique identifier for each department.']
  "department_name" VARCHAR(255) [unique, note: 'Name of the department.']
  "location" VARCHAR(255) [note: 'Physical location of the department.']
  note: 'Stores information about the various departments within the enterprise.'
}

Table "enterprise"."buildings" {
  "enterprise_building_id" SERIAL [pk, increment, note: 'Unique identifier for each building.']
  "building_name" VARCHAR(255) [note: 'Name of the building.']
  "street_address" VARCHAR(255) [note: 'Street address of the building.']
  "city" VARCHAR(255) [note: 'City where the building is located.']
  "state" VARCHAR(2) [note: 'State where the building is located.']
  "post_code" VARCHAR(10) [note: 'Postal code of the building.']
  "building_type" VARCHAR(50) [note: 'Type of building (e.g., Branch, Headquarters, Warehouse).']
  "phone_number" VARCHAR(20) [note: 'Phone number of the building.']
  "open_date" DATE [note: 'Date the building was opened.']
  "close_date" DATE [note: 'Date the building was closed, if applicable.']

  note: 'Stores information about the physical buildings used by the enterprise, including branches and other facilities.'
}

TableGroup "Parties & Addresses" [color: #1E69FD] {
  "enterprise"."parties"
  "enterprise"."party_relationships"
  "enterprise"."party_addresses"

  note: "Tables related to account stakeholders and their contact information"
}

TableGroup "Enterprise Accounts" [color: #1E69FD] {
  "enterprise"."permissions"
  "enterprise"."accounts"
  "enterprise"."account_identifiers"
  "enterprise"."account_ownership"

  note: "Tables related to core enterprise account management"
}

TableGroup "Enterprise Infra" [color: #1E69FD] {
  "enterprise"."associates"
  "enterprise"."buildings"
  "enterprise"."departments"
}

TableGroup "Addresses" [color: #1E69FD] {
  "enterprise"."addresses"
  "enterprise"."address_lines"
  "enterprise"."entity_addresses"

  note: "Central address management structure used across all domains"
}


//
// CONSUMER BANKING
//

Table "consumer_banking"."accounts" {
  "consumer_banking_account_id" SERIAL [pk, increment]
  "enterprise_account_id" INTEGER [not null, ref: > enterprise.accounts.enterprise_account_id]
  "consumer_banking_product_id" INTEGER [ref: > consumer_banking.products.consumer_banking_product_id]
  "opened_date" TIMESTAMPTZ [note: "When the account was opened"]
  "status" VARCHAR(40) [not null, note: "Current status of the account (e.g., Active, Inactive, Frozen, Closed)"]
  "status_update_date_time" TIMESTAMPTZ [not null, note: "When the status was last updated"]
}

Table "consumer_banking"."account_access_consents" {
  "consumer_banking_consent_id" SERIAL [pk, increment, note: "Unique identifier for each consent record"]
  "creation_date_time" TIMESTAMP [not null, note: "When the consent was initially created"]
  "status" VARCHAR(50) [not null, note: "Current status of the consent (e.g., Active, Revoked)"]
  "status_update_date_time" TIMESTAMP [not null, note: "When the status was last changed"]
  "expiration_date_time" TIMESTAMP [note: "When the consent will expire (if applicable)"]

  note: "Stores consent records for account access, tracking when and how third parties are permitted to access consumer banking account information"
}

Table "consumer_banking"."account_access_consents_permissions" {
  "consumer_banking_consent_id" INTEGER [ref: > consumer_banking.account_access_consents.consumer_banking_consent_id, note: "References a consent record"]
  "enterprise_permission_id" INTEGER [ref: > enterprise.permissions.enterprise_permission_id, note: "References a permission record"]

  Indexes {
    (consumer_banking_consent_id, enterprise_permission_id) [note: "Composite key for consent-permission pairs"]
  }

  note: "Junction table linking consents to specific permissions granted, implements a many-to-many relationship"
}

Table "consumer_banking"."balances" {
  "consumer_banking_balance_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each balance record"]
  "consumer_banking_account_id" INTEGER [not null, ref: > consumer_banking.accounts.consumer_banking_account_id, note: "References the account this balance belongs to"]
  "credit_debit_indicator" VARCHAR(6) [not null, note: "Indicates if balance is credit or debit"]
  "type" VARCHAR(5) [not null, note: "Primary balance type (e.g., AVBL for available)"]
  "date_time" TIMESTAMP [not null, note: "When this balance was recorded"]
  "amount" NUMERIC(18,5) [not null, note: "Monetary amount with precision to 5 decimal places"]
  "currency" VARCHAR(3) [not null, note: "Currency code (e.g., USD, EUR)"]
  "sub_type" VARCHAR(5) [note: "Optional further classification of balance type"]

  note: "Tracks account balance information with history, stores different types of balances"
}

Table "consumer_banking"."beneficiaries" {
  "consumer_banking_beneficiary_id" SERIAL [pk, increment, note: "Unique identifier for each beneficiary"]
  "consumer_banking_account_id" INTEGER [not null, ref: > consumer_banking.accounts.consumer_banking_account_id, note: "References the account this balance belongs to"]
  "beneficiary_type" VARCHAR(20) [not null, note: "Type of beneficiary (e.g., individual, organization)"]
  "reference" VARCHAR(35) [note: "Optional reference identifier for the beneficiary"]
  "supplementary_data" TEXT [note: "Additional information in free-text format"]

  note: "Stores beneficiary details for account payments, records entities that can receive payments"
}

Table "consumer_banking"."beneficiary_creditor_agents" {
  "consumer_banking_beneficiary_creditor_agent_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each agent record"]
  "consumer_banking_beneficiary_id" INTEGER [not null, ref: > consumer_banking.beneficiaries.consumer_banking_beneficiary_id, note: "References the beneficiary this agent is associated with"]
  "scheme_name" VARCHAR(50) [not null, note: "Identifier scheme (e.g., BIC, SORT)"]
  "identification" VARCHAR(35) [not null, note: "The actual identifier of the institution"]
  "name" VARCHAR(140) [note: "Display name of the financial institution"]
  "lei" VARCHAR(20) [note: "Legal Entity Identifier of the institution"]

  note: "Stores financial institution details for beneficiaries, records information about banks/agents"
}

Table "consumer_banking"."beneficiary_creditor_accounts" {
  "consumer_banking_beneficiary_creditor_account_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each creditor account record"]
  "consumer_banking_beneficiary_id" INTEGER [not null, ref: > consumer_banking.beneficiaries.consumer_banking_beneficiary_id, note: "References the beneficiary this account belongs to"]
  "scheme_name" VARCHAR(50) [not null, note: "Account identifier scheme (e.g., IBAN, BBAN)"]
  "identification" VARCHAR(256) [not null, note: "The actual account identifier value"]
  "name" VARCHAR(350) [note: "Optional display name for this account"]
  "secondary_identification" VARCHAR(34) [note: "Additional account identification information"]

  note: "Stores account details of beneficiaries for payment routing"
}

Table "consumer_banking"."direct_debits" {
  "consumer_banking_direct_debit_id" SERIAL [pk, increment, note: "Unique identifier for each direct debit mandate"]
  "consumer_banking_account_id" INTEGER [not null, ref: > consumer_banking.accounts.consumer_banking_account_id, note: "References the account this balance belongs to"]
  "direct_debit_status_code" VARCHAR(20) [not null, note: "Status code of the direct debit (e.g., active, canceled)"]
  "name" VARCHAR(70) [not null, note: "Name of the merchant/organization collecting the direct debit"]
  "previous_payment_date_time" TIMESTAMP [note: "When the last payment was made"]
  "previous_payment_amount" NUMERIC(18,5) [note: "Amount of the last payment"]
  "previous_payment_currency" VARCHAR(3) [note: "Currency of the last payment"]

  note: "Stores information about direct debit arrangements set up on accounts"
}

Table "consumer_banking"."mandate_related_information" {
  "consumer_banking_mandate_related_information_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for mandate information"]
  "consumer_banking_direct_debit_id" INTEGER [not null, ref: > consumer_banking.direct_debits.consumer_banking_direct_debit_id, note: "References the direct debit this mandate belongs to"]
  "mandate_id" INTEGER [not null, note: "Unique reference for the direct debit mandate"]
  "classification" VARCHAR(20) [note: "Classification of the mandate (e.g., personal, business)"]
  "category" VARCHAR(20) [note: "Purpose code for categorizing the payment type"]
  "first_payment_date_time" TIMESTAMP [note: "When the first payment is scheduled"]
  "recurring_payment_date_time" TIMESTAMP [note: "When recurring payments are scheduled"]
  "final_payment_date_time" TIMESTAMP [note: "When the final payment is scheduled (if applicable)"]
  "frequency_type" VARCHAR(20) [not null, note: "How often payments occur (e.g., monthly, weekly)"]
  "frequency_count_per_period" INT [note: "Number of payments in each period"]
  "frequency_point_in_time" VARCHAR(2) [note: "Specific day or time point for payments"]
  "reason" VARCHAR(256) [note: "Reason or purpose for the mandate"]

  note: "Stores detailed information about direct debit mandates including payment schedules"
}

Table "consumer_banking"."offers" {
  "consumer_banking_offer_id" SERIAL [pk, increment, note: "Unique identifier for each offer"]
  "consumer_banking_account_id" INTEGER [not null, ref: > consumer_banking.accounts.consumer_banking_account_id, note: "References the account this balance belongs to"]
  "offer_type" VARCHAR(20) [not null, note: "Type of offer (e.g., loan, investment, balance transfer)"]
  "description" VARCHAR(500) [note: "Detailed description of the offer"]
  "start_date_time" TIMESTAMP [note: "When the offer becomes available"]
  "end_date_time" TIMESTAMP [note: "When the offer expires"]
  "rate" NUMERIC(10,4) [note: "Interest rate associated with the offer"]
  "value" INT [note: "Numerical value related to the offer (e.g., reward points)"]
  "term" VARCHAR(500) [note: "Terms and conditions of the offer"]
  "url" VARCHAR(256) [note: "Web link for more information about the offer"]
  "amount" NUMERIC(18,5) [note: "Monetary amount of the offer"]
  "amount_currency" VARCHAR(3) [note: "Currency of the offer amount"]
  "fee" NUMERIC(18,5) [note: "Any fee associated with accepting the offer"]
  "fee_currency" VARCHAR(3) [note: "Currency of the fee"]

  note: "Stores promotional offers made to account holders"
}

Table "consumer_banking"."products" {
  "consumer_banking_product_id" SERIAL [pk, increment, note: "Unique identifier for each product"]
  "product_name" VARCHAR(350) [not null, note: "Name of the banking product"]
  "secondary_product_id" VARCHAR(70) [note: "Alternative identifier for the product"]
  "product_type" VARCHAR(30) [not null, note: "Type of product (e.g., savings, checking, loan)"]
  "marketing_state_id" VARCHAR(35) [note: "Identifier for marketing campaign or state"]

  note: "Stores information about banking products associated with accounts"
}

Table "consumer_banking"."other_product_types" {
  "consumer_banking_other_product_type_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each custom product type"]
  "consumer_banking_product_id" INTEGER [not null, ref: > consumer_banking.products.consumer_banking_product_id, note: "References the related product record"]
  "name" VARCHAR(350) [not null, note: "Name of the custom product type"]
  "description" VARCHAR(350) [not null, note: "Detailed description of the custom product type"]

  note: "Stores information about non-standard product types not covered in main categories"
}

Table "consumer_banking"."scheduled_payments" {
  "consumer_banking_scheduled_payment_id" SERIAL [pk, increment, note: "Unique identifier for each scheduled payment"]
  "consumer_banking_account_id" INTEGER [not null, ref: > consumer_banking.accounts.consumer_banking_account_id, note: "References the account this balance belongs to"]
  "scheduled_payment_date_time" TIMESTAMP [not null, note: "When the payment is scheduled to occur"]
  "scheduled_type" VARCHAR(10) [not null, note: "Type of scheduled payment (e.g., single, recurring)"]
  "reference" VARCHAR(35) [note: "Reference identifier for the payment"]
  "debtor_reference" VARCHAR(35) [note: "Reference identifier for the payer"]
  "instructed_amount" NUMERIC(18,5) [not null, note: "Amount to be paid"]
  "instructed_amount_currency" VARCHAR(3) [not null, note: "Currency of the payment amount"]

  note: "Stores information about one-time future-dated payments"
}

Table "consumer_banking"."scheduled_payment_creditor_agents" {
  "consumer_banking_scheduled_payment_creditor_agent_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each agent record"]
  "consumer_banking_scheduled_payment_id" INTEGER [not null, ref: > consumer_banking.scheduled_payments.consumer_banking_scheduled_payment_id, note: "References the scheduled payment"]
  "scheme_name" VARCHAR(50) [not null, note: "Identifier scheme for the receiving institution (e.g., BIC)"]
  "identification" VARCHAR(35) [not null, note: "Identifier of the receiving financial institution"]
  "name" VARCHAR(140) [note: "Name of the receiving financial institution"]
  "lei" VARCHAR(20) [note: "Legal Entity Identifier of the receiving institution"]

  note: "Stores information about financial institutions receiving scheduled payments"
}

Table "consumer_banking"."scheduled_payment_creditor_accounts" {
  "consumer_banking_scheduled_payment_creditor_account_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each creditor account"]
  "consumer_banking_scheduled_payment_id" INTEGER [not null, ref: > consumer_banking.scheduled_payments.consumer_banking_scheduled_payment_id, note: "References the scheduled payment"]
  "scheme_name" VARCHAR(50) [not null, note: "Account identifier scheme (e.g., IBAN)"]
  "identification" VARCHAR(256) [not null, note: "Account identifier for receiving the payment"]
  "name" VARCHAR(350) [note: "Name associated with the receiving account"]
  "secondary_identification" VARCHAR(34) [note: "Additional identification for the receiving account"]

  note: "Stores information about accounts receiving scheduled payments"
}

Table "consumer_banking"."standing_orders" {
  "consumer_banking_standing_order_id" SERIAL [pk, increment, note: "Unique identifier for each standing order"]
  "consumer_banking_account_id" INTEGER [not null, ref: > consumer_banking.accounts.consumer_banking_account_id, note: "References the account this balance belongs to"]
  "next_payment_date_time" TIMESTAMP [note: "When the next payment is scheduled"]
  "last_payment_date_time" TIMESTAMP [note: "When the most recent payment was made"]
  "standing_order_status_code" VARCHAR(5) [note: "Status code of the standing order (e.g., active, canceled)"]
  "first_payment_amount" NUMERIC(18,5) [note: "Amount of the first payment (if different)"]
  "first_payment_currency" VARCHAR(3) [note: "Currency of the first payment"]
  "next_payment_amount" NUMERIC(18,5) [note: "Amount of the next scheduled payment"]
  "next_payment_currency" VARCHAR(3) [note: "Currency of the next payment"]
  "last_payment_amount" NUMERIC(18,5) [note: "Amount of the most recent payment"]
  "last_payment_currency" VARCHAR(3) [note: "Currency of the most recent payment"]
  "final_payment_amount" NUMERIC(18,5) [note: "Amount of the final payment (if different)"]
  "final_payment_currency" VARCHAR(3) [note: "Currency of the final payment"]
  "supplementary_data" TEXT [note: "Additional information about the standing order"]

  note: "Stores information about recurring payment instructions (standing orders)"
}

Table "consumer_banking"."standing_order_creditor_agents" {
  "consumer_banking_standing_order_creditor_agent_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each agent record"]
  "consumer_banking_standing_order_id" INTEGER [not null, ref: > consumer_banking.standing_orders.consumer_banking_standing_order_id , note: "References the standing order"]
  "scheme_name" VARCHAR(50) [not null, note: "Identifier scheme for the receiving institution"]
  "identification" VARCHAR(35) [not null, note: "Identifier of the receiving financial institution"]
  "name" VARCHAR(140) [note: "Name of the receiving financial institution"]
  "lei" VARCHAR(20) [note: "Legal Entity Identifier of the receiving institution"]

  note: "Stores information about financial institutions receiving standing order payments"
}

Table "consumer_banking"."standing_order_creditor_accounts" {
  "consumer_banking_standing_order_creditor_account_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each creditor account"]
  "consumer_banking_standing_order_id" INTEGER [not null, ref: > consumer_banking.standing_orders.consumer_banking_standing_order_id, note: "References the standing order"]
  "scheme_name" VARCHAR(50) [not null, note: "Account identifier scheme (e.g., IBAN)"]
  "identification" VARCHAR(256) [not null, note: "Account identifier for receiving the payments"]
  "name" VARCHAR(350) [note: "Name associated with the receiving account"]
  "secondary_identification" VARCHAR(34) [note: "Additional identification for the receiving account"]

  note: "Stores information about accounts receiving standing order payments"
}

Table "consumer_banking"."statements" {
  "consumer_banking_statement_id" SERIAL [pk, increment, note: "Unique identifier for each statement"]
  "consumer_banking_account_id" INTEGER [not null, ref: > consumer_banking.accounts.consumer_banking_account_id, note: "References the account this balance belongs to"]
  "statement_reference" VARCHAR(35) [note: "Reference number for the statement"]
  "type" VARCHAR(20) [not null, note: "Type of statement (e.g., regular, interim, final)"]
  "start_date_time" TIMESTAMP [not null, note: "Start of the period covered by the statement"]
  "end_date_time" TIMESTAMP [not null, note: "End of the period covered by the statement"]
  "creation_date_time" TIMESTAMP [not null, note: "When the statement was generated"]

  note: "Stores information about account statements"
}

Table "consumer_banking"."statement_descriptions" {
  "consumer_banking_statement_description_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each description entry"]
  "consumer_banking_statement_id" INTEGER [not null, ref: > consumer_banking.statements.consumer_banking_statement_id, note: "References the statement this description belongs to"]
  "description" VARCHAR(500) [not null, note: "Descriptive text about the statement"]

  note: "Stores additional descriptive information for statements"
}

Table "consumer_banking"."statement_benefits" {
  "consumer_banking_statement_benefit_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each benefit record"]
  "consumer_banking_statement_id" INTEGER [not null, ref: > consumer_banking.statements.consumer_banking_statement_id, note: "References the statement this benefit belongs to"]
  "type" VARCHAR(50) [not null, note: "Type of benefit (e.g., cashback, rewards, insurance)"]
  "amount" NUMERIC(18,5) [not null, note: "Monetary value of the benefit"]
  "currency" VARCHAR(3) [not null, note: "Currency code for the benefit amount"]

  note: "Stores information about benefits received during a statement period"
}

Table "consumer_banking"."statement_fees" {
  "consumer_banking_statement_fee_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each fee record"]
  "consumer_banking_statement_id" INTEGER [not null, ref: > consumer_banking.statements.consumer_banking_statement_id, note: "References the statement this fee belongs to"]
  "description" VARCHAR(128) [note: "Description of the fee"]
  "credit_debit_indicator" VARCHAR(6) [not null, note: "Indicates if fee is a credit or debit"]
  "type" VARCHAR(50) [not null, note: "Type of fee (e.g., service, transaction, late payment)"]
  "rate" NUMERIC(10,4) [note: "Rate applied if fee is percentage-based"]
  "rate_type" VARCHAR(50) [note: "Type of rate (e.g., fixed, variable)"]
  "frequency" VARCHAR(50) [note: "How often the fee is applied (e.g., monthly, per transaction)"]
  "amount" NUMERIC(18,5) [not null, note: "Monetary amount of the fee"]
  "currency" VARCHAR(3) [not null, note: "Currency code for the fee amount"]

  note: "Stores information about fees charged during a statement period"
}

Table "consumer_banking"."statement_interests" {
  "consumer_banking_statement_interest_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each interest record"]
  "consumer_banking_statement_id" INTEGER [not null, ref: > consumer_banking.statements.consumer_banking_statement_id, note: "References the statement this interest belongs to"]
  "description" VARCHAR(128) [note: "Description of the interest"]
  "credit_debit_indicator" VARCHAR(6) [not null, note: "Indicates if interest is earned (credit) or charged (debit)"]
  "type" VARCHAR(50) [not null, note: "Type of interest (e.g., deposit, loan, credit card)"]
  "rate" NUMERIC(10,4) [note: "Interest rate applied"]
  "rate_type" VARCHAR(50) [note: "Type of rate (e.g., fixed, variable, introductory)"]
  "frequency" VARCHAR(50) [note: "How often interest is calculated (e.g., daily, monthly)"]
  "amount" NUMERIC(18,5) [not null, note: "Monetary amount of interest earned or charged"]
  "currency" VARCHAR(3) [not null, note: "Currency code for the interest amount"]

  note: "Stores information about interest earned or charged during a statement period"
}

Table "consumer_banking"."statement_amounts" {
  "consumer_banking_statement_amount_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each amount record"]
  "consumer_banking_statement_id" INTEGER [not null, ref: > consumer_banking.statements.consumer_banking_statement_id, note: "References the statement this amount belongs to"]
  "credit_debit_indicator" VARCHAR(6) [not null, note: "Indicates if amount is a credit or debit"]
  "type" VARCHAR(50) [not null, note: "Type of amount (e.g., opening balance, closing balance, payments)"]
  "amount" NUMERIC(18,5) [not null, note: "Monetary value"]
  "currency" VARCHAR(3) [not null, note: "Currency code for the amount"]
  "sub_type" VARCHAR(15) [note: "Further classification of the amount type"]

  note: "Stores various monetary amount totals associated with a statement"
}

Table "consumer_banking"."statement_date_times" {
  "consumer_banking_statement_date_time_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each date record"]
  "consumer_banking_statement_id" INTEGER [not null, ref: > consumer_banking.statements.consumer_banking_statement_id, note: "References the statement this date belongs to"]
  "date_time" TIMESTAMP [not null, note: "Date and time value"]
  "type" VARCHAR(50) [not null, note: "Type of date (e.g., payment due, minimum payment, cycle end)"]

  note: "Stores important dates associated with a statement"
}

Table "consumer_banking"."statement_rates" {
  "consumer_banking_statement_rate_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each rate record"]
  "consumer_banking_statement_id" INTEGER [not null, ref: > consumer_banking.statements.consumer_banking_statement_id, note: "References the statement this rate belongs to"]
  "rate" NUMERIC(10,4) [not null, note: "Rate value (e.g., interest rate, exchange rate)"]
  "type" VARCHAR(50) [not null, note: "Type of rate (e.g., APR, exchange, promotional)"]

  note: "Stores various rate information associated with a statement"
}

Table "consumer_banking"."statement_values" {
  "consumer_banking_statement_value_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each value record"]
  "consumer_banking_statement_id" INTEGER [not null, ref: > consumer_banking.statements.consumer_banking_statement_id, note: "References the statement this value belongs to"]
  "value" VARCHAR(40) [not null, note: "Value content (could be string or numeric depending on type)"]
  "type" VARCHAR(50) [not null, note: "Type of value (e.g., loyalty points, tier level, credit score)"]

  note: "Stores miscellaneous values associated with a statement that aren't monetary amounts"
}

Table "consumer_banking"."transactions" {
  "consumer_banking_transaction_id" SERIAL [pk, increment, note: "Unique identifier for each transaction"]
  "consumer_banking_account_id" INTEGER [not null, ref: > consumer_banking.accounts.consumer_banking_account_id, note: "References the account this balance belongs to"]
  "transaction_reference" VARCHAR(210) [note: "Reference code for the transaction"]
  "credit_debit_indicator" VARCHAR(6) [not null, note: "Indicates if transaction is a credit or debit"]
  "status" VARCHAR(10) [not null, note: "Status of the transaction (e.g., pending, booked, rejected)"]
  "transaction_mutability" VARCHAR(10) [note: "Whether the transaction can be changed (e.g., mutable, immutable)"]
  "transaction_date" TIMESTAMP [not null, note: "When the transaction was recorded in the books"]
  "value_date" TIMESTAMP [note: "When the transaction affects the account balance"]
  "description" VARCHAR(500) [note: "Additional information about the transaction"]
  "merchant_address" VARCHAR(70) [note: "Address associated with the transaction, if applicable"]
  "amount" NUMERIC(18,5) [not null, note: "Monetary amount of the transaction"]
  "currency" VARCHAR(3) [not null, note: "Currency code for the transaction amount"]
  "charge_amount" NUMERIC(18,5) [note: "Any fees associated with the transaction"]
  "charge_currency" VARCHAR(3) [note: "Currency code for the transaction fee"]
  "category" VARCHAR(20) [note: "Code classifying the overall purpose of the transaction"]
  "transaction_type" VARCHAR(20) [note: "Code classifying the specific purpose of the payment"]

  note: "Stores detailed information about account transactions"
}

Table "consumer_banking"."transaction_statement_references" {
  "consumer_banking_transaction_statement_reference_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each transaction-statement reference record"]
  "consumer_banking_transaction_id" INTEGER [not null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: "References the transaction this reference belongs to"]
  "statement_reference" VARCHAR(35) [not null, note: "Statement identifier that this transaction appears on"]

  note: "Links transactions to specific statements they appear on"
}

Table "consumer_banking"."transaction_currency_exchanges" {
  "consumer_banking_transaction_currency_exchange_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each currency exchange record"]
  "consumer_banking_transaction_id" INTEGER [not null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: "References the transaction this currency exchange belongs to"]
  "source_currency" VARCHAR(3) [not null, note: "Original currency of the transaction"]
  "target_currency" VARCHAR(3) [note: "Destination currency after conversion"]
  "unit_currency" VARCHAR(3) [note: "Currency used as the unit for the exchange rate"]
  "exchange_rate" NUMERIC(10,4) [not null, note: "Rate used for the currency conversion"]
  "contract_identification" VARCHAR(39) [note: "Identifier for any forex contract used"]
  "quotation_date" TIMESTAMP [note: "When the exchange rate was quoted"]
  "instructed_amount" NUMERIC(18,5) [note: "Original amount before conversion"]
  "instructed_amount_currency" VARCHAR(3) [note: "Currency of the original instructed amount"]

  note: "Stores currency exchange details for cross-currency transactions"
}

Table "consumer_banking"."transaction_bank_transaction_codes" {
  "consumer_banking_transaction_bank_transaction_code_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each transaction code record"]
  "consumer_banking_transaction_id" INTEGER [not null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: "References the transaction this code belongs to"]
  "code" VARCHAR(255) [not null, note: "Bank-specific transaction classification code"]
  "sub_code" VARCHAR(255) [not null, note: "Sub-classification code for more detailed categorization"]

  note: "Stores standardized bank transaction codes that categorize transactions"
}

Table "consumer_banking"."proprietary_transaction_codes" {
  "consumer_banking_proprietary_transaction_code_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each proprietary code record"]
  "consumer_banking_transaction_id" INTEGER [not null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: "References the transaction this code belongs to"]
  "code" VARCHAR(35) [not null, note: "Custom transaction code defined by the issuer"]
  "issuer" VARCHAR(35) [note: "Organization that defined the proprietary code"]

  note: "Stores non-standard proprietary codes for transaction categorization"
}

Table "consumer_banking"."transaction_balances" {
  "consumer_banking_transaction_balance_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each transaction balance record"]
  "consumer_banking_transaction_id" INTEGER [not null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: "References the transaction this balance belongs to"]
  "credit_debit_indicator" VARCHAR(6) [not null, note: "Indicates if balance is credit or debit"]
  "type" VARCHAR(20) [not null, note: "Type of balance (e.g., available, booked)"]
  "amount" NUMERIC(18,5) [not null, note: "Balance amount after the transaction"]
  "currency" VARCHAR(3) [not null, note: "Currency code for the balance amount"]

  note: "Stores account balance information at the time of each transaction"
}

Table "consumer_banking"."transaction_merchant_details" {
  "consumer_banking_transaction_merchant_detail_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each merchant detail record"]
  "consumer_banking_transaction_id" INTEGER [not null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: "References the transaction this merchant detail belongs to"]
  "merchant_name" VARCHAR(350) [not null, note: "Name of the merchant involved in the transaction"]
  "merchant_category_code" VARCHAR(20) [not null, note: "Standard code identifying the merchant's business category"]

  note: "Stores information about merchants involved in transactions"
}

Table "consumer_banking"."transaction_creditor_agents" {
  "consumer_banking_transaction_creditor_agent_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each creditor agent record"]
  "consumer_banking_transaction_id" INTEGER [not null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: "References the transaction this creditor agent belongs to"]
  "scheme_name" VARCHAR(50) [not null, note: "Identifier scheme for the receiving institution (e.g., BIC)"]
  "identification" VARCHAR(35) [not null, note: "Identifier of the receiving financial institution"]
  "name" VARCHAR(140) [note: "Name of the receiving financial institution"]
  "lei" VARCHAR(20) [note: "Legal Entity Identifier of the receiving institution"]

  note: "Stores information about financial institutions receiving funds in transactions"
}

Table "consumer_banking"."transaction_creditor_accounts" {
  "consumer_banking_transaction_creditor_account_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each creditor account record"]
  "consumer_banking_transaction_id" INTEGER [not null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: "References the transaction this creditor account belongs to"]
  "scheme_name" VARCHAR(50) [not null, note: "Account identifier scheme (e.g., IBAN, BBAN)"]
  "identification" VARCHAR(256) [not null, note: "Account identifier receiving the funds"]
  "name" VARCHAR(350) [note: "Name associated with the receiving account"]
  "secondary_identification" VARCHAR(34) [note: "Additional identification for the receiving account"]

  note: "Stores information about accounts receiving funds in transactions"
}

Table "consumer_banking"."transaction_debtor_agents" {
  "consumer_banking_transaction_debtor_agent_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each debtor agent record"]
  "consumer_banking_transaction_id" INTEGER [not null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: "References the transaction this debtor agent belongs to"]
  "scheme_name" VARCHAR(50) [not null, note: "Identifier scheme for the sending institution (e.g., BIC)"]
  "identification" VARCHAR(35) [not null, note: "Identifier of the sending financial institution"]
  "name" VARCHAR(140) [note: "Name of the sending financial institution"]
  "lei" VARCHAR(20) [note: "Legal Entity Identifier of the sending institution"]

  note: "Stores information about financial institutions sending funds in transactions"
}

Table "consumer_banking"."transaction_debtor_accounts" {
  "consumer_banking_transaction_debtor_account_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each debtor account record"]
  "consumer_banking_transaction_id" INTEGER [not null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: "References the transaction this debtor account belongs to"]
  "scheme_name" VARCHAR(50) [not null, note: "Account identifier scheme (e.g., IBAN, BBAN)"]
  "identification" VARCHAR(256) [not null, note: "Account identifier sending the funds"]
  "name" VARCHAR(350) [note: "Name associated with the sending account"]
  "secondary_identification" VARCHAR(34) [note: "Additional identification for the sending account"]

  note: "Stores information about accounts sending funds in transactions"
}

Table "consumer_banking"."transaction_card_instruments" {
  "consumer_banking_transaction_card_instrument_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each card instrument record"]
  "consumer_banking_transaction_id" INTEGER [not null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: "References the transaction this card instrument belongs to"]
  "card_scheme_name" VARCHAR(50) [not null, note: "Card network (e.g., Visa, Mastercard, Amex)"]
  "authorisation_type" VARCHAR(20) [note: "Type of authorization (e.g., PIN, signature, contactless)"]
  "name" VARCHAR(70) [note: "Name of the cardholder as printed on the card"]
  "identification" VARCHAR(34) [note: "Masked card number or other identifier"]

  note: "Stores information about payment cards used in transactions"
}

Table "consumer_banking"."transaction_ultimate_creditors" {
  "consumer_banking_transaction_ultimate_creditor_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each ultimate creditor record"]
  "consumer_banking_transaction_id" INTEGER [not null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: "References the transaction this ultimate creditor belongs to"]
  "name" VARCHAR(140) [not null, note: "Name of the final beneficiary/recipient of the funds"]
  "identification" VARCHAR(256) [note: "Identification code for the ultimate creditor"]
  "lei" VARCHAR(20) [note: "Legal Entity Identifier if the ultimate creditor is an organization"]
  "scheme_name" VARCHAR(50) [note: "Identification scheme for the creditor's identifier"]

  note: "Stores information about the final recipient of funds in a transaction chain"
}

Table "consumer_banking"."transaction_ultimate_debtors" {
  "consumer_banking_transaction_ultimate_debtor_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each ultimate debtor record"]
  "consumer_banking_transaction_id" INTEGER [not null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: "References the transaction this ultimate debtor belongs to"]
  "name" VARCHAR(140) [not null, note: "Name of the original party initiating the payment"]
  "identification" VARCHAR(256) [note: "Identification code for the ultimate debtor"]
  "lei" VARCHAR(20) [note: "Legal Entity Identifier if the ultimate debtor is an organization"]
  "scheme_name" VARCHAR(50) [note: "Identification scheme for the debtor's identifier"]

  note: "Stores information about the original party that initiated the payment in a transaction chain"
}

Table "consumer_banking"."account_statement_preferences" {
  "consumer_banking_account_id" INTEGER [not null, ref: > consumer_banking.accounts.consumer_banking_account_id]
  "frequency" VARCHAR(50) [not null]
  "format" VARCHAR(50) [not null]
  "communication_method" VARCHAR(50) [not null, default: 'EMAIL']
  "next_statement_date" DATE
  "last_statement_date" DATE
  "enterprise_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id]

  note: "Stores customer preferences for account statements"
}

TableGroup "Consumer Accounts" [color: #2D6512] {
  "consumer_banking"."accounts"
  "consumer_banking"."account_access_consents"
  "consumer_banking"."account_access_consents_permissions"
  "consumer_banking"."balances"
  "consumer_banking"."account_statement_preferences"

  note: "Tables related to consumer-facing account functionality"
}

TableGroup "Beneficiaries" [color: #2D6512] {
  "consumer_banking"."beneficiaries"
  "consumer_banking"."beneficiary_creditor_agents"
  "consumer_banking"."beneficiary_creditor_accounts"

  note: "Tables related to payment beneficiary management"
}

TableGroup "Offers & Products" [color: #2D6512] {
  "consumer_banking"."offers"
  "consumer_banking"."products"
  "consumer_banking"."other_product_types"

  note: "Tables related to banking products and promotional offers"
}

TableGroup "Statements" [color: #2D6512] {
  "consumer_banking"."statements"
  "consumer_banking"."statement_descriptions"
  "consumer_banking"."statement_benefits"
  "consumer_banking"."statement_fees"
  "consumer_banking"."statement_interests"
  "consumer_banking"."statement_amounts"
  "consumer_banking"."statement_date_times"
  "consumer_banking"."statement_rates"
  "consumer_banking"."statement_values"

  note: "Tables related to account statement generation and content"
}

TableGroup "Transactions" [color: #2D6512] {
  "consumer_banking"."transactions"
  "consumer_banking"."transaction_statement_references"
  "consumer_banking"."transaction_currency_exchanges"
  "consumer_banking"."transaction_bank_transaction_codes"
  "consumer_banking"."proprietary_transaction_codes"
  "consumer_banking"."transaction_balances"
  "consumer_banking"."transaction_merchant_details"
  "consumer_banking"."transaction_creditor_agents"
  "consumer_banking"."transaction_creditor_accounts"
  "consumer_banking"."transaction_debtor_agents"
  "consumer_banking"."transaction_debtor_accounts"
  "consumer_banking"."transaction_card_instruments"
  "consumer_banking"."transaction_ultimate_creditors"
  "consumer_banking"."transaction_ultimate_debtors"
  "consumer_banking"."standing_orders"
  "consumer_banking"."standing_order_creditor_agents"
  "consumer_banking"."standing_order_creditor_accounts"
  "consumer_banking"."scheduled_payments"
  "consumer_banking"."scheduled_payment_creditor_agents"
  "consumer_banking"."scheduled_payment_creditor_accounts"
  "consumer_banking"."direct_debits"
  "consumer_banking"."mandate_related_information"

  note: "Tables related to financial transactions, including payment details, currency exchanges, transaction codes, merchant information, and payment schedules"
}

//
// MORTGAGE SERVICES
//

Table "mortgage_services"."applications" {
  "mortgage_services_application_id" SERIAL [pk, increment, note: "Unique identifier for each mortgage application"]
  "customer_id" INTEGER [not null, ref: > enterprise.accounts.enterprise_account_id, note: "References the primary customer applying for the mortgage"]
  "application_type" VARCHAR(50) [not null, note: "Type of mortgage application (e.g., Purchase, Refinance, HELOC)"]
  "status" VARCHAR(20) [not null, note: "Current status in the application workflow"]
  "creation_date_time" TIMESTAMP [not null, note: "When the application was created"]
  "submission_date_time" TIMESTAMP [note: "When the application was formally submitted"]
  "last_updated_date_time" TIMESTAMP [not null, note: "When the application was last modified"]
  "loan_purpose" VARCHAR(50) [note: "Purpose of the loan (e.g., Primary Residence, Investment)"]
  "requested_loan_amount" NUMERIC(18,2) [not null, note: "Amount of financing requested"]
  "requested_loan_term_months" INTEGER [not null, note: "Requested duration of the loan in months"]
  "estimated_property_value" NUMERIC(18,2) [note: "Estimated value of the property"]
  "estimated_credit_score" INTEGER [note: "Estimated credit score of primary applicant"]
  "referral_source" VARCHAR(100) [note: "How the applicant learned about the mortgage product"]
  "loan_officer_id" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "References the loan officer handling the application"]
  "branch_id" INTEGER [ref: > enterprise.buildings.enterprise_building_id, note: "References the branch processing the application"]

  note: "Stores mortgage application details and tracks application status"
}

Table "mortgage_services"."application_borrowers" {
  "mortgage_services_application_borrower_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each application-borrower relationship"]
  "mortgage_services_application_id" INTEGER [pk, not null, ref: > mortgage_services.applications.mortgage_services_application_id, note: "References the mortgage application"]
  "mortgage_services_borrower_id" INTEGER [not null, ref: > mortgage_services.borrowers.mortgage_services_borrower_id, note: "References the borrower associated with this application"]
  "borrower_type" VARCHAR(20) [not null, note: "Role of this borrower (e.g., Primary, Co-Borrower)"]
  "relationship_to_primary" VARCHAR(50) [note: "Relationship of co-borrower to primary borrower"]
  "contribution_percentage" NUMERIC(5,2) [note: "Percentage of financial contribution to the loan"]

  note: "Junction table linking mortgage applications to borrowers, supporting multiple borrowers per application"
}

Table "mortgage_services"."borrowers" {
  "mortgage_services_borrower_id" SERIAL [pk, increment, note: "Unique identifier for each borrower"]
  "first_name" VARCHAR(100) [not null, note: "Borrower's first name"]
  "middle_name" VARCHAR(100) [note: "Borrower's middle name if applicable"]
  "last_name" VARCHAR(100) [not null, note: "Borrower's last name"]
  "date_of_birth" DATE [not null, note: "Borrower's date of birth"]
  "ssn" VARCHAR(11) [not null, note: "Borrower's Social Security Number"]
  "marital_status" VARCHAR(20) [note: "Borrower's marital status"]
  "email" VARCHAR(255) [not null, note: "Borrower's primary email address"]
  "phone" VARCHAR(20) [not null, note: "Borrower's primary phone number"]
  "mobile_phone" VARCHAR(20) [note: "Borrower's mobile phone number"]
  "current_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "References borrower's current address"]
  "mailing_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "References borrower's mailing address if different"]
  "previous_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "References borrower's previous address if relevant"]
  "citizenship_status" VARCHAR(50) [not null, note: "Borrower's citizenship or residency status"]
  "years_in_school" INTEGER [note: "Total years of education"]
  "dependent_count" INTEGER [note: "Number of dependents claimed by borrower"]

  note: "Stores detailed information about mortgage borrowers"
}

Table "mortgage_services"."borrower_employments" {
  "mortgage_services_employment_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each employment record"]
  "mortgage_services_borrower_id" INTEGER [not null, ref: > mortgage_services.borrowers.mortgage_services_borrower_id, note: "References the borrower this employment belongs to"]
  "employer_name" VARCHAR(150) [not null, note: "Name of the employer"]
  "position" VARCHAR(100) [not null, note: "Job title or position"]
  "enterprise_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "References the employer's address"]
  "phone" VARCHAR(20) [note: "Employer's phone number"]
  "employment_type" VARCHAR(30) [not null, note: "Type of employment arrangement"]
  "start_date" DATE [not null, note: "When employment began"]
  "end_date" DATE [note: "When employment ended, if applicable"]
  "is_current" BOOLEAN [not null, note: "Indicates if this is the borrower's current job"]
  "years_in_profession" INTEGER [note: "Total years in this profession, even at different employers"]
  "monthly_income" NUMERIC(18,2) [not null, note: "Gross monthly income from this employment"]

  note: "Tracks employment history and income sources for mortgage borrowers"
}

Table "mortgage_services"."borrower_incomes" {
  "mortgage_services_income_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each income record"]
  "mortgage_services_borrower_id" INTEGER [not null, ref: > mortgage_services.borrowers.mortgage_services_borrower_id, note: "References the borrower this income belongs to"]
  "income_type" VARCHAR(50) [not null, note: "Source or type of income"]
  "amount" NUMERIC(18,2) [not null, note: "Income amount"]
  "frequency" VARCHAR(20) [not null, note: "How often income is received"]
  "verification_status" VARCHAR(20) [not null, note: "Status of income verification process"]
  "verification_date" DATE [note: "When the income was verified"]

  note: "Tracks various income sources for mortgage borrowers beyond employment"
}

Table "mortgage_services"."borrower_assets" {
  "mortgage_services_asset_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each asset record"]
  "mortgage_services_borrower_id" INTEGER [not null, ref: > mortgage_services.borrowers.mortgage_services_borrower_id, note: "References the borrower this asset belongs to"]
  "asset_type" VARCHAR(50) [not null, note: "Type of asset (e.g., bank account, property)"]
  "institution_name" VARCHAR(100) [note: "Financial institution holding the asset"]
  "account_number" VARCHAR(50) [note: "Account number for financial assets"]
  "current_value" NUMERIC(18,2) [not null, note: "Current estimated value of the asset"]
  "verification_status" VARCHAR(20) [not null, note: "Status of asset verification process"]
  "verification_date" DATE [note: "When the asset was verified"]
  "property_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "References the address if asset is a property"]

  note: "Tracks assets owned by borrowers that may be relevant to mortgage qualification"
}

Table "mortgage_services"."borrower_liabilities" {
  "mortgage_services_liability_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each liability record"]
  "mortgage_services_borrower_id" INTEGER [not null, ref: > mortgage_services.borrowers.mortgage_services_borrower_id, note: "References the borrower this liability belongs to"]
  "liability_type" VARCHAR(50) [not null, note: "Type of debt or obligation"]
  "creditor_name" VARCHAR(100) [not null, note: "Name of the creditor"]
  "account_number" VARCHAR(50) [note: "Account number for the liability"]
  "monthly_payment" NUMERIC(18,2) [not null, note: "Regular monthly payment amount"]
  "current_balance" NUMERIC(18,2) [not null, note: "Current outstanding balance"]
  "original_amount" NUMERIC(18,2) [note: "Original amount of the liability"]
  "interest_rate" NUMERIC(6,3) [note: "Current interest rate on the liability"]
  "origination_date" DATE [note: "When the liability was originated"]
  "maturity_date" DATE [note: "When the liability is scheduled to be fully paid"]
  "verification_status" VARCHAR(20) [not null, note: "Status of liability verification process"]
  "verification_date" DATE [note: "When the liability was verified"]
  "will_be_paid_off" BOOLEAN [default: false, note: "Indicates if this liability will be paid off with the mortgage proceeds"]

  note: "Tracks debts and financial obligations of mortgage borrowers"
}

Table "mortgage_services"."properties" {
  "mortgage_services_property_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each property record"]
  "mortgage_services_application_id" INTEGER [not null, ref: > mortgage_services.applications.mortgage_services_application_id, note: "References the mortgage application this property is associated with"]
  "enterprise_address_id" INTEGER [not null, ref: > enterprise.addresses.enterprise_address_id, note: "References the property address"]
  "property_type" VARCHAR(50) [not null, note: "Type of property (e.g., Single Family, Condo)"]
  "occupancy_type" VARCHAR(30) [not null, note: "How the property will be used by the borrower"]
  "year_built" INTEGER [note: "Year the property was constructed"]
  "bedrooms" INTEGER [note: "Number of bedrooms"]
  "bathrooms" NUMERIC(3,1) [note: "Number of bathrooms (allows for half baths)"]
  "square_feet" INTEGER [note: "Total living area in square feet"]
  "lot_size" NUMERIC(10,2) [note: "Size of the property lot"]
  "hoa_dues" NUMERIC(10,2) [note: "Monthly homeowners association fees if applicable"]
  "is_new_construction" BOOLEAN [note: "Indicates if the property is newly constructed"]
  "construction_completion_date" DATE [note: "Expected completion date for new construction"]

  note: "Stores information about properties being purchased or refinanced"
}

Table "mortgage_services"."loans" {
  "mortgage_services_loan_id" SERIAL [pk, increment, note: "Unique identifier for each loan"]
  "mortgage_services_application_id" INTEGER [not null, ref: > mortgage_services.applications.mortgage_services_application_id, note: "References the mortgage application this loan is associated with"]
  "loan_type" VARCHAR(50) [not null, note: "Type of mortgage loan product"]
  "interest_rate_type" VARCHAR(20) [not null, note: "Whether the rate is fixed or adjustable"]
  "interest_rate" NUMERIC(6,3) [not null, note: "Annual percentage rate for the loan"]
  "loan_term_months" INTEGER [not null, note: "Duration of the loan in months"]
  "loan_amount" NUMERIC(18,2) [not null, note: "Principal amount of the loan"]
  "down_payment" NUMERIC(18,2) [note: "Amount paid upfront by the borrower"]
  "down_payment_percentage" NUMERIC(5,2) [note: "Down payment as a percentage of purchase price"]
  "estimated_closing_costs" NUMERIC(18,2) [note: "Estimated fees and costs to close the loan"]
  "estimated_monthly_payment" NUMERIC(18,2) [note: "Estimated regular payment including principal and interest"]
  "estimated_cash_to_close" NUMERIC(18,2) [note: "Total cash needed from borrower to close"]
  "private_mortgage_insurance" BOOLEAN [note: "Indicates if PMI is required"]
  "pmi_rate" NUMERIC(5,3) [note: "Rate for private mortgage insurance if applicable"]
  "escrow_amount" NUMERIC(18,2) [note: "Monthly amount collected for taxes and insurance"]
  "origination_date" DATE [note: "When the loan was originated"]
  "first_payment_date" DATE [note: "Due date of the first loan payment"]
  "maturity_date" DATE [note: "When the loan will be fully paid off"]

  note: "Stores detailed information about mortgage loans"
}

Table "mortgage_services"."loan_products" {
  "mortgage_services_loan_product_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each loan product"]
  "product_name" VARCHAR(100) [not null, note: "Marketing name of the loan product"]
  "product_code" VARCHAR(20) [not null, note: "Internal code identifying the loan product"]
  "description" TEXT [note: "Detailed description of the loan product and its features"]
  "loan_type" VARCHAR(50) [not null, note: "Category of loan (e.g., Conventional, FHA, VA, USDA)"]
  "interest_rate_type" VARCHAR(20) [not null, note: "Whether the rate is fixed or adjustable"]
  "base_interest_rate" NUMERIC(6,3) [not null, note: "Starting interest rate for this product"]
  "min_term_months" INTEGER [not null, note: "Minimum loan duration in months"]
  "max_term_months" INTEGER [not null, note: "Maximum loan duration in months"]
  "min_loan_amount" NUMERIC(18,2) [note: "Minimum principal amount for this product"]
  "max_loan_amount" NUMERIC(18,2) [note: "Maximum principal amount for this product"]
  "min_credit_score" INTEGER [note: "Minimum credit score required for approval"]
  "min_down_payment_percentage" NUMERIC(5,2) [note: "Minimum down payment as percentage of purchase price"]
  "requires_pmi" BOOLEAN [note: "Whether private mortgage insurance is required"]
  "is_active" BOOLEAN [not null, default: true, note: "Whether this product is currently offered"]

  note: "Defines mortgage loan products available to applicants"
}

Table "mortgage_services"."loan_rate_locks" {
  "mortgage_services_rate_lock_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each rate lock"]
  "mortgage_services_loan_id" INTEGER [not null, ref: > mortgage_services.loans.mortgage_services_loan_id, note: "References the loan this rate lock applies to"]
  "lock_date" TIMESTAMP [not null, note: "When the interest rate was locked"]
  "expiration_date" TIMESTAMP [not null, note: "When the rate lock expires"]
  "locked_interest_rate" NUMERIC(6,3) [not null, note: "The interest rate secured by this lock"]
  "lock_period_days" INTEGER [not null, note: "Duration of the lock in days"]
  "status" VARCHAR(20) [not null, note: "Current status of the rate lock"]
  "lock_fee" NUMERIC(10,2) [note: "Fee charged for the rate lock, if any"]
  "extension_date" TIMESTAMP [note: "Date the lock was extended, if applicable"]
  "extension_fee" NUMERIC(10,2) [note: "Fee charged for extending the lock, if any"]

  note: "Tracks interest rate locks for mortgage loans"
}

Table "mortgage_services"."documents" {
  "mortgage_services_document_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each document"]
  "mortgage_services_application_id" INTEGER [not null, ref: > mortgage_services.applications.mortgage_services_application_id, note: "References the application this document belongs to"]
  "document_type" VARCHAR(50) [not null, note: "Category of document (e.g., W2, Tax Return)"]
  "document_name" VARCHAR(255) [not null, note: "Filename or display name of the document"]
  "document_path" VARCHAR(500) [not null, note: "Storage location or path to access the document"]
  "upload_date" TIMESTAMP [not null, note: "When the document was uploaded"]
  "status" VARCHAR(20) [not null, note: "Current review status of the document"]
  "review_date" TIMESTAMP [note: "When the document was reviewed"]
  "reviewer_id" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "References the staff member who reviewed the document"]
  "expiration_date" DATE [note: "When the document expires or needs to be updated"]
  "notes" TEXT [note: "Additional information about the document"]

  note: "Stores and tracks documents submitted for mortgage applications"
}

Table "mortgage_services"."conditions" {
  "mortgage_services_condition_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each condition"]
  "mortgage_services_application_id" INTEGER [not null, ref: > mortgage_services.applications.mortgage_services_application_id, note: "References the application this condition applies to"]
  "condition_type" VARCHAR(50) [not null, note: "When the condition must be satisfied (e.g., Prior to Approval)"]
  "description" TEXT [not null, note: "Detailed explanation of what must be provided or resolved"]
  "status" VARCHAR(20) [not null, note: "Current status of the condition"]
  "created_date" TIMESTAMP [not null, note: "When the condition was created"]
  "created_by" INTEGER [not null, ref: > enterprise.associates.enterprise_associate_id, note: "References the staff member who created the condition"]
  "due_date" DATE [note: "Deadline for satisfying the condition"]
  "cleared_date" TIMESTAMP [note: "When the condition was satisfied or waived"]
  "cleared_by" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "References the staff member who cleared the condition"]

  note: "Tracks underwriting conditions that must be cleared for loan approval"
}

Table "mortgage_services"."appraisals" {
  "mortgage_services_appraisal_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each appraisal"]
  "mortgage_services_loan_id" INTEGER [not null, ref: > mortgage_services.loans.mortgage_services_loan_id, note: "References the loan this appraisal is for"]
  "mortgage_services_property_id" INTEGER [not null, ref: > mortgage_services.properties.mortgage_services_property_id, note: "References the property being appraised"]
  "appraisal_type" VARCHAR(50) [not null, note: "Type of appraisal being performed"]
  "ordered_date" TIMESTAMP [not null, note: "When the appraisal was ordered"]
  "appraiser_name" VARCHAR(100) [note: "Name of the assigned appraiser"]
  "appraisal_company" VARCHAR(100) [note: "Company performing the appraisal"]
  "inspection_date" DATE [note: "When the property was inspected"]
  "completion_date" DATE [note: "When the appraisal was completed"]
  "appraised_value" NUMERIC(18,2) [note: "Value determined by the appraisal"]
  "status" VARCHAR(20) [not null, note: "Current status of the appraisal process"]
  "appraisal_fee" NUMERIC(10,2) [note: "Fee charged for the appraisal"]
  "report_path" VARCHAR(500) [note: "Storage location of the appraisal report"]

  note: "Manages property appraisals for mortgage loans"
}

Table "mortgage_services"."credit_reports" {
  "mortgage_services_credit_report_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each credit report"]
  "mortgage_services_application_id" INTEGER [not null, ref: > mortgage_services.applications.mortgage_services_application_id, note: "References the application this credit report is for"]
  "mortgage_services_borrower_id" INTEGER [not null, ref: > mortgage_services.borrowers.mortgage_services_borrower_id, note: "References the borrower this credit report is for"]
  "report_date" TIMESTAMP [not null, note: "When the credit report was pulled"]
  "expiration_date" DATE [not null, note: "When the credit report expires"]
  "credit_score" INTEGER [note: "Credit score from the report"]
  "report_type" VARCHAR(20) [not null, note: "Type of credit report pulled"]
  "report_path" VARCHAR(500) [note: "Storage location of the credit report"]
  "status" VARCHAR(20) [not null, note: "Status of the credit report"]

  note: "Tracks credit reports pulled for mortgage applications"
}

Table "mortgage_services"."closing_disclosures" {
  "mortgage_services_disclosure_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each disclosure"]
  "mortgage_services_loan_id" INTEGER [not null, ref: > mortgage_services.loans.mortgage_services_loan_id, note: "References the loan this disclosure is for"]
  "disclosure_type" VARCHAR(50) [not null, note: "Type of disclosure document"]
  "created_date" TIMESTAMP [not null, note: "When the disclosure was created"]
  "sent_date" TIMESTAMP [note: "When the disclosure was sent to borrowers"]
  "received_date" TIMESTAMP [note: "When signed disclosure was received back"]
  "document_path" VARCHAR(500) [note: "Storage location of the disclosure document"]
  "loan_amount" NUMERIC(18,2) [not null, note: "Loan amount shown on disclosure"]
  "interest_rate" NUMERIC(6,3) [not null, note: "Interest rate shown on disclosure"]
  "monthly_payment" NUMERIC(18,2) [not null, note: "Monthly payment shown on disclosure"]
  "total_closing_costs" NUMERIC(18,2) [not null, note: "Total closing costs shown on disclosure"]
  "cash_to_close" NUMERIC(18,2) [not null, note: "Cash to close shown on disclosure"]

  note: "Manages closing disclosure documents required by regulations"
}

Table "mortgage_services"."closing_appointments" {
  "mortgage_services_appointment_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each appointment"]
  "mortgage_services_loan_id" INTEGER [not null, ref: > mortgage_services.loans.mortgage_services_loan_id, note: "References the loan this closing is for"]
  "scheduled_date" TIMESTAMP [not null, note: "When the closing is scheduled"]
  "location_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "References the address where closing will occur"]
  "status" VARCHAR(20) [not null, note: "Current status of the closing appointment"]
  "closing_agent" VARCHAR(100) [note: "Name of the closing agent"]
  "closing_company" VARCHAR(100) [note: "Company handling the closing"]
  "closing_fee" NUMERIC(10,2) [note: "Fee charged for closing services"]
  "actual_closing_date" TIMESTAMP [note: "When the closing actually occurred"]
  "notes" TEXT [note: "Additional information about the closing"]

  note: "Schedules and tracks mortgage closing appointments"
}

Table "mortgage_services"."closed_loans" {
  "mortgage_services_closed_loan_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each closed loan record"]
  "mortgage_services_loan_id" INTEGER [not null, ref: > mortgage_services.loans.mortgage_services_loan_id, note: "References the loan that was closed"]
  "closing_date" DATE [not null, note: "When loan documents were signed"]
  "funding_date" DATE [not null, note: "When loan funds were disbursed"]
  "final_loan_amount" NUMERIC(18,2) [not null, note: "Final principal amount of the loan"]
  "final_interest_rate" NUMERIC(6,3) [not null, note: "Final interest rate of the loan"]
  "final_monthly_payment" NUMERIC(18,2) [not null, note: "Final principal and interest payment"]
  "final_cash_to_close" NUMERIC(18,2) [not null, note: "Final amount borrower paid at closing"]
  "disbursement_date" DATE [note: "When funds were disbursed to relevant parties"]
  "first_payment_date" DATE [not null, note: "When first loan payment is due"]
  "maturity_date" DATE [not null, note: "When loan is scheduled to be fully paid off"]
  "recording_date" DATE [note: "When mortgage was recorded with government office"]
  "settlement_agent" VARCHAR(100) [note: "Name of the settlement agent"]
  "settlement_company" VARCHAR(100) [note: "Company handling the settlement"]

  note: "Records final details of closed mortgage loans"
}

Table "mortgage_services"."servicing_accounts" {
  "mortgage_services_servicing_account_id" SERIAL [pk, note: "Unique identifier for each servicing account"]
  "mortgage_services_loan_id" INTEGER [not null, ref: > mortgage_services.loans.mortgage_services_loan_id, note: "References the originated loan"]
  "account_number" VARCHAR(30) [not null, unique, note: "Customer-facing servicing account number"]
  "status" VARCHAR(20) [not null, note: "Current status of the loan being serviced"]
  "current_principal_balance" NUMERIC(18,2) [not null, note: "Current remaining principal balance"]
  "original_principal_balance" NUMERIC(18,2) [not null, note: "Original loan amount at closing"]
  "current_interest_rate" NUMERIC(6,3) [not null, note: "Current applicable interest rate"]
  "escrow_balance" NUMERIC(18,2) [note: "Current balance in escrow account"]
  "next_payment_due_date" DATE [not null, note: "When next payment is due"]
  "next_payment_amount" NUMERIC(18,2) [not null, note: "Amount due for next payment"]
  "last_payment_date" DATE [note: "When last payment was received"]
  "last_payment_amount" NUMERIC(18,2) [note: "Amount of last payment received"]
  "interest_paid_ytd" NUMERIC(18,2) [note: "Interest paid year-to-date"]
  "principal_paid_ytd" NUMERIC(18,2) [note: "Principal paid year-to-date"]
  "escrow_paid_ytd" NUMERIC(18,2) [note: "Escrow paid year-to-date"]
  "property_tax_due_date" DATE [note: "When next property tax payment is due"]
  "homeowners_insurance_due_date" DATE [note: "When next insurance payment is due"]
  "servicing_transferred_date" DATE [note: "When servicing was transferred to current servicer"]

  note: "Manages ongoing servicing of closed mortgage loans"
}

Table "mortgage_services"."payments" {
  "mortgage_services_payment_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each payment"]
  "mortgage_services_servicing_account_id" INTEGER [not null, ref: > mortgage_services.servicing_accounts.mortgage_services_servicing_account_id, note: "References the servicing account receiving the payment"]
  "payment_date" TIMESTAMP [not null, note: "When the payment was made"]
  "payment_type" VARCHAR(30) [not null, note: "Type of payment (e.g., Regular, Extra Principal, Escrow Only)"]
  "payment_method" VARCHAR(30) [not null, note: "Method used to make payment (e.g., ACH, Check, Online)"]
  "payment_amount" NUMERIC(18,2) [not null, note: "Total amount of the payment"]
  "principal_amount" NUMERIC(18,2) [not null, note: "Portion of payment applied to principal"]
  "interest_amount" NUMERIC(18,2) [not null, note: "Portion of payment applied to interest"]
  "escrow_amount" NUMERIC(18,2) [note: "Portion of payment applied to escrow"]
  "late_fee_amount" NUMERIC(10,2) [note: "Portion of payment applied to late fees"]
  "other_fee_amount" NUMERIC(10,2) [note: "Portion of payment applied to other fees"]
  "transaction_id" INTEGER [note: "Financial transaction identifier"]
  "confirmation_number" VARCHAR(50) [note: "Confirmation number provided to customer"]
  "status" VARCHAR(20) [not null, note: "Current status of the payment (e.g., Pending, Completed)"]

  note: "Tracks mortgage loan payments made by borrowers"
}

Table "mortgage_services"."escrow_disbursements" {
  "mortgage_services_disbursement_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each disbursement"]
  "mortgage_services_servicing_account_id" INTEGER [not null, ref: > mortgage_services.servicing_accounts.mortgage_services_servicing_account_id, note: "References the servicing account for this disbursement"]
  "disbursement_date" DATE [not null, note: "When the disbursement was made"]
  "disbursement_type" VARCHAR(30) [not null, note: "Type of disbursement (e.g., Property Tax, Insurance, PMI)"]
  "amount" NUMERIC(18,2) [not null, note: "Amount of the disbursement"]
  "payee_name" VARCHAR(100) [not null, note: "Entity receiving the disbursement"]
  "payee_account_number" VARCHAR(50) [note: "Account number for electronic payments"]
  "check_number" VARCHAR(20) [note: "Check number for paper disbursements"]
  "status" VARCHAR(20) [not null, note: "Current status of the disbursement"]
  "due_date" DATE [note: "When the payment was due"]
  "coverage_start_date" DATE [note: "Start of coverage period (for insurance payments)"]
  "coverage_end_date" DATE [note: "End of coverage period (for insurance payments)"]

  note: "Tracks payments made from escrow accounts for taxes, insurance, etc."
}

Table "mortgage_services"."escrow_analyses" {
  "mortgage_services_analysis_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each analysis"]
  "mortgage_services_servicing_account_id" INTEGER [not null, ref: > mortgage_services.servicing_accounts.mortgage_services_servicing_account_id, note: "References the servicing account being analyzed"]
  "analysis_date" DATE [not null, note: "When the analysis was performed"]
  "effective_date" DATE [not null, note: "When the analysis results take effect"]
  "previous_monthly_escrow" NUMERIC(18,2) [note: "Previous monthly escrow payment amount"]
  "new_monthly_escrow" NUMERIC(18,2) [not null, note: "New monthly escrow payment amount"]
  "escrow_shortage" NUMERIC(18,2) [note: "Amount by which the escrow account is short"]
  "escrow_surplus" NUMERIC(18,2) [note: "Amount by which the escrow account exceeds requirements"]
  "shortage_spread_months" INTEGER [note: "Number of months to spread shortage payment"]
  "surplus_refund_amount" NUMERIC(18,2) [note: "Amount of surplus to be refunded"]
  "status" VARCHAR(20) [not null, note: "Current status of the analysis"]
  "customer_notification_date" DATE [note: "When the customer was notified of the analysis results"]

  note: "Records periodic analyses of escrow accounts to determine payment adjustments"
}

Table "mortgage_services"."insurance_policies" {
  "mortgage_services_policy_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each policy"]
  "mortgage_services_servicing_account_id" INTEGER [not null, ref: > mortgage_services.servicing_accounts.mortgage_services_servicing_account_id, note: "References the servicing account this policy protects"]
  "insurance_type" VARCHAR(30) [not null, note: "Type of insurance coverage (e.g., Hazard, Flood)"]
  "carrier_name" VARCHAR(100) [not null, note: "Insurance company providing coverage"]
  "policy_number" VARCHAR(50) [not null, note: "Insurance policy identifier"]
  "coverage_amount" NUMERIC(18,2) [not null, note: "Amount of insurance coverage"]
  "annual_premium" NUMERIC(18,2) [not null, note: "Annual cost of the insurance policy"]
  "effective_date" DATE [not null, note: "Start date of policy coverage"]
  "expiration_date" DATE [not null, note: "End date of policy coverage"]
  "paid_through_escrow" BOOLEAN [not null, note: "Whether premium is paid from escrow account"]
  "agent_name" VARCHAR(100) [note: "Insurance agent's name"]
  "agent_phone" VARCHAR(20) [note: "Insurance agent's contact number"]
  "status" VARCHAR(20) [not null, note: "Current status of the policy"]

  note: "Tracks insurance policies protecting mortgaged properties"
}

Table "mortgage_services"."loan_modifications" {
  "mortgage_services_modification_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each modification"]
  "mortgage_services_servicing_account_id" INTEGER [not null, ref: > mortgage_services.servicing_accounts.mortgage_services_servicing_account_id, note: "References the servicing account being modified"]
  "modification_type" VARCHAR(50) [not null, note: "Type of modification (e.g., Rate Reduction, Term Extension)"]
  "request_date" DATE [not null, note: "When the modification was requested"]
  "approval_date" DATE [note: "When the modification was approved"]
  "effective_date" DATE [note: "When the modification takes effect"]
  "original_rate" NUMERIC(6,3) [note: "Interest rate before modification"]
  "new_rate" NUMERIC(6,3) [note: "Interest rate after modification"]
  "original_term_months" INTEGER [note: "Loan term in months before modification"]
  "new_term_months" INTEGER [note: "Loan term in months after modification"]
  "original_principal_balance" NUMERIC(18,2) [note: "Principal balance before modification"]
  "new_principal_balance" NUMERIC(18,2) [note: "Principal balance after modification"]
  "status" VARCHAR(20) [not null, note: "Current status of the modification request"]
  "reason" TEXT [note: "Reason for the modification"]

  note: "Tracks changes to loan terms after origination"
}

Table "mortgage_services"."customer_communications" {
  "mortgage_services_communication_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each communication"]
  "mortgage_services_servicing_account_id" INTEGER [ref: > mortgage_services.servicing_accounts.mortgage_services_servicing_account_id, note: "References the servicing account if communication is about servicing"]
  "mortgage_services_application_id" INTEGER [ref: > mortgage_services.applications.mortgage_services_application_id, note: "References the application if communication is about application"]
  "communication_date" TIMESTAMP [not null, note: "When the communication occurred"]
  "communication_type" VARCHAR(30) [not null, note: "Medium of communication (e.g., Email, Letter, Phone)"]
  "direction" VARCHAR(10) [not null, note: "Whether communication was incoming or outgoing"]
  "subject" VARCHAR(255) [note: "Subject or topic of communication"]
  "content" TEXT [note: "Content of the communication"]
  "sender" VARCHAR(100) [note: "Person or system that sent the communication"]
  "recipient" VARCHAR(100) [note: "Person or entity that received the communication"]
  "template_id" INTEGER [note: "Template used for the communication if applicable"]
  "status" VARCHAR(20) [not null, note: "Delivery status of the communication"]
  "document_path" VARCHAR(500) [note: "Storage location for communication document if applicable"]
  "related_to" VARCHAR(50) [note: "Purpose or context of the communication"]

  note: "Tracks all communications with customers throughout application and servicing"
}

Table "mortgage_services"."hmda_records" {
  "mortgage_services_hmda_record_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each HMDA record"]
  "mortgage_services_application_id" INTEGER [not null, ref: > mortgage_services.applications.mortgage_services_application_id, note: "References the associated mortgage application"]
  "mortgage_services_loan_id" INTEGER [ref: > mortgage_services.loans.mortgage_services_loan_id, note: "References the associated loan if originated"]
  "reporting_year" INTEGER [not null, note: "Calendar year for HMDA reporting"]
  "lei" VARCHAR(20) [not null, note: "Legal Entity Identifier of the reporting institution"]
  "loan_type" VARCHAR(79) [not null, note: "Code indicating loan type (1=Conventional, 2=FHA, 3=VA, 4=USDA)"]
  "loan_purpose" VARCHAR(81) [not null, note: "Code indicating loan purpose (1=Home purchase, 2=Home improvement, etc.)"]
  "preapproval" VARCHAR(20) [not null, note: "Code indicating if preapproval was requested"]
  "construction_method" VARCHAR(20) [not null, note: "Code indicating construction method (1=Site-built, 2=Manufactured)"]
  "occupancy_type" VARCHAR(20) [not null, note: "Code indicating intended property use (1=Primary, 2=Secondary, 3=Investment)"]
  "loan_amount" NUMERIC(18,2) [not null, note: "Amount of the loan or application"]
  "action_taken" VARCHAR(82) [not null, note: "Code indicating final disposition (1=Originated, 2=Approved not accepted, etc.)"]
  "action_taken_date" DATE [not null, note: "Date of final action"]
  "state" VARCHAR(2) [not null, note: "Two-letter state code for property location"]
  "county" VARCHAR(5) [not null, note: "County code for property location"]
  "census_tract" VARCHAR(11) [not null, note: "Census tract for property location"]
  "rate_spread" NUMERIC(6,3) [note: "Difference between APR and average prime offer rate"]
  "hoepa_status" INTEGER [not null, note: "Code indicating if loan is subject to HOEPA (1=Yes, 2=No)"]
  "lien_status" INTEGER [not null, note: "Code indicating lien position (1=First lien, 2=Subordinate lien)"]
  "credit_score_applicant" INTEGER [note: "Credit score of primary applicant"]
  "credit_score_co_applicant" INTEGER [note: "Credit score of co-applicant if applicable"]
  "credit_score_model" VARCHAR(60) [note: "Code indicating credit scoring model used"]
  "denial_reason1" VARCHAR(60) [note: "Primary reason for denial if applicable"]
  "denial_reason2" VARCHAR(60) [note: "Secondary reason for denial if applicable"]
  "denial_reason3" VARCHAR(60) [note: "Additional reason for denial if applicable"]
  "denial_reason4" VARCHAR(60) [note: "Additional reason for denial if applicable"]
  "total_loan_costs" NUMERIC(18,2) [note: "Total loan costs as disclosed"]
  "total_points_and_fees" NUMERIC(18,2) [note: "Total points and fees charged"]
  "origination_charges" NUMERIC(18,2) [note: "Total origination charges"]
  "discount_points" NUMERIC(18,2) [note: "Discount points paid by borrower"]
  "lender_credits" NUMERIC(18,2) [note: "Credits provided by lender"]
  "loan_term" INTEGER [note: "Term of the loan in months"]
  "intro_rate_period" INTEGER [note: "Months until first rate adjustment for ARMs"]
  "balloon_payment" VARCHAR(20) [note: "Whether loan has balloon payment feature (1=Yes, 2=No)"]
  "interest_only_payment" VARCHAR(20) [note: "Whether loan has interest-only payments (1=Yes, 2=No)"]
  "negative_amortization" VARCHAR(20) [note: "Whether loan allows negative amortization (1=Yes, 2=No)"]
  "other_non_amortizing_features" VARCHAR(20) [note: "Whether loan has other non-amortizing features (1=Yes, 2=No)"]
  "property_value" NUMERIC(18,2) [note: "Value of the property securing the loan"]
  "manufactured_home_secured_property_type" VARCHAR(20) [note: "Code for manufactured home property type"]
  "manufactured_home_land_property_interest" VARCHAR(20) [note: "Code for land ownership with manufactured home"]
  "total_units" INTEGER [not null, note: "Number of dwelling units in the property"]
  "multifamily_affordable_units" INTEGER [note: "Number of income-restricted units in multifamily property"]
  "submission_of_application" VARCHAR(90) [note: "How application was submitted (1=Direct, 2=Not direct)"]
  "initially_payable_to_institution" VARCHAR(20) [note: "Whether loan was initially payable to reporting institution"]
  "aus1" VARCHAR(60) [note: "Primary automated underwriting system used"]
  "aus2" VARCHAR(60) [note: "Secondary automated underwriting system used if applicable"]
  "aus3" VARCHAR(60) [note: "Additional automated underwriting system if applicable"]
  "aus4" VARCHAR(60) [note: "Additional automated underwriting system if applicable"]
  "aus5" VARCHAR(60) [note: "Additional automated underwriting system if applicable"]
  "reverse_mortgage" VARCHAR(20) [note: "Whether loan is a reverse mortgage (1=Yes, 2=No)"]
  "open_end_line_of_credit" VARCHAR(20) [note: "Whether loan is an open-end line of credit (1=Yes, 2=No)"]
  "business_or_commercial_purpose" VARCHAR(20) [note: "Whether loan is for business purpose (1=Yes, 2=No)"]
  "submission_status" VARCHAR(80) [not null, default: 'PENDING', note: "Status of HMDA submission for this record"]
  "last_submission_date" DATE [note: "When record was last submitted to regulators"]
  "last_modified_date" TIMESTAMP [not null, note: "When record was last modified"]
  "edit_status" VARCHAR(70) [not null, default: 'NOT_STARTED', note: "Status of edit checks for this record"]

  note: "Stores data required for Home Mortgage Disclosure Act (HMDA) regulatory reporting"
}

Table "mortgage_services"."hmda_applicant_demographics" {
  "mortgage_services_applicant_demographics_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each demographics record"]
  "mortgage_services_hmda_record_id" INTEGER [not null, ref: > mortgage_services.hmda_records.mortgage_services_hmda_record_id, note: "References the associated HMDA record"]
  "applicant_type" VARCHAR(20) [not null, note: "Indicates if record is for primary applicant or co-applicant"]
  ethnicity_1 VARCHAR(100) [note: "Primary ethnicity selection"]
  ethnicity_2 VARCHAR(100) [note: "Secondary ethnicity selection if applicable"]
  ethnicity_3 VARCHAR(100) [note: "Additional ethnicity selection if applicable"]
  ethnicity_4 VARCHAR(100) [note: "Additional ethnicity selection if applicable"]
  ethnicity_5 VARCHAR(100) [note: "Additional ethnicity selection if applicable"]
  "ethnicity_free_form" VARCHAR(100) [note: "Free-form text description of ethnicity"]
  "ethnicity_observed" VARCHAR(100) [note: "How ethnicity was determined if not provided by applicant"]
  race_1 VARCHAR(100) [note: "Primary race selection"]
  race_2 VARCHAR(100) [note: "Secondary race selection if applicable"]
  race_3 VARCHAR(100) [note: "Additional race selection if applicable"]
  race_4 VARCHAR(100) [note: "Additional race selection if applicable"]
  race_5 VARCHAR(100) [note: "Additional race selection if applicable"]
  "race_free_form" VARCHAR(100) [note: "Free-form text description of race"]
  "race_observed" VARCHAR(100) [note: "How race was determined if not provided by applicant"]
  "sex" VARCHAR(100) [note: "Applicant's reported sex"]
  "sex_observed" VARCHAR(100) [note: "How sex was determined if not provided by applicant"]
  "age" INTEGER [note: "Applicant's age in years"]
  "income" NUMERIC(18,2) [note: "Applicant's annual income in thousands of dollars"]
  "debt_to_income_ratio" NUMERIC(6,3) [note: "Applicant's debt-to-income ratio percentage"]

  note: "Stores demographic information about applicants for HMDA reporting"
}

Table "mortgage_services"."hmda_edits" {
  "mortgage_services_edit_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each edit finding"]
  "mortgage_services_hmda_record_id" INTEGER [not null, ref: > mortgage_services.hmda_records.mortgage_services_hmda_record_id, note: "References the HMDA record with the edit issue"]
  "edit_code" VARCHAR(20) [not null, note: "Standardized code identifying the specific edit rule"]
  "edit_type" VARCHAR(20) [not null, note: "Category of edit (SYNTACTICAL, VALIDITY, QUALITY, MACRO)"]
  "edit_description" TEXT [not null, note: "Description of the edit issue"]
  "status" VARCHAR(20) [not null, note: "Current status of the edit (OPEN, VERIFIED, CORRECTED)"]
  "created_date" TIMESTAMP [not null, note: "When the edit was first identified"]
  "resolved_date" TIMESTAMP [note: "When the edit was resolved if applicable"]
  "resolved_by" VARCHAR(50) [note: "User who resolved the edit"]
  "resolution_notes" TEXT [note: "Notes explaining how the edit was resolved"]

  note: "Tracks validation issues with HMDA data and their resolution"
}

Table "mortgage_services"."hmda_submissions" {
  "mortgage_services_submission_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each submission"]
  "reporting_year" INTEGER [not null, note: "Calendar year for this submission"]
  "reporting_period" VARCHAR(20) [not null, note: "Reporting period (ANNUAL, QUARTERLY_Q1, etc.)"]
  "institution_lei" VARCHAR(20) [not null, note: "Legal Entity Identifier of the reporting institution"]
  "submission_date" TIMESTAMP [not null, note: "When the submission was made"]
  "submission_status" VARCHAR(20) [not null, note: "Current status of the submission process"]
  "file_name" VARCHAR(255) [note: "Name of the submitted file"]
  "file_size" INTEGER [note: "Size of the submitted file in bytes"]
  "record_count" INTEGER [note: "Number of records in the submission"]
  "error_count" INTEGER [note: "Number of errors found in the submission"]
  "warning_count" INTEGER [note: "Number of warnings found in the submission"]
  "submitted_by" VARCHAR(100) [note: "User who made the submission"]
  "submission_notes" TEXT [note: "Additional notes about the submission"]
  "confirmation_number" VARCHAR(50) [note: "Confirmation number provided by the regulatory agency"]
  "completion_date" TIMESTAMP [note: "When the submission was accepted as complete"]

  Indexes {
    (reporting_year, reporting_period, institution_lei) [unique, note: "Ensures only one submission per period per institution"]
  }

  note: "Tracks submissions of HMDA data to regulatory agencies"
}

TableGroup "Mortgage" [color: #990D0D] {
  "mortgage_services"."applications"
  "mortgage_services"."application_borrowers"
  "mortgage_services"."borrowers"
  "mortgage_services"."borrower_employments"
  "mortgage_services"."borrower_incomes"
  "mortgage_services"."borrower_assets"
  "mortgage_services"."borrower_liabilities"
  "mortgage_services"."properties"
  "mortgage_services"."loans"

  note: "Tables related to mortgage applications and loan processing"
}

TableGroup "Loan & Products" [color: #990D0D] {
  "mortgage_services"."loan_products"
  "mortgage_services"."loan_rate_locks"

  note: "Tables related to mortgage product offerings and rate locks"
}

TableGroup "Processing & Underwriting" [color: #990D0D] {
  "mortgage_services"."documents"
  "mortgage_services"."conditions"
  "mortgage_services"."appraisals"
  "mortgage_services"."credit_reports"

  note: "Tables supporting the mortgage application review process"
}

TableGroup "Closing" [color: #990D0D] {
  "mortgage_services"."closing_disclosures"
  "mortgage_services"."closing_appointments"
  "mortgage_services"."closed_loans"

  note: "Tables related to mortgage loan closing activities"
}

TableGroup "Servicing" [color: #990D0D] {
  "mortgage_services"."servicing_accounts"
  "mortgage_services"."payments"
  "mortgage_services"."escrow_disbursements"
  "mortgage_services"."escrow_analyses"
  "mortgage_services"."insurance_policies"
  "mortgage_services"."loan_modifications"
  "mortgage_services"."customer_communications"

  note: "Tables related to ongoing management of closed mortgage loans"
}

TableGroup "Mortgage Regulatory" [color: #990D0D] {
  "mortgage_services"."hmda_records"
  "mortgage_services"."hmda_applicant_demographics"
  "mortgage_services"."hmda_edits"
  "mortgage_services"."hmda_submissions"

  note: "Tables related to regulatory reporting requirements for mortgage lending"
}

//
// CONSUMER LENDING
//

Table consumer_lending.loan_applications {
  "consumer_lending_application_id" SERIAL [pk, increment, note: "Unique identifier for the loan application"]
  "customer_id" INTEGER [not null, ref: > enterprise.accounts.enterprise_account_id, note: "Reference to enterprise.accounts"]
  "application_type" VARCHAR(50) [not null, note: "Personal, Auto, Student, Home Improvement, etc."]
  "status" VARCHAR(20) [not null, note: "Draft, Submitted, In Review, Approved, Denied, Cancelled"]
  "creation_date_time" TIMESTAMP [not null, note: "When application was initially created"]
  "submission_date_time" TIMESTAMP [note: "When application was submitted by customer"]
  "last_updated_date_time" TIMESTAMP [not null, note: "Last modification timestamp"]
  "requested_amount" NUMERIC(18,2) [not null, note: "Amount requested by applicant"]
  "requested_term_months" INTEGER [not null, note: "Loan term in months requested by applicant"]
  "loan_purpose" VARCHAR(100) [not null, note: "Purpose for the loan"]
  "estimated_credit_score" INTEGER [note: "Estimated or self-reported credit score"]
  "application_channel" VARCHAR(50) [note: "Online, Mobile, Branch, Phone"]
  "referral_source" VARCHAR(100) [note: "Marketing channel or referral source"]
  "decision_date_time" TIMESTAMP [note: "When final decision was made"]
  "decision_reason" VARCHAR(100) [note: "Primary reason for approval/denial"]
  "officer_id" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "Loan officer assigned to application"]
  "branch_id" INTEGER [ref: > enterprise.buildings.enterprise_building_id, note: "Branch where application was processed"]

  note: "Stores consumer lending applications for non-mortgage loans"
}

Table "consumer_lending"."application_applicants" {
  "consumer_lending_application_applicant_id" SERIAL [pk, increment, note: "Unique identifier for application-applicant relationship"]
  "consumer_lending_application_id" INTEGER [not null, note: "Reference to loan application"]
  "consumer_lending_applicant_id" INTEGER [not null, note: "Reference to applicant"]
  "applicant_type" VARCHAR(20) [not null, note: "Primary, Co-Applicant, Guarantor"]
  "relationship_to_primary" VARCHAR(50) [note: "Spouse, Relative, Friend, etc."]
  "contribution_percentage" NUMERIC(5,2) [note: "Percentage of loan responsibility"]

  Indexes {
    (consumer_lending_application_id, consumer_lending_applicant_id) [unique, note: "Ensures applicant only appears once per application"]
  }

  note: "Links loan applications to individual applicants, allowing for multiple applicants per application."
}

Table "consumer_lending"."applicants" {
  "consumer_lending_applicant_id" SERIAL [pk, increment, note: "Unique identifier for applicant, may link to parties table"]
  "first_name" VARCHAR(100) [not null, note: "Applicant's legal first name"]
  "middle_name" VARCHAR(100) [note: "Applicant's middle name"]
  "last_name" VARCHAR(100) [not null, note: "Applicant's legal last name"]
  "date_of_birth" DATE [not null, note: "Applicant's date of birth"]
  "ssn" VARCHAR(11) [not null, note: "Social Security Number, stored encrypted"]
  "marital_status" VARCHAR(20) [note: "Married, Single, Divorced, etc."]
  "email" VARCHAR(255) [not null, note: "Primary email address"]
  "phone" VARCHAR(20) [not null, note: "Primary phone number"]
  "mobile_phone" VARCHAR(20) [note: "Mobile phone number if different from primary"]
  "citizenship_status" VARCHAR(50) [not null, note: "US Citizen, Permanent Resident, etc."]
  "years_at_current_address" INTEGER [note: "Years at current residence"]
  "housing_status" VARCHAR(50) [not null, note: "Own, Rent, Live with Parents, etc."]
  "monthly_housing_expense" NUMERIC(10,2) [note: "Monthly housing payment amount"]
  "current_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "Reference to enterprise.addresses"]
  "mailing_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "Reference to enterprise.addresses if different from current"]
  "previous_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "Reference to enterprise.addresses for previous residence"]

  note: "Stores personal and contact information for loan applicants."
}

Table "consumer_lending"."applicant_employments" {
  "consumer_lending_employment_id" SERIAL [pk, increment, note: "Unique identifier for employment record"]
  "consumer_lending_applicant_id" INTEGER [not null, note: "Reference to applicant"]
  "employer_name" VARCHAR(150) [not null, note: "Name of employer"]
  "position" VARCHAR(100) [not null, note: "Job title or position"]
  "enterprise_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "Reference to enterprise.addresses for employer location"]
  "phone" VARCHAR(20) [note: "Employer phone number"]
  "employment_type" VARCHAR(30) [not null, note: "Full-time, Part-time, Self-employed"]
  "start_date" DATE [not null, note: "Employment start date"]
  "end_date" DATE [note: "Employment end date if applicable"]
  "is_current" BOOLEAN [not null, note: "Indicates if this is current employer"]
  "years_in_profession" INTEGER [note: "Total years in this profession/industry"]
  "monthly_income" NUMERIC(18,2) [not null, note: "Gross monthly income"]

  note: "Stores employment history and income details for loan applicants."
}

Table "consumer_lending"."applicant_incomes" {
  "consumer_lending_income_id" SERIAL [pk, increment, note: "Unique identifier for income record"]
  "consumer_lending_applicant_id" INTEGER [not null, note: "Reference to applicant"]
  "income_type" VARCHAR(50) [not null, note: "Salary, Self-employment, Rental, Alimony, etc."]
  "amount" NUMERIC(18,2) [not null, note: "Income amount"]
  "frequency" VARCHAR(20) [not null, note: "Monthly, Annual, etc."]
  "verification_status" VARCHAR(20) [not null, note: "Self-reported, Verified, Failed"]
  "verification_date" DATE [note: "Date income was verified"]

  note: "Tracks various income sources for loan applicants, including employment and other income types."
}

Table "consumer_lending"."applicant_assets" {
  "consumer_lending_asset_id" SERIAL [pk, increment, note: "Unique identifier for asset record"]
  "consumer_lending_applicant_id" INTEGER [not null, note: "Reference to applicant"]
  "asset_type" VARCHAR(50) [not null, note: "Checking, Savings, Investments, Property"]
  "institution_name" VARCHAR(100) [note: "Financial institution holding the asset"]
  "account_number" VARCHAR(50) [note: "Account number, stored encrypted"]
  "current_value" NUMERIC(18,2) [not null, note: "Current market value of asset"]
  "verification_status" VARCHAR(20) [not null, note: "Self-reported, Verified, Failed"]
  "verification_date" DATE [note: "Date asset was verified"]
  "property_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "Reference to enterprise.addresses if asset is property"]

  note: "Records assets owned by loan applicants, including financial accounts and property."
}

Table "consumer_lending"."applicant_liabilities" {
  "consumer_lending_liability_id" SERIAL [pk, increment, note: "Unique identifier for liability record"]
  "consumer_lending_applicant_id" INTEGER [not null, note: "Reference to applicant"]
  "liability_type" VARCHAR(50) [not null, note: "Credit Card, Auto Loan, Student Loan"]
  "creditor_name" VARCHAR(100) [not null, note: "Name of creditor"]
  "account_number" VARCHAR(50) [note: "Account number, stored encrypted"]
  "monthly_payment" NUMERIC(18,2) [not null, note: "Required monthly payment amount"]
  "current_balance" NUMERIC(18,2) [not null, note: "Current outstanding balance"]
  "original_amount" NUMERIC(18,2) [note: "Original loan or credit amount"]
  "interest_rate" NUMERIC(6,3) [note: "Current interest rate percentage"]
  "origination_date" DATE [note: "When debt was originated"]
  "maturity_date" DATE [note: "When debt will be paid off"]
  "verification_status" VARCHAR(20) [not null, note: "Self-reported, Verified, Failed"]
  "verification_date" DATE [note: "Date liability was verified"]
  "will_be_paid_off" BOOLEAN [default: false, note: "Indicates if debt will be paid off with loan"]

  note: "Tracks liabilities and debt obligations of loan applicants."
}

Table "consumer_lending"."loan_products" [note: "Contains definitions of loan product offerings"] {
  "consumer_lending_loan_product_id" SERIAL [pk, increment, note: "Unique identifier for loan product"]
  "product_name" VARCHAR(100) [not null, note: "Marketing name of the product"]
  "product_code" VARCHAR(20) [not null, note: "Internal code for the product"]
  "loan_type" VARCHAR(50) [not null, note: "Personal, Auto, Student, etc."]
  "description" TEXT [note: "Detailed product description"]
  "interest_rate_type" VARCHAR(20) [not null, note: "Fixed, Variable"]
  "base_interest_rate" NUMERIC(6,3) [not null, note: "Starting interest rate before adjustments"]
  "min_term_months" INTEGER [not null, note: "Minimum allowed term in months"]
  "max_term_months" INTEGER [not null, note: "Maximum allowed term in months"]
  "min_loan_amount" NUMERIC(18,2) [note: "Minimum allowed loan amount"]
  "max_loan_amount" NUMERIC(18,2) [note: "Maximum allowed loan amount"]
  "min_credit_score" INTEGER [note: "Minimum required credit score"]
  "origination_fee_type" VARCHAR(20) [note: "Flat, Percentage"]
  "origination_fee_amount" NUMERIC(10,2) [note: "Amount or percentage of origination fee"]
  "late_fee_type" VARCHAR(20) [note: "Flat, Percentage"]
  "late_fee_amount" NUMERIC(10,2) [note: "Amount or percentage of late fee"]
  "is_active" BOOLEAN [not null, default: true, note: "Whether product is currently offered"]
  "required_collateral" BOOLEAN [not null, default: false, note: "Whether collateral is required"]
  "early_repayment_penalty" BOOLEAN [not null, default: false, note: "Whether penalty applies for early payoff"]
  "disbursement_options" VARCHAR(100) [note: "Direct Deposit, Check, Dealer Direct, etc."]

  note: "Defines the various loan products offered to consumers, including their terms, fees, and features."
}

Table "consumer_lending"."product_eligibility_criteria" {
  "consumer_lending_criteria_id" SERIAL [pk, increment, note: "Unique identifier for eligibility criteria"]
  "consumer_lending_loan_product_id" INTEGER [not null, note: "Reference to loan product"]
  "criteria_type" VARCHAR(50) [not null, note: "Credit Score, Income, DTI, Employment"]
  "min_value" VARCHAR(50) [note: "Minimum value for eligibility"]
  "max_value" VARCHAR(50) [note: "Maximum value for eligibility"]
  "required" BOOLEAN [not null, note: "Whether this criteria is required"]
  "description" TEXT [note: "Description of the eligibility criteria"]

  note: "Specifies the eligibility criteria for each loan product, such as credit score, income, and employment requirements."
}

Table "consumer_lending"."risk_based_pricing_tiers" {
  "consumer_lending_pricing_tier_id" SERIAL [pk, increment, note: "Unique identifier for pricing tier"]
  "consumer_lending_loan_product_id" INTEGER [not null, note: "Reference to loan product"]
  "tier_name" VARCHAR(50) [not null, note: "A, B, C, D, etc."]
  "min_credit_score" INTEGER [note: "Minimum credit score for this tier"]
  "max_credit_score" INTEGER [note: "Maximum credit score for this tier"]
  "interest_rate_adjustment" NUMERIC(4,2) [not null, note: "Added to base rate"]
  "min_loan_amount" NUMERIC(18,2) [note: "Minimum loan amount for this tier"]
  "max_loan_amount" NUMERIC(18,2) [note: "Maximum loan amount for this tier"]
  "max_dti_ratio" NUMERIC(5,2) [note: "Maximum debt-to-income ratio allowed"]
  "is_active" BOOLEAN [not null, note: "Whether tier is currently in use"]

  note: "Defines pricing tiers based on risk factors, such as credit score and debt-to-income ratio, for loan products."
}

Table "consumer_lending"."credit_reports" {
  "consumer_lending_credit_report_id" SERIAL [pk, increment, note: "Unique identifier for credit report"]
  "consumer_lending_application_id" INTEGER [not null, note: "Reference to loan application"]
  "consumer_lending_applicant_id" INTEGER [not null, note: "Reference to applicant"]
  "report_date" TIMESTAMP [not null, note: "When report was pulled"]
  "expiration_date" DATE [not null, note: "When report expires"]
  "credit_score" INTEGER [note: "Primary credit score from report"]
  "report_type" VARCHAR(20) [not null, note: "Tri-merge, Single Bureau"]
  "bureau_name" VARCHAR(50) [note: "Equifax, Experian, TransUnion"]
  "report_reference" VARCHAR(100) [note: "External reference ID from bureau"]
  "report_path" VARCHAR(500) [note: "Path to stored report file"]
  "status" VARCHAR(20) [not null, note: "Completed, Failed, Pending"]

  note: "Stores credit reports obtained for loan applicants, including credit scores and other relevant information."
}

Table "consumer_lending"."credit_report_tradelines" {
  "consumer_lending_tradeline_id" SERIAL [pk, increment, note: "Unique identifier for tradeline"]
  "consumer_lending_credit_report_id" INTEGER [not null, note: "Reference to credit report"]
  "account_type" VARCHAR(50) [not null, note: "Mortgage, Installment, Revolving, etc."]
  "creditor_name" VARCHAR(100) [not null, note: "Name of creditor"]
  "account_number" VARCHAR(50) [note: "Masked account number"]
  "open_date" DATE [note: "When account was opened"]
  "current_balance" NUMERIC(18,2) [note: "Current balance on account"]
  "high_credit" NUMERIC(18,2) [note: "Highest balance or credit limit"]
  "credit_limit" NUMERIC(18,2) [note: "Credit limit if applicable"]
  "monthly_payment" NUMERIC(18,2) [note: "Monthly payment amount"]
  "payment_status" VARCHAR(50) [note: "Current, 30 days late, etc."]
  "days_past_due" INTEGER [note: "Current days past due"]
  "worst_delinquency" VARCHAR(20) [note: "Worst historical delinquency"]
  "worst_delinquency_date" DATE [note: "Date of worst delinquency"]

  note: "Contains details of individual tradelines (credit accounts) reported on a credit report."
}

Table "consumer_lending"."credit_inquiries" {
  "consumer_lending_inquiry_id" SERIAL [pk, increment, note: "Unique identifier for inquiry record"]
  "consumer_lending_credit_report_id" INTEGER [not null, note: "Reference to credit report"]
  "inquiry_date" DATE [not null, note: "Date of credit inquiry"]
  "creditor_name" VARCHAR(100) [not null, note: "Institution that made inquiry"]
  "inquiry_type" VARCHAR(50) [note: "Hard inquiry, soft inquiry"]

  note: "Records inquiries made on a credit report, indicating potential credit applications or checks."
}

Table "consumer_lending"."public_records" {
  "consumer_lending_record_id" SERIAL [pk, increment, note: "Unique identifier for public record"]
  "consumer_lending_credit_report_id" INTEGER [not null, note: "Reference to credit report"]
  "record_type" VARCHAR(50) [not null, note: "Bankruptcy, Lien, Judgment"]
  "status" VARCHAR(50) [not null, note: "Active, Satisfied, Discharged"]
  "filing_date" DATE [not null, note: "Date record was filed"]
  "amount" NUMERIC(18,2) [note: "Amount of judgment or lien"]
  "reference_number" VARCHAR(100) [note: "Court or filing reference number"]

  note: "Stores public records, such as bankruptcies, liens, and judgments, associated with a credit report."
}

Table "consumer_lending"."decision_models" {
  "consumer_lending_model_id" SERIAL [pk, increment, note: "Unique identifier for decision model"]
  "model_name" VARCHAR(100) [not null, note: "Name of the model"]
  "model_version" VARCHAR(20) [not null, note: "Version of the model"]
  "model_type" VARCHAR(50) [not null, note: "Credit Score, Income Verification, Fraud Detection"]
  "is_active" BOOLEAN [not null, note: "Whether model is in active use"]
  "effective_date" DATE [not null, note: "When model became effective"]
  "expiration_date" DATE [note: "When model expires"]
  "description" TEXT [note: "Description of the model and its purpose"]

  note: "Contains information about the decision models used to evaluate loan applications, including credit scoring, income verification, and fraud detection models."
}

Table "consumer_lending"."application_decisions" {
  "consumer_lending_decision_id" SERIAL [pk, increment, note: "Unique identifier for decision"]
  "consumer_lending_application_id" INTEGER [not null, note: "Reference to loan application"]
  "decision_type" VARCHAR(50) [not null, note: "Prequalification, Initial, Final"]
  "decision_result" VARCHAR(20) [not null, note: "Approved, Denied, Pending Review"]
  "decision_date_time" TIMESTAMP [not null, note: "When decision was made"]
  "decision_by" VARCHAR(50) [note: "User ID or System that made decision"]
  "consumer_lending_model_id" INTEGER [note: "Reference to decision model used"]
  "decision_score" NUMERIC(10,2) [note: "Numeric score from decision model"]
  "consumer_lending_pricing_tier_id" INTEGER [note: "Reference to pricing tier if approved"]
  "approved_amount" NUMERIC(18,2) [note: "Approved loan amount"]
  "approved_term_months" INTEGER [note: "Approved loan term in months"]
  "approved_interest_rate" NUMERIC(6,3) [note: "Approved interest rate"]
  "approved_monthly_payment" NUMERIC(18,2) [note: "Estimated monthly payment"]
  "conditional_approval" BOOLEAN [note: "Whether approval has conditions"]
  "expires_date" DATE [note: "When approval or prequalification expires"]
  "notes" TEXT [note: "Additional decision notes"]

  note: "Records the decisions made on loan applications, including approvals, denials, and pre-qualifications."
}

Table "consumer_lending"."decision_reasons" {
  "consumer_lending_decision_reason_id" SERIAL [pk, increment, note: "Unique identifier for decision reason"]
  "consumer_lending_decision_id" INTEGER [not null, note: "Reference to application decision"]
  "reason_code" VARCHAR(20) [not null, note: "Standard reason code"]
  "reason_description" VARCHAR(255) [not null, note: "Description of reason"]
  "sequence" INTEGER [not null, note: "Order of importance for reason"]

  note: "Provides specific reasons for the decisions made on loan applications, linked to the application_decisions table."
}

Table "consumer_lending"."adverse_action_notices" {
  "consumer_lending_notice_id" SERIAL [pk, increment, note: "Unique identifier for notice"]
  "consumer_lending_application_id" INTEGER [not null, note: "Reference to loan application"]
  "generated_date" TIMESTAMP [not null, note: "When notice was generated"]
  "sent_date" TIMESTAMP [note: "When notice was sent to applicant"]
  "delivery_method" VARCHAR(50) [not null, note: "Email, Mail, Portal"]
  "notice_path" VARCHAR(500) [note: "Path to stored notice document"]
  "status" VARCHAR(20) [not null, note: "Generated, Sent, Delivered"]

  note: "Tracks adverse action notices sent to applicants when their loan applications are denied."
}

Table "consumer_lending"."vehicles" {
  "vehicle_id" SERIAL [pk, increment, note: "Unique identifier for vehicle"]
  "consumer_lending_application_id" INTEGER [not null, note: "Reference to loan application"]
  "year" INTEGER [not null, note: "Vehicle model year"]
  "make" VARCHAR(50) [not null, note: "Vehicle manufacturer"]
  "model" VARCHAR(50) [not null, note: "Vehicle model"]
  "trim" VARCHAR(50) [note: "Vehicle trim level"]
  "vin" VARCHAR(17) [note: "Vehicle Identification Number"]
  "vehicle_type" VARCHAR(20) [not null, note: "New, Used"]
  "mileage" INTEGER [note: "Current odometer reading"]
  "purchase_price" NUMERIC(18,2) [not null, note: "Agreed purchase price"]
  "down_payment" NUMERIC(18,2) [note: "Down payment amount"]
  "trade_in_value" NUMERIC(18,2) [note: "Value of trade-in vehicle"]
  "trade_in_balance_owed" NUMERIC(18,2) [note: "Loan balance on trade-in"]
  "dealer_name" VARCHAR(100) [note: "Name of dealership"]
  "dealer_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "Reference to enterprise.addresses"]
  "is_private_sale" BOOLEAN [not null, default: false, note: "Whether private sale or dealer"]
  "valuation_source" VARCHAR(50) [note: "KBB, NADA, etc."]
  "valuation_amount" NUMERIC(18,2) [note: "Third-party valuation amount"]
  "valuation_date" DATE [note: "Date of valuation"]

  note: "Stores information about vehicles involved in auto loan applications, including details like make, model, and purchase price."
}

Table "consumer_lending"."loan_accounts" {
  "loan_account_id" SERIAL [pk, increment, note: "Unique identifier for loan account"]
  "consumer_lending_application_id" INTEGER [not null, note: "Reference to loan application"]
  "consumer_lending_loan_product_id" INTEGER [not null, note: "Reference to loan product"]
  "account_number" VARCHAR(30) [not null, unique, note: "Customer-facing account number"]
  "status" VARCHAR(20) [not null, note: "Active, Paid Off, Charged Off, etc."]
  "origination_date" DATE [not null, note: "Date loan was originated"]
  "funding_date" DATE [not null, note: "Date loan was funded"]
  "maturity_date" DATE [not null, note: "Scheduled loan payoff date"]
  "first_payment_date" DATE [not null, note: "Date first payment is due"]
  "original_principal_balance" NUMERIC(18,2) [not null, note: "Initial loan amount"]
  "current_principal_balance" NUMERIC(18,2) [not null, note: "Current principal balance"]
  "original_interest_rate" NUMERIC(6,3) [not null, note: "Interest rate at origination"]
  "current_interest_rate" NUMERIC(6,3) [not null, note: "Current interest rate"]
  "original_term_months" INTEGER [not null, note: "Original loan term in months"]
  "remaining_term_months" INTEGER [not null, note: "Remaining months on loan"]
  "payment_amount" NUMERIC(18,2) [not null, note: "Regular payment amount"]
  "payment_frequency" VARCHAR(20) [not null, note: "Monthly, Bi-weekly"]
  "next_payment_date" DATE [not null, note: "Next payment due date"]
  "next_payment_amount" NUMERIC(18,2) [not null, note: "Amount due for next payment"]
  "past_due_amount" NUMERIC(18,2) [not null, default: 0, note: "Current past due amount"]
  "days_past_due" INTEGER [not null, default: 0, note: "Current days past due"]
  "total_fees_charged" NUMERIC(18,2) [not null, default: 0, note: "Sum of all fees charged"]
  "total_fees_paid" NUMERIC(18,2) [not null, default: 0, note: "Sum of all fees paid"]
  "accrued_interest" NUMERIC(18,2) [not null, default: 0, note: "Current accrued unpaid interest"]
  "interest_paid_ytd" NUMERIC(18,2) [not null, default: 0, note: "Interest paid year to date"]
  "principal_paid_ytd" NUMERIC(18,2) [not null, default: 0, note: "Principal paid year to date"]
  "interest_paid_total" NUMERIC(18,2) [not null, default: 0, note: "Total interest paid life of loan"]
  "principal_paid_total" NUMERIC(18,2) [not null, default: 0, note: "Total principal paid life of loan"]
  "late_count_30" INTEGER [not null, default: 0, note: "Count of 30+ day late payments"]
  "late_count_60" INTEGER [not null, default: 0, note: "Count of 60+ day late payments"]
  "late_count_90" INTEGER [not null, default: 0, note: "Count of 90+ day late payments"]
  "auto_pay_enabled" BOOLEAN [not null, default: false, note: "Whether automatic payments are active"]
  "servicing_transferred_date" DATE [note: "Date servicing was transferred if applicable"]

  note: "Stores information about active loan accounts, including loan details, payment history, and current status."
}

Table "consumer_lending"."payment_schedules" {
  "payment_schedule_id" SERIAL [pk, increment, note: "Unique identifier for schedule entry"]
  "consumer_lending_loan_account_id" INTEGER [not null, ref: > consumer_lending.loan_accounts.loan_account_id, note: "Reference to loan account"]
  "payment_number" INTEGER [not null, note: "Sequential payment number"]
  "scheduled_date" DATE [not null, note: "Date payment is scheduled"]
  "payment_amount" NUMERIC(18,2) [not null, note: "Total payment amount due"]
  "principal_amount" NUMERIC(18,2) [not null, note: "Portion applied to principal"]
  "interest_amount" NUMERIC(18,2) [not null, note: "Portion applied to interest"]
  "beginning_balance" NUMERIC(18,2) [not null, note: "Principal balance before payment"]
  "ending_balance" NUMERIC(18,2) [not null, note: "Principal balance after payment"]
  "status" VARCHAR(20) [not null, note: "Scheduled, Paid, Past Due"]
  "actual_payment_date" DATE [note: "Date payment was actually made"]
  "actual_payment_id" INTEGER [note: "Reference to loan_payments if paid"]

  Indexes {
    (consumer_lending_loan_account_id, payment_number) [unique, note: "Ensures unique payment numbers per loan"]
  }

  note: "Contains the payment schedule for each loan account, including scheduled dates, amounts, and payment status."
}

Table "consumer_lending"."disbursements" {
  "disbursement_id" SERIAL [pk, increment, note: "Unique identifier for disbursement"]
  "consumer_lending_loan_account_id" INTEGER [not null, ref: > consumer_lending.loan_accounts.loan_account_id, note: "Reference to loan account"]
  "disbursement_date" DATE [not null, note: "Date funds were disbursed"]
  "disbursement_amount" NUMERIC(18,2) [not null, note: "Amount disbursed"]
  "disbursement_method" VARCHAR(50) [not null, note: "ACH, Check, Wire"]
  "disbursement_status" VARCHAR(20) [not null, note: "Pending, Completed, Failed"]
  "recipient_name" VARCHAR(100) [not null, note: "Name of recipient"]
  "recipient_account_type" VARCHAR(20) [note: "Checking, Savings"]
  "recipient_account_number" VARCHAR(50) [note: "Recipient account number, encrypted"]
  "recipient_routing_number" VARCHAR(9) [note: "Recipient routing number"]
  "check_number" VARCHAR(20) [note: "Check number if applicable"]
  "tracking_number" VARCHAR(50) [note: "Tracking or reference number"]
  "notes" TEXT [note: "Additional disbursement notes"]

  note: "Tracks the disbursement of funds for loan accounts, including the date, amount, method, and recipient information."
}

Table "consumer_lending"."loan_payments" {
  "consumer_lending_payment_id" SERIAL [pk, increment, note: "Unique identifier for payment"]
  "consumer_lending_loan_account_id" INTEGER [not null, ref: > consumer_lending.loan_accounts.loan_account_id, note: "Reference to loan account"]
  "payment_date" TIMESTAMP [not null, note: "Date/time payment was received"]
  "payment_effective_date" DATE [not null, note: "Date payment is effective"]
  "payment_type" VARCHAR(30) [not null, note: "Regular, Extra Principal, Late"]
  "payment_method" VARCHAR(30) [not null, note: "ACH, Check, Online, etc."]
  "payment_amount" NUMERIC(18,2) [not null, note: "Total payment amount"]
  "principal_amount" NUMERIC(18,2) [not null, note: "Amount applied to principal"]
  "interest_amount" NUMERIC(18,2) [not null, note: "Amount applied to interest"]
  "late_fee_amount" NUMERIC(10,2) [not null, default: 0, note: "Amount applied to late fees"]
  "other_fee_amount" NUMERIC(10,2) [not null, default: 0, note: "Amount applied to other fees"]
  "transaction_id" VARCHAR(50) [note: "External transaction identifier"]
  "confirmation_number" VARCHAR(50) [note: "Payment confirmation number"]
  "payment_status" VARCHAR(20) [not null, note: "Pending, Completed, Returned, Canceled"]
  "returned_reason" VARCHAR(100) [note: "Reason for payment return if applicable"]
  "returned_date" DATE [note: "Date payment was returned if applicable"]

  note: "Records payments made on loan accounts, including payment date, amount, method, and status."
}

Table "consumer_lending"."loan_fees" {
  "consumer_lending_fee_id" SERIAL [pk, increment, note: "Unique identifier for fee"]
  "consumer_lending_loan_account_id" INTEGER [not null, ref: > consumer_lending.loan_accounts.loan_account_id, note: "Reference to loan account"]
  "fee_type" VARCHAR(50) [not null, note: "Late Fee, NSF Fee, Origination Fee"]
  "fee_date" DATE [not null, note: "Date fee was assessed"]
  "fee_amount" NUMERIC(10,2) [not null, note: "Fee amount"]
  "fee_status" VARCHAR(20) [not null, note: "Pending, Charged, Waived, Paid"]
  "waived_date" DATE [note: "Date fee was waived if applicable"]
  "waived_by" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "User who waived the fee"]
  "waiver_reason" VARCHAR(255) [note: "Reason fee was waived"]
  "paid_date" DATE [note: "Date fee was paid"]
  "consumer_lending_payment_id" INTEGER [note: "Reference to loan_payments if paid"]

  note: "Tracks fees charged to loan accounts, including fee type, amount, status, and payment details."
}

Table "consumer_lending"."loan_collateral" {
  "consumer_lending_collateral_id" SERIAL [pk, increment, note: "Unique identifier for collateral"]
  "loan_account_id" INTEGER [not null, ref: > consumer_lending.loan_accounts.loan_account_id, note: "Reference to loan account"]
  "collateral_type" VARCHAR(50) [not null, note: "Vehicle, Property, Deposit Account"]
  "description" VARCHAR(255) [not null, note: "Description of collateral"]
  "value" NUMERIC(18,2) [not null, note: "Estimated value of collateral"]
  "valuation_date" DATE [not null, note: "Date of valuation"]
  "vehicle_id" INTEGER [note: "Reference to vehicles table if applicable"]
  "property_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "Reference to enterprise.addresses if property"]
  "deposit_account_id" INTEGER [ref: > enterprise.accounts.enterprise_account_id, note: "Reference to enterprise.accounts if deposit"]
  "lien_position" INTEGER [note: "Priority of lien"]
  "lien_recording_date" DATE [note: "Date lien was recorded"]
  "lien_recording_number" VARCHAR(50) [note: "Lien recording reference number"]
  "insurance_required" BOOLEAN [not null, note: "Whether insurance is required"]
  "insurance_expiration_date" DATE [note: "Expiration date of insurance policy"]

  note: "Stores information about collateral used to secure loans, including type, value, and insurance requirements."
}

Table "consumer_lending"."loan_insurance" {
  "consumer_lending_insurance_id" SERIAL [pk, increment, note: "Unique identifier for insurance record"]
  "consumer_lending_loan_account_id" INTEGER [not null, ref: > consumer_lending.loan_accounts.loan_account_id, note: "Reference to loan account"]
  "consumer_lending_collateral_id" INTEGER [note: "Reference to loan_collateral if associated with specific collateral"]
  "insurance_type" VARCHAR(50) [not null, note: "Auto, Hazard, Credit Life, Disability"]
  "carrier_name" VARCHAR(100) [not null, note: "Name of insurance company"]
  "policy_number" VARCHAR(50) [not null, note: "Insurance policy number"]
  "coverage_amount" NUMERIC(18,2) [not null, note: "Amount of coverage"]
  "premium_amount" NUMERIC(18,2) [not null, note: "Cost of insurance premium"]
  "premium_frequency" VARCHAR(20) [not null, note: "Annual, Monthly"]
  "effective_date" DATE [not null, note: "Policy start date"]
  "expiration_date" DATE [not null, note: "Policy end date"]
  "beneficiary" VARCHAR(100) [note: "Named beneficiary if applicable"]
  "status" VARCHAR(20) [not null, note: "Active, Lapsed, Canceled"]

  note: "Stores information about insurance policies associated with loan accounts or collateral."
}

Table "consumer_lending"."loan_documents" {
  "consumer_lending_document_id" SERIAL [pk, increment, note: "Unique identifier for document"]
  "consumer_lending_application_id" INTEGER [note: "Reference to loan application if applicable"]
  "loan_account_id" INTEGER [ref: > consumer_lending.loan_accounts.loan_account_id, note: "Reference to loan account if applicable"]
  "document_type" VARCHAR(50) [not null, note: "Application, Contract, Statement, etc."]
  "document_name" VARCHAR(255) [not null, note: "File name or title"]
  "document_path" VARCHAR(500) [not null, note: "Path to stored document"]
  "upload_date" TIMESTAMP [not null, note: "When document was created/uploaded"]
  "status" VARCHAR(20) [not null, note: "Pending, Reviewed, Accepted, Rejected"]
  "review_date" TIMESTAMP [note: "When document was reviewed"]
  "reviewer_id" INTEGER [note: "User who reviewed document"]
  "expiration_date" DATE [note: "Document expiration date if applicable"]
  "notes" TEXT [note: "Additional document notes"]

  note: "Tracks documents related to loan applications and accounts, including application forms, contracts, and statements."
}

Table "consumer_lending"."loan_communications" {
  "consumer_lending_communication_id" SERIAL [pk, increment, note: "Unique identifier for communication"]
  "consumer_lending_application_id" INTEGER [note: "Reference to loan application if applicable"]
  "loan_account_id" INTEGER [ref: > consumer_lending.loan_accounts.loan_account_id, note: "Reference to loan account if applicable"]
  "communication_date" TIMESTAMP [not null, note: "Date/time of communication"]
  "communication_type" VARCHAR(30) [not null, note: "Email, Letter, Phone Call, Text"]
  "direction" VARCHAR(10) [not null, note: "Inbound, Outbound"]
  "subject" VARCHAR(255) [note: "Communication subject"]
  "content" TEXT [note: "Communication content or transcript"]
  "sender" VARCHAR(100) [note: "Person or system that sent communication"]
  "recipient" VARCHAR(100) [note: "Person who received communication"]
  "template_id" VARCHAR(50) [note: "Reference to template if applicable"]
  "status" VARCHAR(20) [not null, note: "Sent, Delivered, Failed, Received"]
  "document_path" VARCHAR(500) [note: "Path to stored communication document"]
  "related_to" VARCHAR(50) [note: "Payment Reminder, Statement, Notice, etc."]

  note: "Logs various communications related to loan applications and accounts, such as emails, letters, and phone calls."
}

Table "consumer_lending"."loan_statements" {
  "consumer_lending_statement_id" SERIAL [pk, increment, note: "Unique identifier for statement"]
  "loan_account_id" INTEGER [not null, ref: > consumer_lending.loan_accounts.loan_account_id, note: "Reference to loan account"]
  "statement_date" DATE [not null, note: "Date statement was generated"]
  "statement_period_start" DATE [not null, note: "Start date of statement period"]
  "statement_period_end" DATE [not null, note: "End date of statement period"]
  "opening_balance" NUMERIC(18,2) [not null, note: "Balance at start of period"]
  "closing_balance" NUMERIC(18,2) [not null, note: "Balance at end of period"]
  "total_payments" NUMERIC(18,2) [not null, note: "Sum of payments in period"]
  "principal_paid" NUMERIC(18,2) [not null, note: "Principal paid in period"]
  "interest_paid" NUMERIC(18,2) [not null, note: "Interest paid in period"]
  "fees_charged" NUMERIC(18,2) [not null, note: "Fees charged in period"]
  "fees_paid" NUMERIC(18,2) [not null, note: "Fees paid in period"]
  "amount_due" NUMERIC(18,2) [not null, note: "Amount due for next payment"]
  "due_date" DATE [not null, note: "Next payment due date"]
  "document_path" VARCHAR(500) [note: "Path to stored statement document"]
  "sent_date" DATE [note: "Date statement was sent to customer"]
  "delivery_method" VARCHAR(50) [note: "Email, Mail, Portal"]

  note: "Stores periodic loan statements, providing a summary of account activity, balances, and payments."
}

Table "consumer_lending"."collection_accounts" {
  "consumer_lending_collection_id" SERIAL [pk, increment, note: "Unique identifier for collection record"]
  "loan_account_id" INTEGER [not null, ref: > consumer_lending.loan_accounts.loan_account_id, note: "Reference to loan account"]
  "assigned_date" DATE [not null, note: "Date account was placed in collections"]
  "status" VARCHAR(20) [not null, note: "Active, Resolved, Charged Off"]
  "delinquency_reason" VARCHAR(100) [note: "Customer-provided reason for delinquency"]
  "delinquency_date" DATE [not null, note: "First date of delinquency"]
  "days_delinquent" INTEGER [not null, note: "Current days delinquent"]
  "amount_past_due" NUMERIC(18,2) [not null, note: "Total amount past due"]
  "assigned_to" VARCHAR(50) [note: "Collector assigned to account"]
  "priority" VARCHAR(20) [note: "High, Medium, Low"]
  "next_action_date" DATE [note: "Date of next scheduled action"]
  "last_action_date" DATE [note: "Date of most recent action taken"]
  "resolution_date" DATE [note: "Date collection was resolved"]
  "resolution_type" VARCHAR(50) [note: "Paid, Settlement, Modification, Charge Off"]

  note: "Tracks accounts that have been placed in collections, including delinquency details and collection actions."
}

Table "consumer_lending"."collection_actions" {
  "consumer_lending_action_id" SERIAL [pk, increment, note: "Unique identifier for collection action"]
  "consumer_lending_collection_id" INTEGER [not null, note: "Reference to collection account"]
  "action_date" TIMESTAMP [not null, note: "Date/time action was taken"]
  "action_type" VARCHAR(50) [not null, note: "Call, Letter, Email, Field Visit"]
  "action_result" VARCHAR(50) [note: "Contact Made, Left Message, No Answer"]
  "action_by" INTEGER [ref: > enterprise.associates.enterprise_associate_id, not null, note: "User who performed action"]
  "notes" TEXT [note: "Details of action and outcome"]
  "next_action_type" VARCHAR(50) [note: "Type of next planned action"]
  "next_action_date" DATE [note: "Date for next planned action"]
  "promise_to_pay_amount" NUMERIC(18,2) [note: "Amount customer promised to pay"]
  "promise_to_pay_date" DATE [note: "Date customer promised to pay by"]

  note: "Logs specific actions taken to collect on delinquent loan accounts, such as calls, letters, and emails."
}

Table "consumer_lending"."payment_arrangements" {
  "consumer_lending_arrangement_id" SERIAL [pk, increment, note: "Unique identifier for payment arrangement"]
  "consumer_lending_collection_id" INTEGER [not null, note: "Reference to collection account"]
  "arrangement_date" DATE [not null, note: "Date arrangement was created"]
  "status" VARCHAR(20) [not null, note: "Active, Completed, Broken"]
  "total_amount" NUMERIC(18,2) [not null, note: "Total amount to be paid"]
  "number_of_payments" INTEGER [not null, note: "Number of payments in arrangement"]
  "first_payment_date" DATE [not null, note: "Date first payment is due"]
  "payment_frequency" VARCHAR(20) [not null, note: "Weekly, Bi-weekly, Monthly"]
  "payment_amount" NUMERIC(18,2) [not null, note: "Amount of each payment"]
  "approved_by" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "User who approved arrangement"]
  "notes" TEXT [note: "Additional arrangement notes"]

  note: "Records payment arrangements made with borrowers to resolve delinquent accounts."
}

Table "consumer_lending"."loan_modifications" {
  "consumer_lending_modification_id" SERIAL [pk, increment, note: "Unique identifier for loan modification"]
  "loan_account_id" INTEGER [not null, ref: > consumer_lending.loan_accounts.loan_account_id, note: "Reference to loan account"]
  "modification_type" VARCHAR(50) [not null, note: "Rate Reduction, Term Extension, etc."]
  "request_date" DATE [not null, note: "Date modification was requested"]
  "approval_date" DATE [note: "Date modification was approved"]
  "effective_date" DATE [note: "Date modification takes effect"]
  "original_rate" NUMERIC(6,3) [note: "Interest rate before modification"]
  "new_rate" NUMERIC(6,3) [note: "Interest rate after modification"]
  "original_term_months" INTEGER [note: "Loan term before modification"]
  "new_term_months" INTEGER [note: "Loan term after modification"]
  "original_principal_balance" NUMERIC(18,2) [note: "Principal balance before modification"]
  "new_principal_balance" NUMERIC(18,2) [note: "Principal balance after modification"]
  "capitalized_amount" NUMERIC(18,2) [note: "Amount of interest or fees capitalized"]
  "status" VARCHAR(20) [not null, note: "Pending, Approved, Denied, Completed"]
  "hardship_reason" VARCHAR(100) [note: "Customer's reason for hardship"]
  "approved_by" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "User who approved modification"]
  "document_path" VARCHAR(500) [note: "Path to modification agreement document"]

  note: "Tracks modifications made to existing loan accounts, such as changes to interest rates, terms, or principal balance."
}

Table "consumer_lending"."reg_z_disclosures" {
  "consumer_lending_disclosure_id" SERIAL [pk, increment, note: "Unique identifier for disclosure"]
  "consumer_lending_application_id" INTEGER [not null, note: "Reference to loan application"]
  "loan_account_id" INTEGER [ref: > consumer_lending.loan_accounts.loan_account_id, note: "Reference to loan account if originated"]
  "disclosure_type" VARCHAR(50) [not null, note: "Initial TIL, Loan Estimate, Closing Disclosure, Change in Terms"]
  "disclosure_date" TIMESTAMP [not null, note: "Date disclosure was generated"]
  "sent_date" TIMESTAMP [note: "Date disclosure was sent to applicant"]
  "delivery_method" VARCHAR(30) [not null, note: "Email, Mail, In Person, Electronic"]
  "annual_percentage_rate" NUMERIC(6,3) [not null, note: "APR disclosed"]
  "finance_charge" NUMERIC(18,2) [not null, note: "Total finance charge disclosed"]
  "amount_financed" NUMERIC(18,2) [not null, note: "Amount financed disclosed"]
  "total_of_payments" NUMERIC(18,2) [not null, note: "Total of payments disclosed"]
  "payment_schedule" TEXT [note: "Summary of payment schedule"]
  "security_interest" TEXT [note: "Description of security interest"]
  "late_payment_fee" NUMERIC(10,2) [note: "Late payment fee disclosed"]
  "prepayment_penalty" TEXT [note: "Description of prepayment penalty if any"]
  "document_path" VARCHAR(500) [note: "Path to stored disclosure document"]
  "received_by_customer" BOOLEAN [note: "Whether receipt confirmed"]
  "receipt_date" TIMESTAMP [note: "Date receipt was confirmed"]
  "user_id" INTEGER [note: "User who generated disclosure"]
  "version" INTEGER [not null, note: "Version number if multiple disclosures of same type"]

  note: "Stores disclosures required by the Truth in Lending Act (Regulation Z), such as Loan Estimates and Closing Disclosures."
}

Table "consumer_lending"."adverse_action_details" {
  "consumer_lending_adverse_action_id" SERIAL [pk, increment, note: "Unique identifier for adverse action record"]
  "consumer_lending_notice_id" INTEGER [not null, note: "Reference to adverse_action_notices"]
  "ecoa_reason_code" VARCHAR(10) [not null, note: "Standard ECOA reason code"]
  "fcra_reason_code" VARCHAR(10) [note: "Standard FCRA reason code if applicable"]
  "reason_description" VARCHAR(255) [not null, note: "Description of reason for adverse action"]
  "credit_score_disclosed" INTEGER [note: "Credit score disclosed to applicant"]
  "credit_score_range_min" INTEGER [note: "Minimum score in range"]
  "credit_score_range_max" INTEGER [note: "Maximum score in range"]
  "credit_score_factors" TEXT [note: "Key factors affecting score"]
  "credit_bureau_name" VARCHAR(50) [note: "Name of credit bureau"]
  "generated_date" TIMESTAMP [not null, note: "Date details were generated"]
  "user_id" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "User who generated adverse action"]
  "sequence" INTEGER [not null, note: "Order of importance for reason"]

  note: "Provides detailed information about adverse action taken on loan applications, including reasons and credit information."
}

Table "consumer_lending"."ecoa_monitoring" {
  "consumer_lending_monitoring_id" SERIAL [pk, increment, note: "Unique identifier for monitoring record"]
  "consumer_lending_application_id" INTEGER [not null, note: "Reference to loan application"]
  "consumer_lending_applicant_id" INTEGER [not null, note: "Reference to applicant"]
  "ethnicity" VARCHAR(50) [note: "Self-reported ethnicity"]
  "race" VARCHAR(50) [note: "Self-reported race"]
  "sex" VARCHAR(10) [note: "Self-reported sex"]
  "age" INTEGER [note: "Applicant age"]
  "marital_status" VARCHAR(20) [note: "Marital status"]
  "information_method" VARCHAR(30) [not null, note: "Self-reported, Observed, Not Provided"]
  "income_monitored" NUMERIC(18,2) [note: "Income used for decision"]
  "action_taken" VARCHAR(30) [not null, note: "Approved, Denied, Withdrawn, Incomplete"]
  "action_date" DATE [not null, note: "Date of action"]
  "submission_date" DATE [not null, note: "Date monitoring info submitted"]
  "submitted_by" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "User who submitted monitoring info"]

  note: "Tracks information related to the Equal Credit Opportunity Act (ECOA) for monitoring and compliance purposes."
}

Table "consumer_lending"."fairlending_analysis" {
  "consumer_lending_analysis_id" SERIAL [pk, increment, note: "Unique identifier for analysis record"]
  "analysis_date" DATE [not null, note: "Date analysis was performed"]
  "analysis_type" VARCHAR(50) [not null, note: "Pricing, Underwriting, Marketing"]
  "product_id" INTEGER [note: "Loan product analyzed if specific product"]
  "time_period_start" DATE [not null, note: "Start of analysis period"]
  "time_period_end" DATE [not null, note: "End of analysis period"]
  "protected_class" VARCHAR(50) [not null, note: "Race, Ethnicity, Sex, Age, etc."]
  "control_group" VARCHAR(50) [not null, note: "Reference group for comparison"]
  "test_group" VARCHAR(50) [not null, note: "Group being tested for disparities"]
  "sample_size_control" INTEGER [not null, note: "Number in control group"]
  "sample_size_test" INTEGER [not null, note: "Number in test group"]
  "outcome_variable" VARCHAR(50) [not null, note: "Approval Rate, APR, Fees, etc."]
  "statistical_test" VARCHAR(50) [note: "t-test, chi-square, regression"]
  "disparity_ratio" NUMERIC(8,3) [note: "Ratio of outcomes between groups"]
  "p_value" NUMERIC(8,6) [note: "Statistical significance level"]
  "statistically_significant" BOOLEAN [note: "Whether result is statistically significant"]
  "controls_applied" TEXT [note: "Variables controlled for in analysis"]
  "findings" TEXT [note: "Summary of findings"]
  "analyst" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "Person who performed analysis"]
  "reviewer" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "Person who reviewed analysis"]
  "action_recommended" TEXT [note: "Recommended actions based on findings"]
  "report_path" VARCHAR(500) [note: "Path to full analysis report"]

  note: "Records fair lending analysis conducted to identify and address potential disparities in lending practices."
}

Table "consumer_lending"."reg_b_notices" {
  "consumer_lending_notice_id" SERIAL [pk, increment, note: "Unique identifier for Reg B notice"]
  "consumer_lending_application_id" INTEGER [not null, note: "Reference to loan application"]
  "notice_type" VARCHAR(50) [not null, note: "Incompleteness, Counteroffer, Notice of Action Taken"]
  "generated_date" TIMESTAMP [not null, note: "Date notice was generated"]
  "sent_date" TIMESTAMP [not null, note: "Date notice was sent"]
  "delivery_method" VARCHAR(30) [not null, note: "Email, Mail, Electronic"]
  "incomplete_items" TEXT [note: "Items needed if incompleteness notice"]
  "deadline_date" DATE [note: "Deadline for response if applicable"]
  "counteroffer_terms" TEXT [note: "Terms of counteroffer if applicable"]
  "appraisal_notice_included" BOOLEAN [not null, default: false, note: "Whether appraisal notice included"]
  "document_path" VARCHAR(500) [note: "Path to stored notice document"]
  "user_id" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "User who generated notice"]

  note: "Tracks notices and disclosures required by Regulation B (Equal Credit Opportunity Act), such as notices of incomplete applications or adverse action."
}

Table "consumer_lending"."appraisal_disclosures" {
  "consumer_lending_disclosure_id" SERIAL [pk, increment, note: "Unique identifier for appraisal disclosure"]
  "consumer_lending_application_id" INTEGER [not null, note: "Reference to loan application"]
  "property_address_id" INTEGER [not null, ref: > enterprise.addresses.enterprise_address_id, note: "Reference to enterprise.addresses"]
  "disclosure_type" VARCHAR(50) [not null, note: "Initial Disclosure, Final Disclosure"]
  "disclosure_date" TIMESTAMP [not null, note: "Date disclosure was generated"]
  "sent_date" TIMESTAMP [not null, note: "Date disclosure was sent"]
  "delivery_method" VARCHAR(30) [not null, note: "Email, Mail, Electronic"]
  "appraisal_type" VARCHAR(50) [note: "Full Appraisal, AVM, BPO, etc."]
  "appraisal_ordered_date" DATE [note: "Date appraisal was ordered"]
  "appraisal_received_date" DATE [note: "Date appraisal was received"]
  "appraisal_provided_date" DATE [note: "Date appraisal was provided to applicant"]
  "appraisal_value" NUMERIC(18,2) [note: "Appraised value if known"]
  "document_path" VARCHAR(500) [note: "Path to stored disclosure document"]
  "appraisal_waiver" BOOLEAN [not null, default: false, note: "Whether appraisal was waived"]
  "waiver_reason" VARCHAR(100) [note: "Reason for waiver if applicable"]
  "user_id" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "User who generated disclosure"]

  note: "Manages appraisal disclosures provided to loan applicants, including the type of appraisal and its value."
}

Table "consumer_lending"."military_lending_checks" {
  "consumer_lending_check_id" SERIAL [pk, increment, note: "Unique identifier for MLA check"]
  "consumer_lending_application_id" INTEGER [not null, note: "Reference to loan application"]
  "consumer_lending_applicant_id" INTEGER [not null, note: "Reference to applicant"]
  "check_date" TIMESTAMP [not null, note: "Date MLA status was checked"]
  "covered_borrower" BOOLEAN [not null, note: "Whether applicant is a covered borrower"]
  "verification_method" VARCHAR(50) [not null, note: "MLA Database, Credit Report Flag"]
  "military_status" VARCHAR(30) [note: "Active Duty, Dependent, Not Military"]
  "certificate_date" DATE [note: "Date on covered borrower certificate"]
  "document_path" VARCHAR(500) [note: "Path to stored verification document"]
  "mapr_calculated" NUMERIC(6,3) [note: "Military Annual Percentage Rate if calculated"]
  "mapr_disclosure_provided" BOOLEAN [note: "Whether MAPR disclosure was provided"]
  "user_id" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "User who performed check"]

  note: "Tracks compliance with the Military Lending Act (MLA), including verification of military status and MAPR calculations."
}

Table "consumer_lending"."high_cost_mortgage_tests" {
  "consumer_lending_test_id" SERIAL [pk, increment, note: "Unique identifier for HOEPA test"]
  "consumer_lending_application_id" INTEGER [not null, note: "Reference to loan application"]
  "test_date" DATE [not null, note: "Date test was performed"]
  "test_type" VARCHAR(30) [not null, note: "APR Test, Points and Fees Test"]
  "loan_amount" NUMERIC(18,2) [not null, note: "Amount used for test"]
  "apr" NUMERIC(6,3) [not null, note: "APR used for test"]
  "points_and_fees" NUMERIC(18,2) [not null, note: "Total points and fees"]
  "points_and_fees_percentage" NUMERIC(6,3) [not null, note: "Points and fees as percentage of loan"]
  "points_and_fees_threshold" NUMERIC(18,2) [not null, note: "Threshold for points and fees test"]
  "apr_threshold" NUMERIC(6,3) [not null, note: "Threshold for APR test"]
  "apor" NUMERIC(6,3) [note: "Average Prime Offer Rate used"]
  "apor_date" DATE [note: "Date of APOR used"]
  "high_cost_mortgage" BOOLEAN [not null, note: "Whether loan is high-cost"]
  "additional_disclosures_required" BOOLEAN [not null, note: "Whether additional disclosures required"]
  "user_id" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "User who performed test"]
  "notes" TEXT [note: "Additional test notes"]

  note: "Records the results of high-cost mortgage tests performed under the Home Ownership and Equity Protection Act (HOEPA)."
}

Table "consumer_lending"."compliance_exceptions" {
  "consumer_lending_exception_id" SERIAL [pk, increment, note: "Unique identifier for exception"]
  "consumer_lending_application_id" INTEGER [note: "Reference to loan application if applicable"]
  "loan_account_id" INTEGER [note: "Reference to loan account if applicable"]
  "exception_date" TIMESTAMP [not null, note: "Date exception was identified"]
  "exception_type" VARCHAR(50) [not null, note: "Documentation, Disclosure, Timing, etc."]
  "regulation" VARCHAR(50) [not null, note: "Reg Z, Reg B, FCRA, etc."]
  "severity" VARCHAR(20) [not null, note: "High, Medium, Low"]
  "description" TEXT [not null, note: "Detailed description of exception"]
  "identified_by" VARCHAR(50) [not null, note: "Person or process that identified exception"]
  "status" VARCHAR(20) [not null, note: "Open, In Remediation, Closed"]
  "remediation_plan" TEXT [note: "Plan to address exception"]
  "remediation_date" DATE [note: "Date remediation completed"]
  "remediated_by" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "Person who remediated exception"]
  "root_cause" TEXT [note: "Identified root cause"]
  "preventive_action" TEXT [note: "Action to prevent recurrence"]
  "notes" TEXT [note: "Additional exception notes"]

  note: "Tracks compliance exceptions and issues encountered during the lending process, including remediation efforts."
}

Table "consumer_banking"."customer_interactions" {
  "consumer_banking_interaction_id" SERIAL [pk, increment, note: 'A unique identifier for each interaction.']
  "customer_id" INT [ref: > enterprise.parties.enterprise_party_id, note: 'The ID of the customer involved in the interaction.']
  "account_id" INT [null, ref: > consumer_banking.accounts.consumer_banking_account_id, note: 'The ID of the specific account related to the interaction. This can be NULL if the interaction isn\'t tied to a specific account (e.g., a general inquiry).']
  "enterprise_associate_id" INT [null, ref: > enterprise.associates.enterprise_associate_id, note: 'The ID of the bank employee who handled the interaction. This can be NULL if it was an automated interaction.']
  "interaction_type" VARCHAR(50) [note: 'The type of interaction (e.g., "phone call," "email," "chat," "in-person," "online form," "ATM interaction").']
  "interaction_date_time" TIMESTAMP [note: 'The date and time of the interaction.']
  "channel" VARCHAR(50) [note: 'The channel through which the interaction occurred (e.g., "phone," "email," "web," "branch," "mobile app").']
  "subject" VARCHAR(255) [null, note: 'A brief subject or title of the interaction.']
  "description" TEXT [null, note: 'A detailed description of the interaction.']
  "resolution" TEXT [null, note: 'Description of how the interaction was resolved.']
  "status" VARCHAR(20) [note: 'The status of the interaction (e.g., "open," "resolved," "pending").']
  "priority" VARCHAR(20) [null, note: 'The priority of the interaction (e.g., "high," "medium," "low").']
  "related_transaction_id" INT [null, ref: > consumer_banking.transactions.consumer_banking_transaction_id, note: 'If the interaction relates to a specific transaction, this can hold that transaction ID.']
  "created_at" TIMESTAMP [default: `now()`, note: 'When the interaction record was created.']
  "updated_at" TIMESTAMP [default: `now()`, note: 'When the interaction record was last updated.']
}

TableGroup "Loan Applications" {
  "consumer_lending"."loan_applications"
  "consumer_lending"."application_applicants"
  "consumer_lending"."applicants"
  "consumer_lending"."applicant_employments"
  "consumer_lending"."applicant_incomes"
  "consumer_lending"."applicant_assets"
  "consumer_lending"."applicant_liabilities"
}

TableGroup "Loan Products & Pricing" {
  "consumer_lending"."loan_products"
  "consumer_lending"."product_eligibility_criteria"
  "consumer_lending"."risk_based_pricing_tiers"
}

TableGroup "Credit & Decisioning" {
  "consumer_lending"."credit_reports"
  "consumer_lending"."credit_report_tradelines"
  "consumer_lending"."credit_inquiries"
  "consumer_lending"."public_records"
  "consumer_lending"."decision_models"
  "consumer_lending"."application_decisions"
  "consumer_lending"."decision_reasons"
  "consumer_lending"."adverse_action_notices"
}

TableGroup "Auto Loans" {
  "consumer_lending"."vehicles"
}

TableGroup "Origination & Servicing" {
  "consumer_lending"."loan_accounts"
  "consumer_lending"."payment_schedules"
  "consumer_lending"."disbursements"
  "consumer_lending"."loan_payments"
  "consumer_lending"."loan_fees"
  "consumer_lending"."loan_collateral"
  "consumer_lending"."loan_insurance"
}

TableGroup "Documents & Communications" {
  "consumer_lending"."loan_documents"
  "consumer_lending"."loan_communications"
  "consumer_lending"."loan_statements"
}

TableGroup "Collections & Loss Mitigation" {
  "consumer_lending"."collection_accounts"
  "consumer_lending"."collection_actions"
  "consumer_lending"."payment_arrangements"
  "consumer_lending"."loan_modifications"
}

TableGroup "Consumer Lending Regulatory" {
  "consumer_lending"."reg_z_disclosures"
  "consumer_lending"."adverse_action_details"
  "consumer_lending"."ecoa_monitoring"
  "consumer_lending"."fairlending_analysis"
  "consumer_lending"."reg_b_notices"
  "consumer_lending"."appraisal_disclosures"
  "consumer_lending"."military_lending_checks"
  "consumer_lending"."high_cost_mortgage_tests"
  "consumer_lending"."compliance_exceptions"
}

//
// CREDIT CARDS
//

Table "credit_cards"."card_products" {
  "credit_cards_product_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each card product"]
  "product_name" VARCHAR(100) [not null, note: "Marketing name of the card product"]
  "product_code" VARCHAR(20) [not null, note: "Internal code identifying the card product"]
  "card_network" VARCHAR(20) [not null, note: "Card network (Visa, Mastercard, Amex, Discover)"]
  "card_type" VARCHAR(20) [not null, note: "Type of card (Debit, Credit, Prepaid, Charge)"]
  "card_tier" VARCHAR(20) [not null, note: "Card tier (Standard, Gold, Platinum, etc.)"]
  "is_secured" BOOLEAN [not null, default: false, note: "Whether card requires a security deposit"]
  "annual_fee" NUMERIC(10,2) [note: "Annual fee for the card"]
  "is_annual_fee_waived_first_year" BOOLEAN [default: false, note: "Whether annual fee is waived first year"]
  "base_interest_rate" NUMERIC(6,3) [note: "Standard purchase APR (annual percentage rate)"]
  "cash_advance_rate" NUMERIC(6,3) [note: "APR for cash advances"]
  "penalty_rate" NUMERIC(6,3) [note: "Penalty APR applied after late payments"]
  "balance_transfer_rate" NUMERIC(6,3) [note: "APR for balance transfers"]
  "intro_rate" NUMERIC(6,3) [note: "Introductory APR if offered"]
  "intro_rate_period_months" INTEGER [note: "Duration of introductory rate"]
  "grace_period_days" INTEGER [note: "Interest-free grace period in days"]
  "min_credit_score" INTEGER [note: "Minimum credit score typically required"]
  "min_credit_limit" NUMERIC(10,2) [note: "Minimum credit limit offered"]
  "max_credit_limit" NUMERIC(10,2) [note: "Maximum credit limit offered"]
  "reward_program" VARCHAR(100) [note: "Description of reward program if any"]
  "base_reward_rate" NUMERIC(5,2) [note: "Base reward earning rate (e.g., 1.5% cashback)"]
  "foreign_transaction_fee" NUMERIC(5,2) [note: "Fee percentage for foreign transactions"]
  "late_payment_fee" NUMERIC(10,2) [note: "Fee charged for late payments"]
  "overlimit_fee" NUMERIC(10,2) [note: "Fee charged for exceeding credit limit"]
  "cash_advance_fee_percent" NUMERIC(5,2) [note: "Percentage fee for cash advances"]
  "cash_advance_fee_min" NUMERIC(10,2) [note: "Minimum fee amount for cash advances"]
  "balance_transfer_fee_percent" NUMERIC(5,2) [note: "Percentage fee for balance transfers"]
  "balance_transfer_fee_min" NUMERIC(10,2) [note: "Minimum fee amount for balance transfers"]
  "return_payment_fee" NUMERIC(10,2) [note: "Fee charged for returned payments"]
  "is_active" BOOLEAN [not null, default: true, note: "Whether product is currently offered"]
  "launch_date" DATE [note: "Date when product was launched"]
  "discontinue_date" DATE [note: "Date when product was discontinued if applicable"]
  "terms_and_conditions_url" VARCHAR(255) [note: "URL to terms and conditions document"]
  "image_url" VARCHAR(255) [note: "URL to card image for marketing"]

  note: "Defines credit card products offered by the institution"
}

Table "credit_cards"."fraud_cases" {
  "credit_cards_case_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each fraud case"]
  "credit_cards_card_account_id" INTEGER [not null, note: "Reference to card_accounts"]
  "credit_cards_card_id" INTEGER [ref: > credit_cards.cards.credit_cards_card_id, note: "Reference to specific card if applicable"]
  "report_date" TIMESTAMP [not null, note: "Date and time fraud was reported"]
  "case_type" VARCHAR(30) [not null, note: "Type of fraud (Card Fraud, Account Takeover, Application Fraud)"]
  "status" VARCHAR(20) [not null, note: "Status of case (Open, Investigation, Closed)"]
  "reported_by" VARCHAR(20) [not null, note: "Who reported fraud (Customer, Bank, Merchant)"]
  "description" TEXT [note: "Description of fraud incident"]
  "total_disputed_amount" NUMERIC(10,2) [note: "Total amount of fraudulent transactions"]
  "provisional_credit_issued" BOOLEAN [note: "Whether provisional credit was issued"]
  "resolution" VARCHAR(30) [note: "Final resolution of case"]
  "resolution_date" DATE [note: "Date case was resolved"]
  "new_card_issued" BOOLEAN [not null, default: false, note: "Whether replacement card was issued"]
  "police_report_filed" BOOLEAN [not null, default: false, note: "Whether police report was filed"]
  "investigator_id" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "User ID of fraud investigator"]

  note: "Tracks fraud cases related to card accounts"
}

Table "credit_cards"."fraud_transactions" {
  "credit_cards_fraud_transaction_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each linked transaction"]
  "credit_cards_case_id" INTEGER [not null, note: "Reference to fraud_cases"]
  "transaction_id" INTEGER [not null, note: "Reference to transactions"]
  "is_confirmed_fraud" BOOLEAN [not null, default: true, note: "Whether transaction is confirmed fraudulent"]

  note: "Junction table linking fraud cases to specific transactions"
}

Table "credit_cards"."security_blocks" {
  "credit_cards_block_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each security block"]
  "credit_cards_card_id" INTEGER [not null, ref: > credit_cards.cards.credit_cards_card_id, note: "Reference to specific card"]
  "block_type" VARCHAR(30) [not null, note: "Type of block (Temporary, Permanent, Geographic)"]
  "reason" VARCHAR(100) [not null, note: "Reason for security block"]
  "start_date" TIMESTAMP [not null, note: "When block began"]
  "end_date" TIMESTAMP [note: "When block ends if temporary"]
  "geographic_restriction" VARCHAR(100) [note: "Geographic area blocked if applicable"]
  "transaction_type_restricted" VARCHAR(30) [note: "Transaction types blocked if specific"]
  "requested_by" VARCHAR(20) [not null, note: "Who requested the block (Customer, Bank, Fraud System)"]
  "status" VARCHAR(20) [not null, note: "Status of block (Active, Removed)"]
  "removed_by" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "User who removed the block"]
  "removed_date" TIMESTAMP [note: "When block was removed"]

  note: "Tracks security blocks placed on cards"
}

Table "credit_cards"."credit_card_applications_hmda" {
  "credit_cards_record_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each HMDA record"]
  "credit_cards_application_id" INTEGER [not null, note: "Reference to applications"]
  "reporting_year" INTEGER [not null, note: "Year for HMDA reporting"]
  "ethnicity" VARCHAR(20) [note: "Applicant's ethnicity per HMDA categories"]
  "race" VARCHAR(20) [note: "Applicant's race per HMDA categories"]
  "sex" VARCHAR(10) [note: "Applicant's sex per HMDA categories"]
  "age" INTEGER [note: "Applicant's age at time of application"]
  "income" NUMERIC(18,2) [note: "Applicant's annual income in thousands"]
  "rate_spread" NUMERIC(6,3) [note: "Difference between APR and average prime offer rate"]
  "hoepa_status" VARCHAR(10) [note: "Whether subject to HOEPA (Yes, No)"]
  "action_taken" VARCHAR(20) [not null, note: "Final disposition (Approved, Denied, etc.)"]
  "action_taken_date" DATE [not null, note: "Date of final action"]
  "denial_reason1" VARCHAR(30) [note: "Primary reason for denial if applicable"]
  "denial_reason2" VARCHAR(30) [note: "Secondary reason for denial if applicable"]
  "submission_status" VARCHAR(20) [not null, default: 'PENDING', note: "Status of HMDA submission"]

  note: "Regulatory reporting data for credit card applications under HMDA"
}

Table "credit_cards"."reg_z_credit_card_disclosures" {
  "credit_cards_disclosure_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each disclosure"]
  "credit_cards_application_id" INTEGER [note: "Reference to applications if pre-account opening"]
  "credit_cards_card_account_id" INTEGER [ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts if post-account opening"]
  "disclosure_type" VARCHAR(50) [not null, note: "Type of Reg Z disclosure (Solicitation, Application, Account-Opening, Periodic Statement)"]
  "disclosure_date" TIMESTAMP [not null, note: "Date disclosure was generated"]
  "delivery_method" VARCHAR(30) [not null, note: "How disclosure was delivered (Mail, Electronic)"]
  "annual_percentage_rate" NUMERIC(6,3) [note: "APR disclosed"]
  "variable_rate_indicator" BOOLEAN [note: "Whether rate is variable"]
  "annual_fee" NUMERIC(10,2) [note: "Annual fee disclosed"]
  "transaction_fee_purchases" NUMERIC(10,2) [note: "Fee for purchases if any"]
  "transaction_fee_balance_transfers" NUMERIC(10,2) [note: "Fee for balance transfers"]
  "transaction_fee_cash_advance" NUMERIC(10,2) [note: "Fee for cash advances"]
  "late_payment_fee" NUMERIC(10,2) [note: "Late payment fee disclosed"]
  "over_limit_fee" NUMERIC(10,2) [note: "Over-limit fee disclosed"]
  "grace_period_disclosure" TEXT [note: "Grace period disclosure text"]
  "balance_computation_method" VARCHAR(50) [note: "Method used to calculate balance"]
  "document_path" VARCHAR(500) [note: "Path to stored disclosure document"]

  note: "Tracks Truth in Lending Act disclosures required for credit cards"
}

Table "credit_cards"."ability_to_pay_assessments" {
  "credit_cards_assessment_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each assessment"]
  "credit_cards_application_id" INTEGER [not null, note: "Reference to applications"]
  "assessment_date" DATE [not null, note: "Date of ability to pay assessment"]
  "income_verified" BOOLEAN [not null, note: "Whether income was verified"]
  "income_source" VARCHAR(50) [not null, note: "Source of income verification"]
  "income_amount" NUMERIC(18,2) [not null, note: "Income amount used in assessment"]
  "debt_obligations" NUMERIC(18,2) [note: "Existing debt obligations considered"]
  "living_expenses" NUMERIC(18,2) [note: "Basic living expenses considered"]
  "dti_ratio" NUMERIC(5,2) [note: "Debt-to-income ratio calculated"]
  "max_supportable_payment" NUMERIC(10,2) [note: "Maximum monthly payment calculated as supportable"]
  "passed_assessment" BOOLEAN [not null, note: "Whether applicant passed ability to pay test"]
  "performed_by" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "User who performed assessment"]
  "notes" TEXT [note: "Additional assessment notes"]

  note: "Documents ability to pay assessments required by Reg Z"
}

Table "credit_cards"."consumer_complaints" {
  "credit_cards_complaint_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each complaint"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "receipt_date" TIMESTAMP [not null, note: "Date complaint was received"]
  "source" VARCHAR(30) [not null, note: "Source of complaint (Direct, CFPB, BBB, Social Media)"]
  "complaint_type" VARCHAR(50) [not null, note: "Type of complaint (Billing, Fees, Interest, Customer Service)"]
  "issue" VARCHAR(100) [not null, note: "Specific issue raised"]
  "description" TEXT [note: "Detailed description of complaint"]
  "status" VARCHAR(20) [not null, note: "Status of complaint (New, In Progress, Resolved)"]
  "response_sent_date" DATE [note: "Date response was sent to consumer"]
  "resolution" TEXT [note: "Description of how complaint was resolved"]
  "resolution_date" DATE [note: "Date complaint was resolved"]
  "cfpb_case_number" VARCHAR(30) [note: "CFPB case number if applicable"]
  "monetary_relief_amount" NUMERIC(10,2) [note: "Amount of monetary relief provided"]
  "regulatory_violation_found" BOOLEAN [note: "Whether regulatory violation was identified"]
  "regulation_violated" VARCHAR(50) [note: "Specific regulation violated if applicable"]

  note: "Tracks customer complaints about credit card accounts"
}

Table "credit_cards"."card_product_features" {
  "credit_cards_feature_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each feature"]
  "credit_cards_product_id" INTEGER [not null, note: "Reference to card_products"]
  "feature_name" VARCHAR(100) [not null, note: "Name of the feature"]
  "feature_description" TEXT [not null, note: "Detailed description of the feature"]
  "is_premium" BOOLEAN [not null, default: false, note: "Whether this is a premium feature"]
  "is_limited_time" BOOLEAN [not null, default: false, note: "Whether feature is limited-time offer"]
  "start_date" DATE [note: "When feature becomes available"]
  "end_date" DATE [note: "When feature expires if limited time"]

  note: "Stores features and benefits associated with card products"
}

Table "credit_cards"."card_product_reward_categories" {
  "credit_cards_category_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each reward category"]
  "credit_cards_product_id" INTEGER [not null, note: "Reference to card_products"]
  "category_name" VARCHAR(50) [not null, note: "Category name (e.g., Dining, Travel, Gas)"]
  "reward_rate" NUMERIC(5,2) [not null, note: "Reward rate for this category (e.g., 3% cashback)"]
  "is_quarterly" BOOLEAN [not null, default: false, note: "Whether category rotates quarterly"]
  "is_capped" BOOLEAN [not null, default: false, note: "Whether rewards are capped"]
  "cap_amount" NUMERIC(10,2) [note: "Spending cap for elevated rewards if applicable"]
  "cap_period" VARCHAR(20) [note: "Period for cap (e.g., Monthly, Quarterly, Annually)"]
  "start_date" DATE [note: "Start date for category if temporary"]
  "end_date" DATE [note: "End date for category if temporary"]

  note: "Defines reward earning categories for card products"
}

Table "credit_cards"."applications" {
  "credit_cards_application_id" INTEGER [pk, note: "Unique identifier for card application"]
  "customer_id" INTEGER [not null, ref: > enterprise.accounts.enterprise_account_id, note: "Reference to enterprise.accounts"]
  "credit_cards_product_id" INTEGER [not null, note: "Reference to card_products"]
  "application_date" TIMESTAMP [not null, note: "When application was submitted"]
  "application_channel" VARCHAR(30) [not null, note: "Channel used for application (Online, Branch, Mail, Phone)"]
  "status" VARCHAR(20) [not null, note: "Current status (Pending, Approved, Denied, Canceled)"]
  "requested_credit_limit" NUMERIC(10,2) [note: "Credit limit requested by applicant"]
  "approved_credit_limit" NUMERIC(10,2) [note: "Credit limit approved by issuer"]
  "approved_interest_rate" NUMERIC(6,3) [note: "Interest rate approved for account"]
  "decision_date" TIMESTAMP [note: "When decision was made"]
  "decision_method" VARCHAR(20) [note: "Automated or Manual decision"]
  "decision_reason" VARCHAR(100) [note: "Primary reason for decision"]
  "offer_code" VARCHAR(30) [note: "Promotional offer code if applicable"]
  "referring_source" VARCHAR(50) [note: "Marketing source or referral"]
  "is_preapproved" BOOLEAN [not null, default: false, note: "Whether application was pre-approved"]
  "is_secured" BOOLEAN [not null, default: false, note: "Whether card requires security deposit"]
  "security_deposit_amount" NUMERIC(10,2) [note: "Amount of security deposit if secured card"]
  "balance_transfer_requested" BOOLEAN [not null, default: false, note: "Whether balance transfer was requested"]
  "authorized_users_requested" INTEGER [note: "Number of authorized users requested"]
  "annual_income" NUMERIC(18,2) [note: "Applicant's reported annual income"]
  "housing_payment" NUMERIC(10,2) [note: "Applicant's monthly housing payment"]
  "employment_status" VARCHAR(30) [note: "Applicant's employment status"]
  "approval_expiration_date" DATE [note: "Date when approval expires if not accepted"]
  "time_at_current_address_years" INTEGER [note: "Years at current address"]

  note: "Stores credit card applications and their status"
}

Table "credit_cards"."card_accounts" {
  "credit_cards_card_account_id" SERIAL [pk, increment, note: "Unique identifier for card account"]
  "customer_id" INTEGER [not null, ref: > enterprise.accounts.enterprise_account_id, note: "Reference to enterprise.accounts"]
  "enterprise_account_id" INTEGER [not null, ref: > enterprise.accounts.enterprise_account_id, note: "Reference to enterprise.accounts - the main account record"]
  "credit_cards_product_id" INTEGER [not null, note: "Reference to card_products"]
  "credit_cards_application_id" INTEGER [note: "Reference to original application if applicable"]
  "account_number" VARCHAR(30) [not null, unique, note: "Masked account number"]
  "opened_date" DATE [not null, note: "When account was opened"]
  "status" VARCHAR(20) [not null, note: "Account status (Active, Inactive, Closed, Suspended)"]
  "status_update_date_time" TIMESTAMPTZ [not null, note: "When the status was last updated"]
  "credit_limit" NUMERIC(10,2) [not null, note: "Current approved credit limit"]
  "available_credit" NUMERIC(10,2) [not null, note: "Current available credit"]
  "cash_advance_limit" NUMERIC(10,2) [note: "Limit for cash advances if different"]
  "current_balance" NUMERIC(10,2) [not null, default: 0, note: "Current outstanding balance"]
  "statement_balance" NUMERIC(10,2) [not null, default: 0, note: "Balance as of last statement"]
  "minimum_payment_due" NUMERIC(10,2) [not null, default: 0, note: "Minimum payment due"]
  "payment_due_date" DATE [note: "Date payment is due"]
  "last_payment_date" DATE [note: "Date of last payment received"]
  "last_payment_amount" NUMERIC(10,2) [note: "Amount of last payment received"]
  "purchase_interest_rate" NUMERIC(6,3) [not null, note: "Current purchase APR"]
  "cash_advance_interest_rate" NUMERIC(6,3) [note: "Current cash advance APR"]
  "balance_transfer_interest_rate" NUMERIC(6,3) [note: "Current balance transfer APR"]
  "penalty_interest_rate" NUMERIC(6,3) [note: "Current penalty APR if applicable"]
  "intro_rate_expiration_date" DATE [note: "When introductory rate expires"]
  "days_past_due" INTEGER [not null, default: 0, note: "Current days past due"]
  "times_past_due_30_days" INTEGER [not null, default: 0, note: "Count of 30+ day late payments"]
  "times_past_due_60_days" INTEGER [not null, default: 0, note: "Count of 60+ day late payments"]
  "times_past_due_90_days" INTEGER [not null, default: 0, note: "Count of 90+ day late payments"]
  "overlimit_status" BOOLEAN [not null, default: false, note: "Whether account is over limit"]
  "reward_points_balance" INTEGER [not null, default: 0, note: "Current reward points/cashback balance"]
  "is_secured" BOOLEAN [not null, default: false, note: "Whether account is secured"]
  "security_deposit_amount" NUMERIC(10,2) [note: "Amount of security deposit if secured"]
  "annual_fee_next_charge_date" DATE [note: "Next date annual fee will be charged"]
  "cycle_cut_day" INTEGER [note: "Day of month when billing cycle closes"]

  note: "Stores credit card accounts and their current status"
}

Table "credit_cards"."cards" {
  "credit_cards_card_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each physical card"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "card_number" VARCHAR(19) [note: "Masked card number (last 4 digits only)"]
  "user_type" VARCHAR(20) [not null, note: "Primary or Authorized User"]
  "user_id" INTEGER [not null, ref: > enterprise.parties.enterprise_party_id, note: "Reference to parties.party_id of cardholder"]
  "card_status" VARCHAR(20) [not null, note: "Active, Inactive, Lost, Stolen, Expired, Replaced"]
  "issue_date" DATE [not null, note: "When card was issued"]
  "activation_date" DATE [note: "When card was activated"]
  "expiration_date" DATE [not null, note: "When card expires"]
  "card_design" VARCHAR(50) [note: "Design/style of physical card"]
  "is_virtual" BOOLEAN [not null, default: false, note: "Whether card is virtual only"]
  "digital_wallet_enabled" BOOLEAN [not null, default: false, note: "Whether added to digital wallet"]
  "pin_set" BOOLEAN [not null, default: false, note: "Whether PIN has been set"]
  "temporary_limits" JSONB [note: "Temporary spending limits if any"]
  "temporary_limits_expiry" DATE [note: "When temporary limits expire"]

  note: "Stores information about physical and virtual cards issued for accounts"
}

Table "credit_cards"."authorized_users" {
  "credit_cards_authorized_user_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each authorized user"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "enterprise_party_id" INTEGER [not null, ref: > enterprise.parties.enterprise_party_id, note: "Reference to parties.party_id"]
  "relationship" VARCHAR(30) [note: "Relationship to primary cardholder"]
  "status" VARCHAR(20) [not null, note: "Status of authorized user (Active, Removed)"]
  "add_date" DATE [not null, note: "When user was added"]
  "remove_date" DATE [note: "When user was removed if applicable"]
  "spending_limit" NUMERIC(10,2) [note: "Custom spending limit if applicable"]
  "limit_period" VARCHAR(20) [note: "Period for limit (Daily, Monthly, etc.)"]

  // Indexes {
  //   ("card_account_id", "party_id") [unique, note: "Ensures party can only be an authorized user once per account"]
  // }

  note: "Tracks authorized users who can use the account"
}

Table "credit_cards"."transactions" {
  "credit_cards_transaction_id" SERIAL [pk, increment, note: "Unique identifier for transaction"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "credit_cards_card_id" INTEGER [not null, ref: > credit_cards.cards.credit_cards_card_id, note: "Reference to specific card used"]
  "transaction_date" TIMESTAMP [not null, note: "Date and time of transaction"]
  "post_date" DATE [not null, note: "Date transaction posted to account"]
  "transaction_type" VARCHAR(20) [not null, note: "Purchase, Cash Advance, Balance Transfer, Payment, Fee, Adjustment"]
  "amount" NUMERIC(10,2) [not null, note: "Transaction amount"]
  "description" VARCHAR(100) [not null, note: "Merchant name or transaction description"]
  "category" VARCHAR(50) [note: "Spending category (e.g., Dining, Travel, Merchandise)"]
  "mcc_code" VARCHAR(20) [note: "Merchant Category Code"]
  "is_international" BOOLEAN [not null, default: false, note: "Whether transaction is international"]
  "original_currency" VARCHAR(3) [note: "Original currency if international"]
  "original_amount" NUMERIC(10,2) [note: "Amount in original currency if international"]
  "exchange_rate" NUMERIC(10,6) [note: "Exchange rate used if international"]
  "is_recurring" BOOLEAN [note: "Whether transaction appears to be recurring"]
  "auth_code" VARCHAR(10) [note: "Authorization code"]
  "reference_number" VARCHAR(30) [note: "Transaction reference number"]
  "is_pending" BOOLEAN [not null, default: false, note: "Whether transaction is pending"]
  "status" VARCHAR(20) [not null, note: "Approved, Declined, Reversed, Disputed"]
  "decline_reason" VARCHAR(50) [note: "Reason for decline if applicable"]
  "rewards_earned" NUMERIC(10,2) [note: "Rewards points or cashback earned"]
  "is_billable" BOOLEAN [not null, default: true, note: "Whether transaction is included in statement billing"]

  note: "Stores all transaction activity on card accounts"
}

Table "credit_cards"."statements" {
  "credit_cards_statement_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each statement"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "statement_date" DATE [not null, note: "Date statement was generated"]
  "statement_period_start" DATE [not null, note: "Start date for statement period"]
  "statement_period_end" DATE [not null, note: "End date for statement period"]
  "due_date" DATE [not null, note: "Payment due date"]
  "previous_balance" NUMERIC(10,2) [not null, note: "Balance carried over from previous statement"]
  "new_charges" NUMERIC(10,2) [not null, default: 0, note: "New purchases and charges"]
  "cash_advances" NUMERIC(10,2) [not null, default: 0, note: "Cash advances in period"]
  "balance_transfers" NUMERIC(10,2) [not null, default: 0, note: "Balance transfers in period"]
  "payments" NUMERIC(10,2) [not null, default: 0, note: "Payments received in period"]
  "credits" NUMERIC(10,2) [not null, default: 0, note: "Credits/refunds in period"]
  "fees" NUMERIC(10,2) [not null, default: 0, note: "Fees charged in period"]
  "interest" NUMERIC(10,2) [not null, default: 0, note: "Interest charged in period"]
  "ending_balance" NUMERIC(10,2) [not null, note: "Ending statement balance"]
  "minimum_payment" NUMERIC(10,2) [not null, note: "Minimum payment due"]
  "payment_received" BOOLEAN [not null, default: false, note: "Whether payment was received by due date"]
  "payment_received_date" DATE [note: "Date payment was received"]
  "payment_received_amount" NUMERIC(10,2) [note: "Amount of payment received"]
  "days_in_billing_cycle" INTEGER [not null, note: "Number of days in billing cycle"]
  "document_path" VARCHAR(500) [note: "Path to stored statement document"]

  note: "Stores monthly billing statements for card accounts"
}

Table "credit_cards"."fees" {
  "credit_cards_fee_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each fee"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "credit_cards_transaction_id" INTEGER [note: "Reference to transactions if associated with specific transaction"]
  "fee_type" VARCHAR(30) [not null, note: "Type of fee (Annual, Late Payment, Cash Advance, Foreign Transaction, etc.)"]
  "amount" NUMERIC(10,2) [not null, note: "Fee amount"]
  "description" VARCHAR(100) [note: "Description of fee"]
  "date_assessed" DATE [not null, note: "Date fee was charged"]
  "waived" BOOLEAN [not null, default: false, note: "Whether fee was waived"]
  "waiver_reason" VARCHAR(100) [note: "Reason fee was waived if applicable"]
  "credit_cards_statement_id" INTEGER [note: "Reference to statements if included in statement"]

  note: "Tracks fees charged to card accounts"
}

Table "credit_cards"."interest_charges" {
  "credit_cards_charge_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each interest charge"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "interest_type" VARCHAR(30) [not null, note: "Type of interest (Purchase, Cash Advance, Balance Transfer, Penalty)"]
  "balance_subject_to_interest" NUMERIC(10,2) [not null, note: "Balance amount subject to interest"]
  "interest_rate" NUMERIC(6,3) [not null, note: "Interest rate applied"]
  "days_in_period" INTEGER [not null, note: "Number of days interest was calculated for"]
  "amount" NUMERIC(10,2) [not null, note: "Interest amount charged"]
  "date_assessed" DATE [not null, note: "Date interest was charged"]
  "credit_cards_statement_id" INTEGER [not null, note: "Reference to statements"]

  note: "Tracks interest charges applied to card accounts"
}

Table "credit_cards"."rewards" {
  "credit_cards_reward_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each reward record"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "credit_cards_transaction_id" INTEGER [note: "Reference to transactions if earned from transaction"]
  "reward_type" VARCHAR(30) [not null, note: "Type of reward (Points, Cashback, Miles)"]
  "amount" NUMERIC(10,2) [not null, note: "Amount of reward earned or redeemed"]
  "event_type" VARCHAR(20) [not null, note: "Earned, Bonus, Redeemed, Expired, Adjusted"]
  "description" VARCHAR(100) [not null, note: "Description of reward activity"]
  "category" VARCHAR(50) [note: "Category associated with reward if applicable"]
  "date_earned" DATE [not null, note: "Date reward was earned or redeemed"]
  "expiration_date" DATE [note: "Date reward will expire if applicable"]

  note: "Tracks reward earning and redemption activity"
}

Table "credit_cards"."reward_redemptions" {
  "credit_cards_redemption_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each redemption"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "redemption_date" TIMESTAMP [not null, note: "Date and time of redemption"]
  "redemption_type" VARCHAR(30) [not null, note: "Type of redemption (Cashback, Travel, Gift Card, Merchandise, Statement Credit)"]
  "points_redeemed" INTEGER [not null, note: "Number of points redeemed"]
  "cash_value" NUMERIC(10,2) [not null, note: "Cash value of redemption"]
  "description" VARCHAR(100) [not null, note: "Description of redemption"]
  "status" VARCHAR(20) [not null, note: "Status of redemption (Pending, Completed, Canceled)"]
  "confirmation_code" VARCHAR(30) [note: "Confirmation code for redemption"]
  "shipping_address_id" INTEGER [ref: > enterprise.addresses.enterprise_address_id, note: "Reference to addresses if physical item"]
  "recipient_email" VARCHAR(100) [note: "Email for digital items if applicable"]

  note: "Stores details of reward point redemptions"
}

Table "credit_cards"."promotional_offers" {
  "credit_cards_offer_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each offer"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "offer_type" VARCHAR(30) [not null, note: "Type of offer (Balance Transfer, Cash Advance, Credit Limit Increase, etc.)"]
  "description" VARCHAR(255) [not null, note: "Description of offer"]
  "offer_date" DATE [not null, note: "Date offer was made"]
  "expiration_date" DATE [not null, note: "Date offer expires"]
  "interest_rate" NUMERIC(6,3) [note: "Interest rate associated with offer"]
  "fee_percentage" NUMERIC(5,2) [note: "Fee percentage associated with offer"]
  "status" VARCHAR(20) [not null, note: "Status of offer (Active, Accepted, Declined, Expired)"]
  "response_date" DATE [note: "Date customer responded to offer"]
  "amount_offered" NUMERIC(10,2) [note: "Amount of credit offered if applicable"]
  "promo_code" VARCHAR(20) [note: "Promotional code associated with offer"]
  "terms_and_conditions" TEXT [note: "Terms and conditions of offer"]

  note: "Tracks promotional offers made to cardholders"
}

Table "credit_cards"."balance_transfers" {
  "credit_cards_transfer_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each balance transfer"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "credit_cards_transaction_id" INTEGER [note: "Reference to transactions"]
  "credit_cards_offer_id" INTEGER [note: "Reference to promotional_offers if applicable"]
  "creditor_name" VARCHAR(100) [not null, note: "Name of creditor being paid"]
  "account_number" VARCHAR(30) [note: "Account number at other creditor, masked"]
  "transfer_amount" NUMERIC(10,2) [not null, note: "Amount transferred"]
  "fee_amount" NUMERIC(10,2) [note: "Fee charged for transfer"]
  "interest_rate" NUMERIC(6,3) [not null, note: "Interest rate applied to transfer"]
  "promotional_rate" BOOLEAN [not null, default: false, note: "Whether rate is promotional"]
  "promotion_end_date" DATE [note: "When promotional rate ends if applicable"]
  "request_date" DATE [not null, note: "When transfer was requested"]
  "status" VARCHAR(20) [not null, note: "Status of transfer (Pending, Completed, Rejected)"]
  "completion_date" DATE [note: "When transfer was completed"]
  "current_balance" NUMERIC(10,2) [note: "Current balance remaining from transfer"]

  note: "Tracks balance transfers from other creditors"
}

Table "credit_cards"."payment_methods" {
  "credit_cards_payment_method_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each payment method"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "payment_type" VARCHAR(30) [not null, note: "Type of payment method (Bank Account, Debit Card, Check)"]
  "nickname" VARCHAR(50) [note: "User-assigned nickname for payment method"]
  "status" VARCHAR(20) [not null, note: "Status of payment method (Active, Inactive, Removed)"]
  "is_default" BOOLEAN [not null, default: false, note: "Whether this is the default payment method"]
  "bank_name" VARCHAR(100) [note: "Name of the bank if applicable"]
  "account_type" VARCHAR(20) [note: "Checking or Savings if bank account"]
  "account_number" VARCHAR(30) [note: "Masked account number"]
  "routing_number" VARCHAR(9) [note: "Routing number if bank account"]
  "expiration_date" DATE [note: "Expiration date if debit card"]
  "verification_status" VARCHAR(20) [not null, note: "Status of verification (Verified, Pending, Failed)"]

  note: "Stores payment methods for card account payments"
}

Table "credit_cards"."autopay_settings" {
  "credit_cards_autopay_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each autopay setup"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "credit_cards_payment_method_id" INTEGER [not null, note: "Reference to payment_methods"]
  "status" VARCHAR(20) [not null, note: "Status of autopay (Active, Inactive)"]
  "payment_option" VARCHAR(30) [not null, note: "What to pay (Minimum, Statement Balance, Current Balance, Fixed Amount)"]
  "fixed_amount" NUMERIC(10,2) [note: "Fixed amount if applicable"]
  "payment_day" VARCHAR(30) [not null, note: "When to pay (Due Date, Days Before Due Date, Specific Day)"]
  "days_before_due" INTEGER [note: "Days before due date if applicable"]
  "specific_day" INTEGER [note: "Specific day of month if applicable"]
  "start_date" DATE [not null, note: "When autopay begins"]
  "end_date" DATE [note: "When autopay ends if applicable"]
  "last_payment_date" DATE [note: "Date of last autopay payment"]
  "next_payment_date" DATE [note: "Scheduled date of next payment"]

  note: "Stores automatic payment settings"
}

Table "credit_cards"."credit_limit_changes" {
  "credit_cards_change_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each limit change"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "change_date" DATE [not null, note: "Date of credit limit change"]
  "previous_limit" NUMERIC(10,2) [not null, note: "Credit limit before change"]
  "new_limit" NUMERIC(10,2) [not null, note: "Credit limit after change"]
  "change_reason" VARCHAR(50) [not null, note: "Reason for limit change"]
  "requested_by" VARCHAR(20) [not null, note: "Who requested change (Customer, Bank)"]
  "approved_by" INTEGER [ref: > enterprise.associates.enterprise_associate_id, note: "User who approved change"]

  note: "Tracks history of credit limit changes"
}

Table "credit_cards"."card_alerts" {
  "credit_cards_alert_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each alert"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "credit_cards_card_id" INTEGER [ref: > credit_cards.cards.credit_cards_card_id, note: "Reference to specific card if applicable"]
  "alert_type" VARCHAR(30) [not null, note: "Type of alert (Payment Due, Payment Posted, Purchase, Credit Limit, Fraud)"]
  "delivery_method" VARCHAR(20) [not null, note: "How alert is delivered (Email, SMS, Push)"]
  "contact_info" VARCHAR(100) [not null, note: "Email or phone number for alert"]
  "threshold_amount" NUMERIC(10,2) [note: "Amount threshold if applicable"]
  "is_active" BOOLEAN [not null, default: true, note: "Whether alert is currently active"]
  "created_date" DATE [not null, note: "When alert was set up"]
  "modified_date" DATE [note: "When alert was last modified"]

  note: "Stores customer alert preferences"
}

Table "credit_cards"."disputed_transactions" {
  "credit_cards_dispute_id" SERIAL [pk, increment, note: "Auto-incrementing identifier for each dispute"]
  "credit_cards_transaction_id" INTEGER [not null, note: "Reference to transactions"]
  "credit_cards_card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to card_accounts"]
  "dispute_date" TIMESTAMP [not null, note: "Date and time dispute was filed"]
  "dispute_reason" VARCHAR(50) [not null, note: "Reason for dispute (Fraud, Product Issue, Duplicate Charge, etc.)"]
  "disputed_amount" NUMERIC(10,2) [not null, note: "Amount being disputed"]
  "description" TEXT [note: "Customer description of dispute"]
  "status" VARCHAR(20) [not null, note: "Status of dispute (Filed, Processing, Resolved, Declined)"]
  "resolution" VARCHAR(20) [note: "Final resolution (Customer Favor, Merchant Favor)"]
  "resolution_date" DATE [note: "Date dispute was resolved"]
  "provisional_credit_date" DATE [note: "Date provisional credit was issued if applicable"]
  "provisional_credit_amount" NUMERIC(10,2) [note: "Amount of provisional credit"]
  "documentation_received" BOOLEAN [not null, default: false, note: "Whether documentation was received"]
  "case_number" VARCHAR(30) [not null, note: "Dispute case identifier"]

  note: "Tracks disputed transactions and their resolution"
}

// Table Groups for better organization
TableGroup "Credit Card Products" {
  "credit_cards"."card_products"
  "credit_cards"."card_product_features"
  "credit_cards"."card_product_reward_categories"

  note: "Tables related to credit card product definitions"
}

TableGroup "Credit Card Accounts" {
  "credit_cards"."applications"
  "credit_cards"."card_accounts"
  "credit_cards"."cards"
  "credit_cards"."authorized_users"

  note: "Tables related to credit card applications and accounts"
}

TableGroup "Transactions and Billing" {
  "credit_cards"."transactions"
  "credit_cards"."statements"
  "credit_cards"."fees"
  "credit_cards"."interest_charges"

  note: "Tables related to credit card transactions and billing"
}

TableGroup "Rewards and Offers" {
  "credit_cards"."rewards"
  "credit_cards"."reward_redemptions"
  "credit_cards"."promotional_offers"

  note: "Tables related to rewards programs and promotional offers"
}

TableGroup "Account Services" {
  "credit_cards"."balance_transfers"
  "credit_cards"."payment_methods"
  "credit_cards"."autopay_settings"
  "credit_cards"."credit_limit_changes"
  "credit_cards"."card_alerts"

  note: "Tables related to credit card account services"
}

TableGroup "Disputes and Fraud" {
  "credit_cards"."disputed_transactions"
  "credit_cards"."fraud_cases"
  "credit_cards"."fraud_transactions"
  "credit_cards"."security_blocks"

  note: "Tables related to disputes, fraud, and security"
}

TableGroup "Credit Card Compliance" {
  "credit_cards"."credit_card_applications_hmda"
  "credit_cards"."reg_z_credit_card_disclosures"
  "credit_cards"."ability_to_pay_assessments"
  "credit_cards"."consumer_complaints"

  note: "Tables related to regulatory compliance for credit cards"
}

//
// SMALL BUSINESS BANKING
//

Table "small_business_banking"."businesses" {
  "small_business_banking_business_id" SERIAL [pk, increment, note: "Unique identifier for each business entity"]
  "enterprise_party_id" INTEGER [not null, ref: > "enterprise"."parties"."enterprise_party_id", note: "Reference to the enterprise party record representing this business"]
  "business_name" VARCHAR(350) [not null, note: "Operating name of the business"]
  "tax_id" VARCHAR(50) [not null, note: "Tax identification number for the business (e.g., EIN)"]
  "business_type" VARCHAR(50) [not null, note: "Type of business entity (e.g., LLC, Corporation, Sole Proprietorship)"]
  "industry_code" VARCHAR(10) [not null, note: "Standard industry classification code for the business"]
  "establishment_date" DATE [note: "Date the business was established"]
  "annual_revenue" DECIMAL(18,2) [note: "Annual revenue amount for the business"]
  "employee_count" INTEGER [note: "Number of employees in the business"]
  "website" VARCHAR(255) [note: "Business website URL"]
  "status" VARCHAR(20) [not null, default: "active", note: "Current status of the business (active, inactive, suspended, etc.)"]

  Indexes {
    "tax_id" [unique, note: "Ensures tax ID is unique across businesses"]
  }

  note: "Stores core information about small businesses that are customers of the bank"
}

Table "small_business_banking"."business_owners" {
  "small_business_banking_business_owner_id" SERIAL [pk, increment, note: "Unique identifier for each business owner record"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business the person owns or controls"]
  "enterprise_party_id" INTEGER [not null, ref: > "enterprise"."parties"."enterprise_party_id", note: "Reference to the enterprise party record representing this individual"]
  "ownership_percentage" DECIMAL(5,2) [not null, note: "Percentage of business ownership (0-100)"]
  "role" VARCHAR(100) [not null, note: "Role in the business (e.g., CEO, CFO, Managing Partner)"]
  "is_guarantor" BOOLEAN [not null, default: false, note: "Indicates if this owner serves as a loan guarantor"]

  Indexes {
    ("small_business_banking_business_id", "enterprise_party_id") [unique, note: "Ensures a party can only be listed once as an owner for a given business"]
  }

  note: "Identifies individuals who own or have significant control over a business entity"
}

Table "small_business_banking"."accounts" {
  "small_business_banking_account_id" SERIAL [pk, increment, note: "Unique identifier for each business account"]
  "enterprise_account_id" INTEGER [not null, ref: > enterprise.accounts.enterprise_account_id, note: "References the main account"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business that owns this account"]
  "account_number" VARCHAR(50) [not null, note: "Unique account number visible to customers"]
  "account_type" VARCHAR(50) [not null, note: "Type of account (checking, savings, money market, etc.)"]
  "small_business_banking_product_id" INTEGER [not null, ref: > "small_business_banking"."products"."small_business_banking_product_id", note: "Reference to the product this account is based on"]
  "status" VARCHAR(40) [not null, default: "active", note: "Current status of the account (active, inactive, frozen, closed)"]
  "status_update_date_time" TIMESTAMPTZ [not null, note: "When the status was last updated"]
  "balance" DECIMAL(18,2) [not null, default: 0.00, note: "Current balance of the account"]
  "available_balance" DECIMAL(18,2) [not null, default: 0.00, note: "Available balance after holds and pending transactions"]
  "currency" CHAR(3) [not null, default: "USD", note: "ISO currency code for the account"]
  "overdraft_limit" DECIMAL(18,2) [not null, default: 0.00, note: "Maximum allowed overdraft amount"]
  "interest_rate" DECIMAL(6,4) [note: "Current interest rate applied to the account (if applicable)"]
  "statement_frequency" VARCHAR(20) [not null, default: "monthly", note: "Frequency of account statements (daily, weekly, monthly)"]
  "statement_day" INTEGER [note: "Day of month/week when statements are generated"]
  "last_statement_date" DATE [note: "Date when the last statement was generated"]
  "opened_date" DATE [not null, note: "Date when the account was opened"]

  Indexes {
    "account_number" [unique, note: "Ensures account numbers are unique"]
  }

  note: "Stores the business deposit and transaction accounts managed by the bank"
}

Table "small_business_banking"."products" {
  "small_business_banking_product_id" SERIAL [pk, increment, note: "Unique identifier for each product"]
  "product_code" VARCHAR(20) [not null, note: "Internal code for the product"]
  "product_name" VARCHAR(100) [not null, note: "Display name for the product"]
  "product_type" VARCHAR(50) [not null, note: "Type of product (checking, savings, loan, credit line, credit card)"]
  "description" TEXT [note: "Detailed product description"]
  "min_opening_deposit" DECIMAL(18,2) [note: "Minimum amount required to open an account of this product type"]
  "monthly_fee" DECIMAL(10,2) [note: "Standard monthly maintenance fee"]
  "transaction_limit" INTEGER [note: "Number of free transactions per statement period"]
  "transaction_fee" DECIMAL(10,2) [note: "Fee charged per transaction beyond the limit"]
  "min_balance" DECIMAL(18,2) [note: "Minimum balance to avoid fees"]
  "is_interest_bearing" BOOLEAN [not null, default: false, note: "Indicates if the product earns interest"]
  "base_interest_rate" DECIMAL(6,4) [note: "Standard interest rate for the product (if applicable)"]
  "term_length" INTEGER [note: "Term in months (for term products)"]
  "is_active" BOOLEAN [not null, default: true, note: "Indicates if the product is currently offered"]

  Indexes {
    "product_code" [unique, note: "Ensures product codes are unique"]
  }

  note: "Defines the financial products offered to small business customers"
}

Table "small_business_banking"."account_signatories" {
  "small_business_banking_account_signatory_id" SERIAL [pk, increment, note: "Unique identifier for each account signatory record"]
  "small_business_banking_account_id" INTEGER [not null, ref: > "small_business_banking"."accounts"."small_business_banking_account_id", note: "Reference to the account"]
  "enterprise_party_id" INTEGER [not null, ref: > "enterprise"."parties"."enterprise_party_id", note: "Reference to the enterprise party who has signing authority"]
  "signatory_level" VARCHAR(20) [not null, note: "Level of signing authority (primary, secondary, view-only)"]
  "daily_limit" DECIMAL(18,2) [note: "Maximum daily transaction limit for this signatory"]
  "is_active" BOOLEAN [not null, default: true, note: "Indicates if the signing authority is currently active"]
  "start_date" DATE [not null, note: "Date when the signing authority begins"]
  "end_date" DATE [note: "Date when the signing authority expires (if applicable)"]

  Indexes {
    ("small_business_banking_account_id", "enterprise_party_id") [unique, note: "Ensures a party can only be listed once as a signatory for a given account"]
  }

  note: "Identifies individuals who have authority to sign on or manage a business account"
}

Table "small_business_banking"."loans" {
  "small_business_banking_loan_id" SERIAL [pk, increment, note: "Unique identifier for each loan"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business receiving the loan"]
  "small_business_banking_account_id" INTEGER [not null, ref: > "small_business_banking"."accounts"."small_business_banking_account_id", note: "Reference to the associated account for fund disbursement and payments"]
  "small_business_banking_product_id" INTEGER [not null, ref: > "small_business_banking"."products"."small_business_banking_product_id", note: "Reference to the loan product"]
  "loan_number" VARCHAR(50) [not null, note: "Unique loan number visible to customers"]
  "loan_amount" DECIMAL(18,2) [not null, note: "Original principal amount of the loan"]
  "outstanding_balance" DECIMAL(18,2) [not null, note: "Current balance remaining on the loan"]
  "interest_rate" DECIMAL(6,4) [not null, note: "Annual interest rate for the loan"]
  "interest_type" VARCHAR(20) [not null, note: "Type of interest rate (fixed, variable, etc.)"]
  "reference_rate" VARCHAR(50) [note: "Reference rate for variable rate loans (e.g., PRIME, SOFR)"]
  "rate_spread" DECIMAL(6,4) [note: "Spread over the reference rate for variable rate loans"]
  "term_months" INTEGER [not null, note: "Duration of the loan in months"]
  "payment_frequency" VARCHAR(20) [not null, note: "Frequency of payments (weekly, monthly, quarterly)"]
  "payment_amount" DECIMAL(18,2) [not null, note: "Regular payment amount"]
  "balloon_payment" DECIMAL(18,2) [note: "Final balloon payment amount (if applicable)"]
  "disbursal_date" DATE [note: "Date when loan funds were disbursed"]
  "first_payment_date" DATE [note: "Date when the first payment is due"]
  "maturity_date" DATE [note: "Date when the loan is scheduled to be fully paid"]
  "purpose" VARCHAR(255) [note: "Stated purpose of the loan"]
  "status" VARCHAR(20) [not null, default: "pending", note: "Current status of the loan (pending, active, paid, defaulted)"]

  Indexes {
    "loan_number" [unique, note: "Ensures loan numbers are unique"]
  }

  note: "Stores information about term loans issued to small businesses"
}

Table "small_business_banking"."credit_lines" {
  "small_business_banking_credit_line_id" SERIAL [pk, increment, note: "Unique identifier for each credit line"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business that has the credit line"]
  "small_business_banking_account_id" INTEGER [not null, ref: > "small_business_banking"."accounts"."small_business_banking_account_id", note: "Reference to the associated account for fund disbursement and payments"]
  "small_business_banking_product_id" INTEGER [not null, ref: > "small_business_banking"."products"."small_business_banking_product_id", note: "Reference to the credit line product"]
  "credit_line_number" VARCHAR(50) [not null, note: "Unique credit line number visible to customers"]
  "credit_limit" DECIMAL(18,2) [not null, note: "Maximum amount that can be borrowed"]
  "available_credit" DECIMAL(18,2) [not null, note: "Current amount available to be drawn"]
  "outstanding_balance" DECIMAL(18,2) [not null, default: 0.00, note: "Current balance owed on the credit line"]
  "interest_rate" DECIMAL(6,4) [not null, note: "Annual interest rate for the credit line"]
  "interest_type" VARCHAR(20) [not null, note: "Type of interest rate (fixed, variable)"]
  "reference_rate" VARCHAR(50) [note: "Reference rate for variable rate credit lines (e.g., PRIME, SOFR)"]
  "rate_spread" DECIMAL(6,4) [note: "Spread over the reference rate for variable rate credit lines"]
  "annual_fee" DECIMAL(10,2) [note: "Annual fee charged for maintaining the credit line"]
  "draw_period_months" INTEGER [note: "Duration in months of the draw period"]
  "repayment_period_months" INTEGER [note: "Duration in months of the repayment period"]
  "minimum_payment_percentage" DECIMAL(5,2) [not null, note: "Minimum percentage of outstanding balance required as monthly payment"]
  "minimum_payment_amount" DECIMAL(10,2) [not null, note: "Minimum fixed amount required as monthly payment"]
  "start_date" DATE [not null, note: "Date when the credit line becomes available"]
  "renewal_date" DATE [note: "Date when the credit line is up for renewal"]
  "status" VARCHAR(20) [not null, default: "active", note: "Current status of the credit line (active, inactive, frozen, closed)"]

  Indexes {
    "credit_line_number" [unique, note: "Ensures credit line numbers are unique"]
  }

  note: "Manages revolving credit facilities provided to small businesses"
}

Table "small_business_banking"."collateral" {
  "small_business_banking_collateral_id" SERIAL [pk, increment, note: "Unique identifier for each collateral item"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business that owns the collateral"]
  "collateral_type" VARCHAR(50) [not null, note: "Type of collateral (real estate, equipment, vehicle, inventory, etc.)"]
  "description" TEXT [not null, note: "Detailed description of the collateral"]
  "value" DECIMAL(18,2) [not null, note: "Estimated or appraised value of the collateral"]
  "valuation_date" DATE [not null, note: "Date when the value was determined"]
  "valuation_type" VARCHAR(50) [not null, note: "Method of valuation (appraisal, estimate, purchase price)"]
  "location" TEXT [note: "Physical location of the collateral item"]
  "identification_number" VARCHAR(100) [note: "Serial number, VIN, or other identifier for the collateral"]
  "lien_position" INTEGER [note: "Position of the bank's lien on this collateral (1st, 2nd, etc.)"]
  "lien_filing_number" VARCHAR(100) [note: "Reference number for the lien filing"]
  "insurance_provider" VARCHAR(100) [note: "Name of insurance company covering this collateral"]
  "insurance_policy_number" VARCHAR(100) [note: "Insurance policy number for this collateral"]
  "insurance_expiry_date" DATE [note: "Expiration date of the insurance policy"]
  "status" VARCHAR(20) [not null, default: "active", note: "Current status of the collateral (active, sold, repossessed)"]

  note: "Tracks assets pledged as security for loans and credit facilities"
}

Table "small_business_banking"."loan_collateral" {
  "small_business_banking_loan_collateral_id" SERIAL [pk, increment, note: "Unique identifier for each loan-collateral association"]
  "small_business_banking_loan_id" INTEGER [not null, ref: > "small_business_banking"."loans"."small_business_banking_loan_id", note: "Reference to the loan secured by the collateral"]
  "small_business_banking_collateral_id" INTEGER [not null, ref: > "small_business_banking"."collateral"."small_business_banking_collateral_id", note: "Reference to the collateral item"]
  "collateral_percentage" DECIMAL(5,2) [not null, note: "Percentage of the collateral's value assigned to this loan"]

  Indexes {
    ("small_business_banking_loan_id", "small_business_banking_loan_collateral_id") [unique, note: "Ensures a collateral item is only assigned once to a loan"]
  }

  note: "Junction table linking collateral items to specific loans they secure"
}

Table "small_business_banking"."business_card_accounts" {
  "small_business_banking_business_card_account_id" SERIAL [pk, increment, note: "Unique identifier for each business credit card account"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business that owns the credit card account"]
  "card_account_id" INTEGER [not null, ref: > credit_cards.card_accounts.credit_cards_card_account_id, note: "Reference to the primary credit card account in the credit_cards schema"]
  "credit_cards_product_id" INTEGER [not null, ref: > "credit_cards"."card_products"."credit_cards_product_id", note: "Reference to the card product in credit_cards schema"]
  "account_type" VARCHAR(20) [not null, default: "business", note: "Categorization of the account (business, corporate, etc.)"]
  "tax_id_reporting" VARCHAR(50) [not null, note: "Tax ID used for reporting purposes"]
  "business_structure" VARCHAR(50) [not null, note: "Legal structure of the business for credit purposes"]
  "ownership_type" VARCHAR(50) [not null, note: "Type of ownership for this card account (sole proprietor, partnership, corporation)"]
  "liability_type" VARCHAR(20) [not null, note: "Liability arrangement (business liability, joint liability, etc.)"]
  "linked_deposit_account_id" INTEGER [ref: > "small_business_banking"."accounts"."small_business_banking_account_id", note: "Reference to deposit account for automatic payments"]
  "relationship_manager_id" INTEGER [note: "Reference to the relationship manager for this business"]
  "annual_review_date" DATE [note: "Date when account should be reviewed annually"]
  "expense_category_setup" VARCHAR(20) [not null, default: "standard", note: "Type of expense categorization setup (standard, custom)"]

  Indexes {
    ("small_business_banking_business_id", "card_account_id") [unique, note: "Ensures a business has only one record per card account"]
  }

  note: "Links businesses to credit card accounts and stores business-specific attributes"
}

Table "small_business_banking"."business_card_users" {
  "small_business_banking_business_card_user_id" SERIAL [pk, increment, note: "Unique identifier for each business card user"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business"]
  "small_business_banking_business_card_account_id" INTEGER [not null, ref: > "small_business_banking"."business_card_accounts"."small_business_banking_business_card_account_id", note: "Reference to the business card account"]
  "enterprise_party_id" INTEGER [not null, ref: > "enterprise"."parties"."enterprise_party_id", note: "Reference to the enterprise party who is issued a card"]
  "credit_cards_card_id" INTEGER [not null, ref: > "credit_cards"."cards"."credit_cards_card_id", note: "Reference to the specific card in the credit_cards schema"]
  "role" VARCHAR(50) [not null, note: "Role of user in the business (owner, employee, accountant, etc.)"]
  "department" VARCHAR(100) [note: "Department or cost center for this cardholder"]
  "employee_id" VARCHAR(50) [note: "Employee ID within the business if applicable"]
  "spending_limit" DECIMAL(18,2) [not null, note: "Monthly spending limit for this cardholder"]
  "transaction_approval_required" BOOLEAN [not null, default: false, note: "Whether transactions require approval"]
  "merchant_category_restrictions" TEXT [note: "JSON object describing merchant category restrictions"]
  "can_view_all_transactions" BOOLEAN [not null, default: false, note: "Whether user can view all company transactions"]
  "can_manage_all_cards" BOOLEAN [not null, default: false, note: "Whether user can manage all company cards"]

  Indexes {
    ("small_business_banking_business_card_user_id", "enterprise_party_id") [unique, note: "Ensures a party has only one record per business card account"]
  }

  note: "Manages employee and owner cards issued under a business credit card account"
}

Table "small_business_banking"."business_expense_categories" {
  "small_business_banking_category_id" SERIAL [pk, increment, note: "Unique identifier for each expense category"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business"]
  "category_name" VARCHAR(100) [not null, note: "Name of the expense category"]
  "category_description" TEXT [note: "Description of what expenses belong in this category"]
  "parent_category_id" INTEGER [ref: > "small_business_banking"."business_expense_categories"."small_business_banking_category_id", note: "Reference to parent category for hierarchical categorization"]
  "budget_amount" DECIMAL(18,2) [note: "Monthly budget amount for this category"]
  "is_tax_deductible" BOOLEAN [note: "Whether expenses in this category are typically tax deductible"]
  "gl_account_code" VARCHAR(50) [note: "General ledger account code for accounting integration"]

  Indexes {
    ("small_business_banking_business_id", "category_name") [unique, note: "Ensures category names are unique within a business"]
  }

  note: "Defines custom expense categories for business card transactions"
}

Table "small_business_banking"."business_transaction_categories" {
  "small_business_banking_transaction_category_id" SERIAL [pk, increment, note: "Unique identifier for each transaction categorization"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business"]
  "transaction_id" INTEGER [not null, note: "Reference to the transaction in credit_cards schema"]
  "small_business_banking_category_id" INTEGER [not null, ref: > "small_business_banking"."business_expense_categories"."small_business_banking_category_id", note: "Reference to the business expense category"]
  "notes" TEXT [note: "Additional notes about this transaction categorization"]
  "receipt_image_path" VARCHAR(500) [note: "Path to stored receipt image"]
  "tax_relevant" BOOLEAN [not null, default: false, note: "Flag indicating transaction is relevant for tax purposes"]
  "created_by" INTEGER [note: "User who created this categorization"]

  note: "Maps credit card transactions to business expense categories"
}

Table "small_business_banking"."transactions" {
  "small_business_banking_transaction_id" SERIAL [pk, increment, note: "Unique identifier for each transaction"]
  "small_business_banking_account_id" INTEGER [not null, ref: > "small_business_banking"."accounts"."small_business_banking_account_id", note: "Reference to the account where the transaction occurred"]
  "transaction_type" VARCHAR(50) [not null, note: "Type of transaction (deposit, withdrawal, payment, fee, etc.)"]
  "amount" DECIMAL(18,2) [not null, note: "Transaction amount"]
  "running_balance" DECIMAL(18,2) [note: "Account balance after this transaction"]
  "currency" CHAR(3) [not null, default: "USD", note: "Currency of the transaction"]
  "description" VARCHAR(255) [note: "Transaction description"]
  "reference_number" VARCHAR(100) [note: "External reference for the transaction"]
  "status" VARCHAR(20) [not null, default: "completed", note: "Status of the transaction (pending, completed, failed, reversed)"]
  "transaction_date" DATE [not null, note: "Date of the transaction"]
  "post_date" DATE [note: "Date when the transaction was posted to the account"]
  "created_by" VARCHAR(50) [note: "User or system that created the transaction"]

  note: "Records all financial transactions across business accounts"
}

Table "small_business_banking"."payments" {
  "small_business_banking_payment_id" SERIAL [pk, increment, note: "Unique identifier for each payment"]
  "source_account_id" INTEGER [ref: > "small_business_banking"."accounts"."small_business_banking_account_id", note: "Reference to the account funds are drawn from (for internal transfers)"]
  "destination_account_id" INTEGER [ref: > "small_business_banking"."accounts"."small_business_banking_account_id", note: "Reference to the account funds are deposited to (for internal transfers)"]
  "small_business_banking_loan_id" INTEGER [ref: > "small_business_banking"."loans"."small_business_banking_loan_id", note: "Reference to the loan being paid (for loan payments)"]
  "small_business_banking_credit_line_id" INTEGER [ref: > "small_business_banking"."credit_lines"."small_business_banking_credit_line_id", note: "Reference to the credit line being paid (for credit line payments)"]
  "credit_card_id" INTEGER [ref: > "small_business_banking"."business_card_accounts"."small_business_banking_business_card_account_id", note: "Reference to the credit card being paid (for card payments)"]
  "payment_method" VARCHAR(50) [not null, note: "Method of payment (ACH, wire, internal transfer, check)"]
  "payment_type" VARCHAR(50) [not null, note: "Type of payment (principal, interest, fees, or combination)"]
  "amount" DECIMAL(18,2) [not null, note: "Payment amount"]
  "principal_portion" DECIMAL(18,2) [note: "Portion of payment applied to principal"]
  "interest_portion" DECIMAL(18,2) [note: "Portion of payment applied to interest"]
  "fees_portion" DECIMAL(18,2) [note: "Portion of payment applied to fees"]
  "payment_date" DATE [not null, note: "Date the payment was made or scheduled"]
  "effective_date" DATE [note: "Date the payment is applied to the account"]
  "status" VARCHAR(20) [not null, default: "pending", note: "Status of the payment (pending, processed, failed)"]
  "external_reference" VARCHAR(100) [note: "External reference number for the payment"]
  "memo" VARCHAR(255) [note: "Additional payment information or notes"]

  note: "Tracks payments made against loans, credit lines, credit cards, and between accounts"
}

Table "small_business_banking"."documents" {
  "small_business_banking_document_id" SERIAL [pk, increment, note: "Unique identifier for each document record"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business the document belongs to"]
  "document_type" VARCHAR(50) [not null, note: "Type of document (tax return, financial statement, business license, etc.)"]
  "description" VARCHAR(255) [not null, note: "Description of the document"]
  "file_name" VARCHAR(255) [not null, note: "Original file name of the document"]
  "file_path" VARCHAR(1000) [not null, note: "Path to the stored document file"]
  "file_type" VARCHAR(50) [not null, note: "MIME type or format of the document"]
  "file_size" INTEGER [not null, note: "Size of the file in bytes"]
  "document_date" DATE [not null, note: "Date associated with the document content"]
  "upload_date" DATE [not null, note: "Date the document was uploaded"]
  "expiration_date" DATE [note: "Date when the document expires (if applicable)"]
  "status" VARCHAR(20) [not null, default: "active", note: "Status of the document (active, archived, expired)"]
  "created_by" VARCHAR(50) [note: "User or system that created the document record"]

  note: "Stores metadata about business documents with references to their file locations"
}

Table "small_business_banking"."regulatory_reports" {
  "small_business_banking_report_id" SERIAL [pk, increment, note: "Unique identifier for each regulatory report"]
  "report_type" VARCHAR(50) [not null, note: "Type of regulatory report (CRA, HMDA, BSA, etc.)"]
  "period_start_date" DATE [not null, note: "Start date of the reporting period"]
  "period_end_date" DATE [not null, note: "End date of the reporting period"]
  "due_date" DATE [not null, note: "Date when the report is due to be submitted"]
  "status" VARCHAR(20) [not null, default: "pending", note: "Status of the report (pending, in progress, submitted, accepted, rejected)"]
  "regulatory_agency" VARCHAR(50) [not null, note: "Agency the report is submitted to (FDIC, Federal Reserve, CFPB, etc.)"]
  "report_owner" INTEGER [not null, ref: > "enterprise"."associates"."enterprise_associate_id", note: "Department or individual responsible for the report"]
  "file_specification_version" VARCHAR(20) [note: "Version of the regulatory reporting specification"]
  "notes" TEXT [note: "Additional information about the report"]

  note: "Tracks required regulatory reports related to small business banking"
}

Table "small_business_banking"."report_submissions" {
  "small_business_banking_submission_id" SERIAL [pk, increment, note: "Unique identifier for each report submission"]
  "small_business_banking_report_id" INTEGER [not null, ref: > "small_business_banking"."regulatory_reports"."small_business_banking_report_id", note: "Reference to the regulatory report"]
  "submission_date" TIMESTAMP [not null, note: "Date and time of submission"]
  "submission_method" VARCHAR(50) [not null, note: "Method of submission (portal, API, mail, etc.)"]
  "confirmation_number" VARCHAR(100) [note: "Confirmation number received upon submission"]
  "submitted_by" INTEGER [not null, ref: > "enterprise"."associates"."enterprise_associate_id", note: "Person who submitted the report"]
  "submission_file_path" VARCHAR(500) [note: "Path to the submitted file"]
  "response_date" TIMESTAMP [note: "Date and time of regulator response"]
  "response_status" VARCHAR(20) [note: "Status of the regulator's response (accepted, rejected, need more info)"]
  "response_details" TEXT [note: "Details of the regulator's response"]

  note: "Records submissions of regulatory reports to authorities"
}

Table "small_business_banking"."regulatory_findings" {
  "small_business_banking_finding_id" SERIAL [pk, increment, note: "Unique identifier for each regulatory finding"]
  "small_business_banking_report_id" INTEGER [ref: > "small_business_banking"."regulatory_reports"."small_business_banking_report_id", note: "Associated regulatory report if applicable"]
  "small_business_banking_business_id" INTEGER [ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Associated business if finding is related to a specific customer"]
  "finding_date" DATE [not null, note: "Date the finding was identified or received"]
  "source" VARCHAR(50) [not null, note: "Source of the finding (exam, self-assessment, regulator, etc.)"]
  "finding_type" VARCHAR(50) [not null, note: "Type of finding (violation, concern, observation)"]
  "severity" VARCHAR(20) [not null, note: "Severity level (high, medium, low)"]
  "description" TEXT [not null, note: "Detailed description of the finding"]
  "regulation_reference" VARCHAR(100) [note: "Reference to specific regulation or law"]
  "corrective_action_required" BOOLEAN [not null, default: true, note: "Whether corrective action is required"]
  "corrective_action_description" TEXT [note: "Description of required corrective action"]
  "due_date" DATE [note: "Deadline for corrective action"]
  "responsible_party" INTEGER [ref: > "enterprise"."associates"."enterprise_associate_id", note: "Department or individual responsible for resolution"]
  "status" VARCHAR(20) [not null, default: "open", note: "Status of the finding (open, in progress, resolved, validated)"]
  "resolution_date" DATE [note: "Date when the finding was resolved"]
  "resolution_description" TEXT [note: "Description of how the finding was resolved"]

  note: "Tracks regulatory findings, violations, and corrective actions"
}

Table "small_business_banking"."compliance_cases" {
  "small_business_banking_case_id" SERIAL [pk, increment, note: "Unique identifier for each compliance case"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business"]
  "case_type" VARCHAR(50) [not null, note: "Type of compliance case (AML, KYC, fraud, fair lending, etc.)"]
  "opened_date" DATE [not null, note: "Date the case was opened"]
  "priority" VARCHAR(20) [not null, default: "medium", note: "Priority level (high, medium, low)"]
  "status" VARCHAR(20) [not null, default: "open", note: "Status of the case (open, in review, closed)"]
  "description" TEXT [not null, note: "Description of the compliance case"]
  "assigned_to" INTEGER [ref: > "enterprise"."associates"."enterprise_associate_id", note: "Person or team assigned to the case"]
  "source" VARCHAR(50) [not null, note: "Source that initiated the case (system alert, manual review, exam)"]
  "resolution" TEXT [note: "Description of the resolution"]
  "closed_date" DATE [note: "Date the case was closed"]
  "escalated" BOOLEAN [not null, default: false, note: "Whether the case was escalated"]
  "escalation_date" DATE [note: "Date of escalation if applicable"]
  "escalation_reason" TEXT [note: "Reason for escalation"]

  note: "Tracks compliance cases related to small business accounts"
}

Table "small_business_banking"."compliance_requirements" {
  "small_business_banking_requirement_id" SERIAL [pk, increment, note: "Unique identifier for each compliance requirement"]
  "requirement_name" VARCHAR(100) [not null, note: "Name of the compliance requirement"]
  "regulation" VARCHAR(100) [not null, note: "Associated regulation or law"]
  "regulatory_authority" VARCHAR(50) [not null, note: "Authority that enforces the requirement"]
  "description" TEXT [not null, note: "Detailed description of the requirement"]
  "business_impact" TEXT [not null, note: "How the requirement impacts business banking"]
  "effective_date" DATE [not null, note: "Date when the requirement became effective"]
  "end_date" DATE [note: "Date when the requirement expires (if applicable)"]
  "requirement_owner" INTEGER [not null, ref: > "enterprise"."associates"."enterprise_associate_id", note: "Department or role responsible for compliance"]
  "verification_frequency" VARCHAR(20) [not null, note: "How often compliance is verified (daily, monthly, quarterly, annual)"]
  "verification_procedure" TEXT [note: "Description of the verification procedure"]
  "control_measures" TEXT [note: "Measures in place to ensure compliance"]
  "is_active" BOOLEAN [not null, default: true, note: "Whether this requirement is currently active"]

  note: "Catalogs compliance requirements affecting small business banking"
}

Table "small_business_banking"."business_risk_assessments" {
  "small_business_banking_assessment_id" SERIAL [pk, increment, note: "Unique identifier for each risk assessment"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business being assessed"]
  "assessment_date" DATE [not null, note: "Date of the risk assessment"]
  "assessment_type" VARCHAR(50) [not null, note: "Type of assessment (AML, credit, operational, etc.)"]
  "conducted_by" INTEGER [not null, ref: > "enterprise"."associates"."enterprise_associate_id", note: "Person or team that conducted the assessment"]
  "methodology" TEXT [not null, note: "Methodology used for the assessment"]
  "industry_risk_score" INTEGER [not null, note: "Risk score based on industry (1-5 scale)"]
  "geographic_risk_score" INTEGER [not null, note: "Risk score based on geographic location (1-5 scale)"]
  "customer_risk_score" INTEGER [not null, note: "Risk score based on customer attributes (1-5 scale)"]
  "transaction_risk_score" INTEGER [not null, note: "Risk score based on transaction patterns (1-5 scale)"]
  "product_risk_score" INTEGER [not null, note: "Risk score based on products used (1-5 scale)"]
  "overall_risk_score" INTEGER [not null, note: "Combined overall risk score (1-5 scale)"]
  "risk_rating" VARCHAR(20) [not null, note: "Overall risk rating (low, medium, high)"]
  "rationale" TEXT [not null, note: "Rationale for the risk scores and rating"]
  "mitigating_factors" TEXT [note: "Factors that mitigate the identified risks"]
  "recommended_actions" TEXT [note: "Actions recommended to address risks"]
  "next_review_date" DATE [not null, note: "Date when the next assessment should be conducted"]

  note: "Stores risk assessments performed on small business customers"
}

Table "small_business_banking"."loan_fair_lending" {
  "small_business_banking_lending_record_id" SERIAL [pk, increment, note: "Unique identifier for each fair lending record"]
  "small_business_banking_loan_id" INTEGER [not null, ref: > "small_business_banking"."loans"."small_business_banking_loan_id", note: "Reference to the loan"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business"]
  "application_date" DATE [not null, note: "Date the loan application was received"]
  "decision_date" DATE [not null, note: "Date of the credit decision"]
  "census_tract" VARCHAR(11) [note: "Census tract of the business location"]
  "msa_md" VARCHAR(5) [note: "Metropolitan Statistical Area/Metropolitan Division code"]
  "reported_revenue" DECIMAL(18,2) [not null, note: "Gross annual revenue of the business as reported"]
  "loan_type" VARCHAR(50) [not null, note: "Type of loan (term loan, line of credit, etc.)"]
  "loan_purpose" VARCHAR(100) [not null, note: "Purpose of the loan"]
  "loan_amount" DECIMAL(18,2) [not null, note: "Requested loan amount"]
  "amount_approved" DECIMAL(18,2) [note: "Approved loan amount (if applicable)"]
  "action_taken" VARCHAR(20) [not null, note: "Action taken (approved, denied, withdrawn, etc.)"]
  "denial_reason_1" VARCHAR(50) [note: "Primary reason for denial (if applicable)"]
  "denial_reason_2" VARCHAR(50) [note: "Secondary reason for denial (if applicable)"]
  "denial_reason_3" VARCHAR(50) [note: "Tertiary reason for denial (if applicable)"]
  "denial_reason_4" VARCHAR(50) [note: "Quaternary reason for denial (if applicable)"]
  "rate_spread" DECIMAL(6,4) [note: "Difference between APR and average prime offer rate"]
  "naics_code" VARCHAR(6) [note: "North American Industry Classification System code"]
  "number_of_employees" INTEGER [note: "Number of business employees"]
  "minority_owned" BOOLEAN [note: "Whether business is minority-owned"]
  "women_owned" BOOLEAN [note: "Whether business is women-owned"]
  "lgbtq_owned" BOOLEAN [note: "Whether business is LGBTQ-owned"]
  "veteran_owned" BOOLEAN [note: "Whether business is veteran-owned"]
  "exemption_claimed" BOOLEAN [not null, default: false, note: "Whether an exemption from reporting was claimed"]
  "exemption_reason" VARCHAR(100) [note: "Reason for reporting exemption (if applicable)"]

  note: "Captures data required for small business lending fair lending analysis and reporting"
}

Table "small_business_banking"."credit_decisions" {
  "small_business_banking_decision_id" SERIAL [pk, increment, note: "Unique identifier for each credit decision"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business"]
  "product_type" VARCHAR(50) [not null, note: "Type of credit product (loan, line of credit, card)"]
  "application_id" VARCHAR(50) [not null, note: "Application identifier"]
  "decision_date" TIMESTAMP [not null, note: "Date and time of the decision"]
  "decision_type" VARCHAR(20) [not null, note: "Type of decision (automated, manual, hybrid)"]
  "decision_outcome" VARCHAR(20) [not null, note: "Outcome of the decision (approved, declined, counter-offer)"]
  "decision_factors" TEXT [note: "Factors that influenced the decision"]
  "credit_score" INTEGER [note: "Credit score used in decision"]
  "credit_score_model" VARCHAR(50) [note: "Model used for credit score"]
  "annual_revenue" DECIMAL(18,2) [note: "Annual revenue considered in decision"]
  "time_in_business" INTEGER [note: "Time in business (months) considered in decision"]
  "collateral_value" DECIMAL(18,2) [note: "Value of collateral (if applicable)"]
  "debt_service_coverage_ratio" DECIMAL(6,4) [note: "Debt service coverage ratio calculated"]
  "loan_to_value_ratio" DECIMAL(6,4) [note: "Loan to value ratio (if applicable)"]
  "exception_made" BOOLEAN [not null, default: false, note: "Whether an exception to policy was made"]
  "exception_reason" TEXT [note: "Reason for the exception (if applicable)"]
  "exception_approver" INTEGER [ref: > "enterprise"."associates"."enterprise_associate_id", note: "Person who approved the exception"]
  "decision_notes" TEXT [note: "Additional notes about the decision"]
  "decision_made_by" INTEGER [not null, ref: > "enterprise"."associates"."enterprise_associate_id", note: "Person or system that made the decision"]

  note: "Documents credit decisions for regulatory review and fair lending analysis"
}

Table "small_business_banking"."adverse_action_notices" {
  "small_business_banking_notice_id" SERIAL [pk, increment, note: "Unique identifier for each adverse action notice"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business"]
  "small_business_banking_decision_id" INTEGER [not null, ref: > "small_business_banking"."credit_decisions"."small_business_banking_decision_id", note: "Reference to the credit decision"]
  "notice_date" DATE [not null, note: "Date the notice was generated"]
  "delivery_method" VARCHAR(20) [not null, note: "Method of delivery (mail, email, etc.)"]
  "delivery_address" VARCHAR(200) [not null, note: "Address or email where notice was sent"]
  "delivery_date" DATE [not null, note: "Date the notice was delivered"]
  "primary_reason" VARCHAR(100) [not null, note: "Primary reason for adverse action"]
  "secondary_reasons" TEXT [note: "Secondary reasons for adverse action"]
  "credit_score_disclosed" BOOLEAN [not null, default: false, note: "Whether credit score was disclosed"]
  "credit_score" INTEGER [note: "Credit score disclosed (if applicable)"]
  "score_factors" TEXT [note: "Factors affecting the credit score"]
  "score_range_low" INTEGER [note: "Low end of score range"]
  "score_range_high" INTEGER [note: "High end of score range"]
  "ecoa_notice_included" BOOLEAN [not null, default: true, note: "Whether ECOA notice was included"]
  "fcra_notice_included" BOOLEAN [not null, default: true, note: "Whether FCRA notice was included"]
  "right_to_appraisal_notice" BOOLEAN [not null, default: false, note: "Whether right to appraisal notice was included"]
  "template_version" VARCHAR(20) [not null, note: "Version of the notice template used"]
  "generated_by" INTEGER [not null, ref: > "enterprise"."associates"."enterprise_associate_id", note: "Person or system that generated the notice"]
  "notice_file_path" VARCHAR(500) [note: "Path to stored copy of the notice"]

  note: "Tracks adverse action notices sent to declined applicants"
}

Table "small_business_banking"."business_due_diligence" {
  "small_business_banking_due_diligence_id" SERIAL [pk, increment, note: "Unique identifier for each due diligence record"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business"]
  "diligence_type" VARCHAR(20) [not null, note: "Type of due diligence (initial, ongoing, enhanced)"]
  "diligence_date" DATE [not null, note: "Date the due diligence was performed"]
  "performed_by" INTEGER [not null, ref: > "enterprise"."associates"."enterprise_associate_id", note: "Person who performed the due diligence"]
  "business_verified" BOOLEAN [not null, note: "Whether business identity was verified"]
  "verification_method" VARCHAR(100) [not null, note: "Method used to verify business (documents, database, etc.)"]
  "legal_structure_verified" BOOLEAN [not null, note: "Whether legal structure was verified"]
  "business_documents_reviewed" TEXT [note: "List of business documents reviewed"]
  "address_verified" BOOLEAN [not null, note: "Whether business address was verified"]
  "tin_verified" BOOLEAN [not null, note: "Whether tax ID was verified"]
  "high_risk_factors" TEXT [note: "High-risk factors identified during diligence"]
  "expected_activity" TEXT [note: "Description of expected account activity"]
  "actual_activity_consistent" BOOLEAN [note: "Whether actual activity is consistent with expected"]
  "screening_results" TEXT [note: "Results of screening against watchlists, PEPs, etc."]
  "site_visit_conducted" BOOLEAN [not null, default: false, note: "Whether a site visit was conducted"]
  "site_visit_date" DATE [note: "Date of site visit (if applicable)"]
  "site_visit_notes" TEXT [note: "Notes from site visit"]
  "risk_rating" VARCHAR(20) [not null, note: "Risk rating assigned (low, medium, high)"]
  "review_frequency" VARCHAR(20) [not null, note: "Frequency of ongoing reviews (monthly, quarterly, annual)"]
  "next_review_date" DATE [not null, note: "Date when next review is due"]
  "approval_status" VARCHAR(20) [not null, note: "Status of approval (pending, approved, rejected)"]
  "approved_by" INTEGER [ref: > "enterprise"."associates"."enterprise_associate_id", note: "Person who approved the due diligence"]
  "approval_date" DATE [note: "Date of approval"]
  "notes" TEXT [note: "Additional notes about the due diligence"]

  note: "Documents the due diligence process for business customers"
}

Table "small_business_banking"."beneficial_owner_verification" {
  "small_business_banking_verification_id" SERIAL [pk, increment, note: "Unique identifier for each verification record"]
  "small_business_banking_business_id" INTEGER [not null, ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business"]
  "small_business_banking_business_owner_id" INTEGER [not null, ref: > "small_business_banking"."business_owners"."small_business_banking_business_owner_id", note: "Reference to the business owner"]
  "verification_date" DATE [not null, note: "Date the verification was performed"]
  "performed_by" INTEGER [not null, ref: > "enterprise"."associates"."enterprise_associate_id", note: "Person who performed the verification"]
  "ownership_percentage_verified" BOOLEAN [not null, note: "Whether ownership percentage was verified"]
  "verification_method" VARCHAR(50) [not null, note: "Method used to verify beneficial ownership"]
  "id_type" VARCHAR(50) [note: "Type of ID provided (driver's license, passport, etc.)"]
  "id_number" VARCHAR(100) [note: "ID number (masked for security)"]
  "id_issuing_country" VARCHAR(2) [note: "Country that issued the ID"]
  "id_expiration_date" DATE [note: "Expiration date of the ID"]
  "address_verified" BOOLEAN [not null, note: "Whether address was verified"]
  "ssn_verified" BOOLEAN [note: "Whether SSN was verified (for US persons)"]
  "tin_verified" BOOLEAN [note: "Whether TIN was verified (for non-US persons)"]
  "screening_conducted" BOOLEAN [not null, default: true, note: "Whether screening was conducted"]
  "screening_date" DATE [note: "Date of screening"]
  "screening_system" VARCHAR(50) [note: "System used for screening"]
  "screening_results" TEXT [note: "Results of screening"]
  "pep_status" BOOLEAN [not null, default: false, note: "Whether person is a politically exposed person"]
  "sanctions_hit" BOOLEAN [not null, default: false, note: "Whether person appears on sanctions lists"]
  "adverse_media_found" BOOLEAN [not null, default: false, note: "Whether adverse media was found"]
  "certification_received" BOOLEAN [not null, note: "Whether certification of beneficial ownership was received"]
  "certification_date" DATE [note: "Date of certification"]
  "recertification_due_date" DATE [note: "Date when recertification is due"]
  "verification_status" VARCHAR(20) [not null, default: "pending", note: "Status of verification (pending, completed, exception)"]
  "exception_reason" TEXT [note: "Reason for exception (if applicable)"]
  "notes" TEXT [note: "Additional notes about the verification"]

  note: "Tracks verification of beneficial owners as required by FinCEN"
}

Table "small_business_banking"."suspicious_activity_reports" {
  "small_business_banking_sar_id" SERIAL [pk, increment, note: "Unique identifier for each SAR"]
  "small_business_banking_business_id" INTEGER [ref: > "small_business_banking"."businesses"."small_business_banking_business_id", note: "Reference to the business if applicable"]
  "filing_date" DATE [not null, note: "Date the SAR was filed"]
  "activity_start_date" DATE [not null, note: "Date when suspicious activity began"]
  "activity_end_date" DATE [not null, note: "Date when suspicious activity ended"]
  "filing_institution" VARCHAR(100) [not null, note: "Name of filing institution"]
  "suspicious_activity_type" VARCHAR(100) [not null, note: "Type of suspicious activity"]
  "suspicious_activity_description" TEXT [not null, note: "Detailed description of suspicious activity"]
  "amount_involved" DECIMAL(18,2) [not null, note: "Total amount involved in suspicious activity"]
  "structuring_involved" BOOLEAN [not null, default: false, note: "Whether structuring was involved"]
  "terrorist_financing_involved" BOOLEAN [not null, default: false, note: "Whether terrorist financing was involved"]
  "fraud_involved" BOOLEAN [not null, default: false, note: "Whether fraud was involved"]
  "money_laundering_involved" BOOLEAN [not null, default: false, note: "Whether money laundering was involved"]
  "insider_abuse_involved" BOOLEAN [not null, default: false, note: "Whether insider abuse was involved"]
  "other_involved" BOOLEAN [not null, default: false, note: "Whether other suspicious activity was involved"]
  "other_description" TEXT [note: "Description of other suspicious activity"]
  "law_enforcement_contacted" BOOLEAN [not null, default: false, note: "Whether law enforcement was contacted"]
  "law_enforcement_agency" VARCHAR(100) [note: "Agency contacted (if applicable)"]
  "law_enforcement_contact_date" DATE [note: "Date of law enforcement contact"]
  "law_enforcement_contact_name" VARCHAR(100) [note: "Name of law enforcement contact"]
  "account_closed" BOOLEAN [not null, default: false, note: "Whether account was closed"]
  "account_closing_date" DATE [note: "Date account was closed (if applicable)"]
  "prepared_by" INTEGER [not null, ref: > "enterprise"."associates"."enterprise_associate_id", note: "Person who prepared the SAR"]
  "approved_by" INTEGER [not null, ref: > "enterprise"."associates"."enterprise_associate_id", note: "Person who approved the SAR"]
  "bsa_officer_signature" INTEGER [not null, ref: > "enterprise"."associates"."enterprise_associate_id", note: "Signature of BSA officer"]
  "fincen_acknowledgment" VARCHAR(50) [note: "Acknowledgment received from FinCEN"]
  "sar_file_path" VARCHAR(500) [note: "Path to stored copy of the SAR"]
  "supporting_documentation" TEXT [note: "List of supporting documentation"]

  note: "Tracks Suspicious Activity Reports filed with FinCEN"
}

TableGroup BusinessCore {
  "small_business_banking"."businesses"
  "small_business_banking"."business_owners"
}

TableGroup AccountManagement {
  "small_business_banking"."accounts"
  "small_business_banking"."products"
  "small_business_banking"."account_signatories"
}

TableGroup LendingProducts {
  "small_business_banking"."loans"
  "small_business_banking"."credit_lines"
  "small_business_banking"."collateral"
  "small_business_banking"."loan_collateral"
}

TableGroup CreditCardIntegration {
  "small_business_banking"."business_card_accounts"
  "small_business_banking"."business_card_users"
  "small_business_banking"."business_expense_categories"
  "small_business_banking"."business_transaction_categories"
}

TableGroup TransactionAndDocuments {
  "small_business_banking"."transactions"
  "small_business_banking"."payments"
  "small_business_banking"."documents"
}

// Core Regulatory Groups
TableGroup RegulatoryReporting {
  "small_business_banking"."regulatory_reports"
  "small_business_banking"."report_submissions"
  "small_business_banking"."regulatory_findings"
}

TableGroup BusinessCompliance {
  "small_business_banking"."compliance_cases"
  "small_business_banking"."compliance_requirements"
  "small_business_banking"."business_risk_assessments"
}

TableGroup LendingCompliance {
  "small_business_banking"."loan_fair_lending"
  "small_business_banking"."credit_decisions"
  "small_business_banking"."adverse_action_notices"
}

TableGroup AMLAndKYC {
  "small_business_banking"."business_due_diligence"
  "small_business_banking"."beneficial_owner_verification"
  "small_business_banking"."suspicious_activity_reports"
}


//
// REFERENCES
//

Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."application_applicants"."consumer_lending_application_id"
Ref:"consumer_lending"."applicants"."consumer_lending_applicant_id" < "consumer_lending"."application_applicants"."consumer_lending_applicant_id"
Ref:"consumer_lending"."applicants"."consumer_lending_applicant_id" < "consumer_lending"."applicant_employments"."consumer_lending_applicant_id"
Ref:"consumer_lending"."applicants"."consumer_lending_applicant_id" < "consumer_lending"."applicant_incomes"."consumer_lending_applicant_id"
Ref:"consumer_lending"."applicants"."consumer_lending_applicant_id" < "consumer_lending"."applicant_assets"."consumer_lending_applicant_id"
Ref:"consumer_lending"."applicants"."consumer_lending_applicant_id" < "consumer_lending"."applicant_liabilities"."consumer_lending_applicant_id"
Ref:"consumer_lending"."loan_products"."consumer_lending_loan_product_id" < "consumer_lending"."product_eligibility_criteria"."consumer_lending_loan_product_id"
Ref:"consumer_lending"."loan_products"."consumer_lending_loan_product_id" < "consumer_lending"."risk_based_pricing_tiers"."consumer_lending_loan_product_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."credit_reports"."consumer_lending_application_id"
Ref:"consumer_lending"."applicants"."consumer_lending_applicant_id" < "consumer_lending"."credit_reports"."consumer_lending_applicant_id"
Ref:"consumer_lending"."credit_reports"."consumer_lending_credit_report_id" < "consumer_lending"."credit_report_tradelines"."consumer_lending_credit_report_id"
Ref:"consumer_lending"."credit_reports"."consumer_lending_credit_report_id" < "consumer_lending"."credit_inquiries"."consumer_lending_credit_report_id"
Ref:"consumer_lending"."credit_reports"."consumer_lending_credit_report_id" < "consumer_lending"."public_records"."consumer_lending_credit_report_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."application_decisions"."consumer_lending_application_id"
Ref:"consumer_lending"."decision_models"."consumer_lending_model_id" < "consumer_lending"."application_decisions"."consumer_lending_model_id"
Ref:"consumer_lending"."risk_based_pricing_tiers"."consumer_lending_pricing_tier_id" < "consumer_lending"."application_decisions"."consumer_lending_pricing_tier_id"
Ref:"consumer_lending"."application_decisions"."consumer_lending_decision_id" < "consumer_lending"."decision_reasons"."consumer_lending_decision_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."adverse_action_notices"."consumer_lending_application_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."vehicles"."consumer_lending_application_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."loan_accounts"."consumer_lending_application_id"
Ref:"consumer_lending"."loan_products"."consumer_lending_loan_product_id" < "consumer_lending"."loan_accounts"."consumer_lending_loan_product_id"
Ref:"consumer_lending"."loan_payments"."consumer_lending_payment_id" < "consumer_lending"."loan_fees"."consumer_lending_payment_id"
Ref:"consumer_lending"."vehicles"."vehicle_id" < "consumer_lending"."loan_collateral"."vehicle_id"
Ref:"consumer_lending"."loan_collateral"."consumer_lending_collateral_id" < "consumer_lending"."loan_insurance"."consumer_lending_collateral_id"
Ref:"consumer_lending"."loan_payments"."consumer_lending_payment_id" < "consumer_lending"."payment_schedules"."actual_payment_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."loan_documents"."consumer_lending_application_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."loan_communications"."consumer_lending_application_id"
Ref:"consumer_lending"."collection_accounts"."consumer_lending_collection_id" < "consumer_lending"."collection_actions"."consumer_lending_collection_id"
Ref:"consumer_lending"."collection_accounts"."consumer_lending_collection_id" < "consumer_lending"."payment_arrangements"."consumer_lending_collection_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."reg_z_disclosures"."consumer_lending_application_id"
Ref:"consumer_lending"."adverse_action_notices"."consumer_lending_notice_id" < "consumer_lending"."adverse_action_details"."consumer_lending_notice_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."ecoa_monitoring"."consumer_lending_application_id"
Ref:"consumer_lending"."applicants"."consumer_lending_applicant_id" < "consumer_lending"."ecoa_monitoring"."consumer_lending_applicant_id"
Ref:"consumer_lending"."loan_products"."consumer_lending_loan_product_id" < "consumer_lending"."fairlending_analysis"."product_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."reg_b_notices"."consumer_lending_application_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."appraisal_disclosures"."consumer_lending_application_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."military_lending_checks"."consumer_lending_application_id"
Ref:"consumer_lending"."applicants"."consumer_lending_applicant_id" < "consumer_lending"."military_lending_checks"."consumer_lending_applicant_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."high_cost_mortgage_tests"."consumer_lending_application_id"
Ref:"consumer_lending"."loan_applications"."consumer_lending_application_id" < "consumer_lending"."compliance_exceptions"."consumer_lending_application_id"
Ref:"consumer_lending"."loan_accounts"."loan_account_id" < "consumer_lending"."compliance_exceptions"."loan_account_id"
Ref:"credit_cards"."card_products"."credit_cards_product_id" < "credit_cards"."card_product_features"."credit_cards_product_id"
Ref:"credit_cards"."card_products"."credit_cards_product_id" < "credit_cards"."card_product_reward_categories"."credit_cards_product_id"
Ref:"credit_cards"."card_products"."credit_cards_product_id" < "credit_cards"."applications"."credit_cards_product_id"
Ref:"credit_cards"."card_products"."credit_cards_product_id" < "credit_cards"."card_accounts"."credit_cards_product_id"
Ref:"credit_cards"."applications"."credit_cards_application_id" < "credit_cards"."card_accounts"."credit_cards_application_id"
Ref:"credit_cards"."transactions"."credit_cards_transaction_id" < "credit_cards"."fees"."credit_cards_transaction_id"
Ref:"credit_cards"."statements"."credit_cards_statement_id" < "credit_cards"."fees"."credit_cards_statement_id"
Ref:"credit_cards"."statements"."credit_cards_statement_id" < "credit_cards"."interest_charges"."credit_cards_statement_id"
Ref:"credit_cards"."transactions"."credit_cards_transaction_id" < "credit_cards"."rewards"."credit_cards_transaction_id"
Ref:"credit_cards"."transactions"."credit_cards_transaction_id" < "credit_cards"."balance_transfers"."credit_cards_transaction_id"
Ref:"credit_cards"."promotional_offers"."credit_cards_offer_id" < "credit_cards"."balance_transfers"."credit_cards_offer_id"
Ref:"credit_cards"."payment_methods"."credit_cards_payment_method_id" < "credit_cards"."autopay_settings"."credit_cards_payment_method_id"
Ref:"credit_cards"."transactions"."credit_cards_transaction_id" < "credit_cards"."disputed_transactions"."credit_cards_transaction_id"
Ref:"credit_cards"."card_accounts"."credit_cards_card_account_id" < "credit_cards"."fraud_cases"."credit_cards_card_account_id"
Ref:"credit_cards"."fraud_cases"."credit_cards_case_id" < "credit_cards"."fraud_transactions"."credit_cards_case_id"
Ref:"credit_cards"."transactions"."credit_cards_transaction_id" < "credit_cards"."fraud_transactions"."transaction_id"
Ref:"credit_cards"."applications"."credit_cards_application_id" < "credit_cards"."credit_card_applications_hmda"."credit_cards_application_id"
Ref:"credit_cards"."applications"."credit_cards_application_id" < "credit_cards"."reg_z_credit_card_disclosures"."credit_cards_application_id"
Ref:"credit_cards"."applications"."credit_cards_application_id" < "credit_cards"."ability_to_pay_assessments"."credit_cards_application_id"



