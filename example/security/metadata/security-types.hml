---
kind: ScalarType
version: v1
definition:
  name: Varchar
  graphql:
    typeName: Security_Varchar

---
kind: BooleanExpressionType
version: v1
definition:
  name: VarcharBoolExp
  operand:
    scalar:
      type: Varchar
      comparisonOperators:
        - name: _eq
          argumentType: Varchar!
        - name: _gt
          argumentType: Varchar!
        - name: _gte
          argumentType: Varchar!
        - name: _ilike
          argumentType: Varchar!
        - name: _in
          argumentType: "[Varchar!]!"
        - name: _iregex
          argumentType: Varchar!
        - name: _like
          argumentType: Varchar!
        - name: _lt
          argumentType: Varchar!
        - name: _lte
          argumentType: Varchar!
        - name: _neq
          argumentType: Varchar!
        - name: _nilike
          argumentType: Varchar!
        - name: _niregex
          argumentType: Varchar!
        - name: _nlike
          argumentType: Varchar!
        - name: _nregex
          argumentType: Varchar!
        - name: _regex
          argumentType: Varchar!
        - name: starts_with
          argumentType: Varchar!
        - name: ts_match_tt
          argumentType: Varchar!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: varchar
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_VarcharBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: varchar
  representation: Varchar
  graphql:
    comparisonExpressionTypeName: Security_VarcharComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Int4
  graphql:
    typeName: Security_Int4

---
kind: BooleanExpressionType
version: v1
definition:
  name: Int4BoolExp
  operand:
    scalar:
      type: Int4
      comparisonOperators:
        - name: _eq
          argumentType: Int4!
        - name: _gt
          argumentType: Int4!
        - name: _gte
          argumentType: Int4!
        - name: _in
          argumentType: "[Int4!]!"
        - name: _lt
          argumentType: Int4!
        - name: _lte
          argumentType: Int4!
        - name: _neq
          argumentType: Int4!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: int4
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_Int4BoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: int4
  representation: Int4
  graphql:
    comparisonExpressionTypeName: Security_Int4ComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Uuid
  graphql:
    typeName: Security_Uuid

---
kind: BooleanExpressionType
version: v1
definition:
  name: UuidBoolExp
  operand:
    scalar:
      type: Uuid
      comparisonOperators:
        - name: _eq
          argumentType: Uuid!
        - name: _gt
          argumentType: Uuid!
        - name: _gte
          argumentType: Uuid!
        - name: _in
          argumentType: "[Uuid!]!"
        - name: _lt
          argumentType: Uuid!
        - name: _lte
          argumentType: Uuid!
        - name: _neq
          argumentType: Uuid!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: uuid
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_UuidBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: uuid
  representation: Uuid
  graphql:
    comparisonExpressionTypeName: Security_UuidComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Text
  graphql:
    typeName: Security_Text

---
kind: BooleanExpressionType
version: v1
definition:
  name: TextBoolExp
  operand:
    scalar:
      type: Text
      comparisonOperators:
        - name: _eq
          argumentType: Text!
        - name: _gt
          argumentType: Text!
        - name: _gte
          argumentType: Text!
        - name: _ilike
          argumentType: Text!
        - name: _in
          argumentType: "[Text!]!"
        - name: _iregex
          argumentType: Text!
        - name: _like
          argumentType: Text!
        - name: _lt
          argumentType: Text!
        - name: _lte
          argumentType: Text!
        - name: _neq
          argumentType: Text!
        - name: _nilike
          argumentType: Text!
        - name: _niregex
          argumentType: Text!
        - name: _nlike
          argumentType: Text!
        - name: _nregex
          argumentType: Text!
        - name: _regex
          argumentType: Text!
        - name: starts_with
          argumentType: Text!
        - name: ts_match_tt
          argumentType: Text!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: text
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_TextBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: text
  representation: Text
  graphql:
    comparisonExpressionTypeName: Security_TextComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: VarcharAggExp
  operand:
    scalar:
      aggregatedType: Varchar
      aggregationFunctions:
        - name: max
          returnType: Text
        - name: min
          returnType: Text
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: varchar
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_VarcharAggExp

---
kind: ScalarType
version: v1
definition:
  name: Numeric
  graphql:
    typeName: Security_Numeric

---
kind: BooleanExpressionType
version: v1
definition:
  name: NumericBoolExp
  operand:
    scalar:
      type: Numeric
      comparisonOperators:
        - name: _eq
          argumentType: Numeric!
        - name: _gt
          argumentType: Numeric!
        - name: _gte
          argumentType: Numeric!
        - name: _in
          argumentType: "[Numeric!]!"
        - name: _lt
          argumentType: Numeric!
        - name: _lte
          argumentType: Numeric!
        - name: _neq
          argumentType: Numeric!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: numeric
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_NumericBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: numeric
  representation: Numeric
  graphql:
    comparisonExpressionTypeName: Security_NumericComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Int8
  graphql:
    typeName: Security_Int8

---
kind: BooleanExpressionType
version: v1
definition:
  name: Int8BoolExp
  operand:
    scalar:
      type: Int8
      comparisonOperators:
        - name: _eq
          argumentType: Int8!
        - name: _gt
          argumentType: Int8!
        - name: _gte
          argumentType: Int8!
        - name: _in
          argumentType: "[Int8!]!"
        - name: _lt
          argumentType: Int8!
        - name: _lte
          argumentType: Int8!
        - name: _neq
          argumentType: Int8!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: int8
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_Int8BoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: int8
  representation: Int8
  graphql:
    comparisonExpressionTypeName: Security_Int8ComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: Int4AggExp
  operand:
    scalar:
      aggregatedType: Int4
      aggregationFunctions:
        - name: avg
          returnType: Numeric
        - name: bit_and
          returnType: Int4
        - name: bit_or
          returnType: Int4
        - name: bit_xor
          returnType: Int4
        - name: max
          returnType: Int4
        - name: min
          returnType: Int4
        - name: stddev
          returnType: Numeric
        - name: stddev_pop
          returnType: Numeric
        - name: stddev_samp
          returnType: Numeric
        - name: sum
          returnType: Int8
        - name: var_pop
          returnType: Numeric
        - name: var_samp
          returnType: Numeric
        - name: variance
          returnType: Numeric
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: int4
          functionMapping:
            avg:
              name: avg
            bit_and:
              name: bit_and
            bit_or:
              name: bit_or
            bit_xor:
              name: bit_xor
            max:
              name: max
            min:
              name: min
            stddev:
              name: stddev
            stddev_pop:
              name: stddev_pop
            stddev_samp:
              name: stddev_samp
            sum:
              name: sum
            var_pop:
              name: var_pop
            var_samp:
              name: var_samp
            variance:
              name: variance
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_Int4AggExp

---
kind: AggregateExpression
version: v1
definition:
  name: UuidAggExp
  operand:
    scalar:
      aggregatedType: Uuid
      aggregationFunctions: []
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: uuid
          functionMapping: {}
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_UuidAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: VarcharOrderByExp
  operand:
    scalar:
      orderedType: Varchar
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_VarcharOrderByExp

---
kind: OrderByExpression
version: v1
definition:
  name: Int4OrderByExp
  operand:
    scalar:
      orderedType: Int4
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_Int4OrderByExp

---
kind: OrderByExpression
version: v1
definition:
  name: UuidOrderByExp
  operand:
    scalar:
      orderedType: Uuid
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_UuidOrderByExp

---
kind: ScalarType
version: v1
definition:
  name: Timestamp
  graphql:
    typeName: Security_Timestamp

---
kind: BooleanExpressionType
version: v1
definition:
  name: TimestampBoolExp
  operand:
    scalar:
      type: Timestamp
      comparisonOperators:
        - name: _eq
          argumentType: Timestamp!
        - name: _gt
          argumentType: Timestamp!
        - name: _gte
          argumentType: Timestamp!
        - name: _in
          argumentType: "[Timestamp!]!"
        - name: _lt
          argumentType: Timestamp!
        - name: _lte
          argumentType: Timestamp!
        - name: _neq
          argumentType: Timestamp!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: timestamp
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_TimestampBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: timestamp
  representation: Timestamp
  graphql:
    comparisonExpressionTypeName: Security_TimestampComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Bool
  graphql:
    typeName: Security_Bool

---
kind: BooleanExpressionType
version: v1
definition:
  name: BoolBoolExp
  operand:
    scalar:
      type: Bool
      comparisonOperators:
        - name: _eq
          argumentType: Bool!
        - name: _gt
          argumentType: Bool!
        - name: _gte
          argumentType: Bool!
        - name: _in
          argumentType: "[Bool!]!"
        - name: _lt
          argumentType: Bool!
        - name: _lte
          argumentType: Bool!
        - name: _neq
          argumentType: Bool!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: bool
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_BoolBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: bool
  representation: Bool
  graphql:
    comparisonExpressionTypeName: Security_BoolComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: TimestampAggExp
  operand:
    scalar:
      aggregatedType: Timestamp
      aggregationFunctions:
        - name: max
          returnType: Timestamp
        - name: min
          returnType: Timestamp
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: timestamp
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_TimestampAggExp

---
kind: AggregateExpression
version: v1
definition:
  name: BoolAggExp
  operand:
    scalar:
      aggregatedType: Bool
      aggregationFunctions:
        - name: bool_and
          returnType: Bool
        - name: bool_or
          returnType: Bool
        - name: every
          returnType: Bool
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: bool
          functionMapping:
            bool_and:
              name: bool_and
            bool_or:
              name: bool_or
            every:
              name: every
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_BoolAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: TimestampOrderByExp
  operand:
    scalar:
      orderedType: Timestamp
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_TimestampOrderByExp

---
kind: OrderByExpression
version: v1
definition:
  name: BoolOrderByExp
  operand:
    scalar:
      orderedType: Bool
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_BoolOrderByExp

---
kind: AggregateExpression
version: v1
definition:
  name: TextAggExp
  operand:
    scalar:
      aggregatedType: Text
      aggregationFunctions:
        - name: max
          returnType: Text
        - name: min
          returnType: Text
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: text
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_TextAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: TextOrderByExp
  operand:
    scalar:
      orderedType: Text
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_TextOrderByExp

---
kind: ScalarType
version: v1
definition:
  name: Float4
  graphql:
    typeName: Security_Float4

---
kind: BooleanExpressionType
version: v1
definition:
  name: Float4BoolExp
  operand:
    scalar:
      type: Float4
      comparisonOperators:
        - name: _eq
          argumentType: Float4!
        - name: _gt
          argumentType: Float4!
        - name: _gte
          argumentType: Float4!
        - name: _in
          argumentType: "[Float4!]!"
        - name: _lt
          argumentType: Float4!
        - name: _lte
          argumentType: Float4!
        - name: _neq
          argumentType: Float4!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: float4
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_Float4BoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: float4
  representation: Float4
  graphql:
    comparisonExpressionTypeName: Security_Float4ComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Date
  graphql:
    typeName: Security_Date

---
kind: BooleanExpressionType
version: v1
definition:
  name: DateBoolExp
  operand:
    scalar:
      type: Date
      comparisonOperators:
        - name: _eq
          argumentType: Date!
        - name: _gt
          argumentType: Date!
        - name: _gte
          argumentType: Date!
        - name: _in
          argumentType: "[Date!]!"
        - name: _lt
          argumentType: Date!
        - name: _lte
          argumentType: Date!
        - name: _neq
          argumentType: Date!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: date
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_DateBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: date
  representation: Date
  graphql:
    comparisonExpressionTypeName: Security_DateComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Float8
  graphql:
    typeName: Security_Float8

---
kind: BooleanExpressionType
version: v1
definition:
  name: Float8BoolExp
  operand:
    scalar:
      type: Float8
      comparisonOperators:
        - name: _eq
          argumentType: Float8!
        - name: _gt
          argumentType: Float8!
        - name: _gte
          argumentType: Float8!
        - name: _in
          argumentType: "[Float8!]!"
        - name: _lt
          argumentType: Float8!
        - name: _lte
          argumentType: Float8!
        - name: _neq
          argumentType: Float8!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: float8
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_Float8BoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: float8
  representation: Float8
  graphql:
    comparisonExpressionTypeName: Security_Float8ComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: Float4AggExp
  operand:
    scalar:
      aggregatedType: Float4
      aggregationFunctions:
        - name: avg
          returnType: Float8
        - name: max
          returnType: Float4
        - name: min
          returnType: Float4
        - name: stddev
          returnType: Float8
        - name: stddev_pop
          returnType: Float8
        - name: stddev_samp
          returnType: Float8
        - name: sum
          returnType: Float4
        - name: var_pop
          returnType: Float8
        - name: var_samp
          returnType: Float8
        - name: variance
          returnType: Float8
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: float4
          functionMapping:
            avg:
              name: avg
            max:
              name: max
            min:
              name: min
            stddev:
              name: stddev
            stddev_pop:
              name: stddev_pop
            stddev_samp:
              name: stddev_samp
            sum:
              name: sum
            var_pop:
              name: var_pop
            var_samp:
              name: var_samp
            variance:
              name: variance
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_Float4AggExp

---
kind: AggregateExpression
version: v1
definition:
  name: DateAggExp
  operand:
    scalar:
      aggregatedType: Date
      aggregationFunctions:
        - name: max
          returnType: Date
        - name: min
          returnType: Date
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: date
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_DateAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: Float4OrderByExp
  operand:
    scalar:
      orderedType: Float4
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_Float4OrderByExp

---
kind: OrderByExpression
version: v1
definition:
  name: DateOrderByExp
  operand:
    scalar:
      orderedType: Date
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_DateOrderByExp

---
kind: ScalarType
version: v1
definition:
  name: Inet
  graphql:
    typeName: Security_Inet

---
kind: BooleanExpressionType
version: v1
definition:
  name: InetBoolExp
  operand:
    scalar:
      type: Inet
      comparisonOperators:
        - name: _eq
          argumentType: Inet!
        - name: _gt
          argumentType: Inet!
        - name: _gte
          argumentType: Inet!
        - name: _in
          argumentType: "[Inet!]!"
        - name: _lt
          argumentType: Inet!
        - name: _lte
          argumentType: Inet!
        - name: _neq
          argumentType: Inet!
        - name: inet_same_family
          argumentType: Inet!
        - name: network_overlap
          argumentType: Inet!
        - name: network_sub
          argumentType: Inet!
        - name: network_subeq
          argumentType: Inet!
        - name: network_sup
          argumentType: Inet!
        - name: network_supeq
          argumentType: Inet!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: inet
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_InetBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: inet
  representation: Inet
  graphql:
    comparisonExpressionTypeName: Security_InetComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: InetAggExp
  operand:
    scalar:
      aggregatedType: Inet
      aggregationFunctions:
        - name: max
          returnType: Inet
        - name: min
          returnType: Inet
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: inet
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_InetAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: InetOrderByExp
  operand:
    scalar:
      orderedType: Inet
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_InetOrderByExp

---
kind: AggregateExpression
version: v1
definition:
  name: Int8AggExp
  operand:
    scalar:
      aggregatedType: Int8
      aggregationFunctions:
        - name: avg
          returnType: Numeric
        - name: bit_and
          returnType: Int8
        - name: bit_or
          returnType: Int8
        - name: bit_xor
          returnType: Int8
        - name: max
          returnType: Int8
        - name: min
          returnType: Int8
        - name: stddev
          returnType: Numeric
        - name: stddev_pop
          returnType: Numeric
        - name: stddev_samp
          returnType: Numeric
        - name: sum
          returnType: Numeric
        - name: var_pop
          returnType: Numeric
        - name: var_samp
          returnType: Numeric
        - name: variance
          returnType: Numeric
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: int8
          functionMapping:
            avg:
              name: avg
            bit_and:
              name: bit_and
            bit_or:
              name: bit_or
            bit_xor:
              name: bit_xor
            max:
              name: max
            min:
              name: min
            stddev:
              name: stddev
            stddev_pop:
              name: stddev_pop
            stddev_samp:
              name: stddev_samp
            sum:
              name: sum
            var_pop:
              name: var_pop
            var_samp:
              name: var_samp
            variance:
              name: variance
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_Int8AggExp

---
kind: OrderByExpression
version: v1
definition:
  name: Int8OrderByExp
  operand:
    scalar:
      orderedType: Int8
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_Int8OrderByExp

---
kind: ScalarType
version: v1
definition:
  name: SecurityEnvironment
  graphql:
    typeName: Security_SecurityEnvironment

---
kind: BooleanExpressionType
version: v1
definition:
  name: SecurityEnvironmentBoolExp
  operand:
    scalar:
      type: SecurityEnvironment
      comparisonOperators:
        - name: _eq
          argumentType: SecurityEnvironment!
        - name: _gt
          argumentType: SecurityEnvironment!
        - name: _gte
          argumentType: SecurityEnvironment!
        - name: _in
          argumentType: "[SecurityEnvironment!]!"
        - name: _lt
          argumentType: SecurityEnvironment!
        - name: _lte
          argumentType: SecurityEnvironment!
        - name: _neq
          argumentType: SecurityEnvironment!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: security_environment
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_SecurityEnvironmentBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: security_environment
  representation: SecurityEnvironment
  graphql:
    comparisonExpressionTypeName: Security_SecurityEnvironmentComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: SecurityEnvironmentAggExp
  operand:
    scalar:
      aggregatedType: SecurityEnvironment
      aggregationFunctions:
        - name: max
          returnType: SecurityEnvironment
        - name: min
          returnType: SecurityEnvironment
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: security_environment
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_SecurityEnvironmentAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: SecurityEnvironmentOrderByExp
  operand:
    scalar:
      orderedType: SecurityEnvironment
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_SecurityEnvironmentOrderByExp

---
kind: ScalarType
version: v1
definition:
  name: SecurityTcpFlagType
  graphql:
    typeName: Security_SecurityTcpFlagType

---
kind: BooleanExpressionType
version: v1
definition:
  name: SecurityTcpFlagTypeBoolExp
  operand:
    scalar:
      type: SecurityTcpFlagType
      comparisonOperators:
        - name: _eq
          argumentType: SecurityTcpFlagType!
        - name: _gt
          argumentType: SecurityTcpFlagType!
        - name: _gte
          argumentType: SecurityTcpFlagType!
        - name: _in
          argumentType: "[SecurityTcpFlagType!]!"
        - name: _lt
          argumentType: SecurityTcpFlagType!
        - name: _lte
          argumentType: SecurityTcpFlagType!
        - name: _neq
          argumentType: SecurityTcpFlagType!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: security_tcp_flag_type
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_SecurityTcpFlagTypeBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: security_tcp_flag_type
  representation: SecurityTcpFlagType
  graphql:
    comparisonExpressionTypeName: Security_SecurityTcpFlagTypeComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: SecurityTcpFlagTypeAggExp
  operand:
    scalar:
      aggregatedType: SecurityTcpFlagType
      aggregationFunctions:
        - name: max
          returnType: SecurityTcpFlagType
        - name: min
          returnType: SecurityTcpFlagType
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: security_tcp_flag_type
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_SecurityTcpFlagTypeAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: SecurityTcpFlagTypeOrderByExp
  operand:
    scalar:
      orderedType: SecurityTcpFlagType
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_SecurityTcpFlagTypeOrderByExp

---
kind: ScalarType
version: v1
definition:
  name: SecurityNetworkProtocols
  graphql:
    typeName: Security_SecurityNetworkProtocols

---
kind: BooleanExpressionType
version: v1
definition:
  name: SecurityNetworkProtocolsBoolExp
  operand:
    scalar:
      type: SecurityNetworkProtocols
      comparisonOperators:
        - name: _eq
          argumentType: SecurityNetworkProtocols!
        - name: _gt
          argumentType: SecurityNetworkProtocols!
        - name: _gte
          argumentType: SecurityNetworkProtocols!
        - name: _in
          argumentType: "[SecurityNetworkProtocols!]!"
        - name: _lt
          argumentType: SecurityNetworkProtocols!
        - name: _lte
          argumentType: SecurityNetworkProtocols!
        - name: _neq
          argumentType: SecurityNetworkProtocols!
      dataConnectorOperatorMapping:
        - dataConnectorName: security
          dataConnectorScalarType: security_network_protocols
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Security_SecurityNetworkProtocolsBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: security
  dataConnectorScalarType: security_network_protocols
  representation: SecurityNetworkProtocols
  graphql:
    comparisonExpressionTypeName: Security_SecurityNetworkProtocolsComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: SecurityNetworkProtocolsAggExp
  operand:
    scalar:
      aggregatedType: SecurityNetworkProtocols
      aggregationFunctions:
        - name: max
          returnType: SecurityNetworkProtocols
        - name: min
          returnType: SecurityNetworkProtocols
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: security_network_protocols
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_SecurityNetworkProtocolsAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: SecurityNetworkProtocolsOrderByExp
  operand:
    scalar:
      orderedType: SecurityNetworkProtocols
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_SecurityNetworkProtocolsOrderByExp

---
kind: AggregateExpression
version: v1
definition:
  name: NumericAggExp
  operand:
    scalar:
      aggregatedType: Numeric
      aggregationFunctions:
        - name: avg
          returnType: Numeric
        - name: max
          returnType: Numeric
        - name: min
          returnType: Numeric
        - name: stddev
          returnType: Numeric
        - name: stddev_pop
          returnType: Numeric
        - name: stddev_samp
          returnType: Numeric
        - name: sum
          returnType: Numeric
        - name: var_pop
          returnType: Numeric
        - name: var_samp
          returnType: Numeric
        - name: variance
          returnType: Numeric
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: security
          dataConnectorScalarType: numeric
          functionMapping:
            avg:
              name: avg
            max:
              name: max
            min:
              name: min
            stddev:
              name: stddev
            stddev_pop:
              name: stddev_pop
            stddev_samp:
              name: stddev_samp
            sum:
              name: sum
            var_pop:
              name: var_pop
            var_samp:
              name: var_samp
            variance:
              name: variance
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Security_NumericAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: NumericOrderByExp
  operand:
    scalar:
      orderedType: Numeric
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Security_NumericOrderByExp

