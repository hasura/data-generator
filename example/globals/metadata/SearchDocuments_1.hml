---
kind: ObjectType
version: v1
definition:
  name: SearchDocumentsOutgoingRelationships
  description: "

    \    Class for representing relationships between elements.

    \    Designed to avoid name collisions with SQLAlchemy's Relationship
    class.

    \    Enriched with PK values for both source and target elements.

    \    "
  fields:
    - name: docId
      type: String
    - name: isSource
      type: Boolean!
    - name: metadata
      type: Json!
    - name: relationshipId
      type: String!
    - name: relationshipType
      type: String!
    - name: sourceElementPk
      type: Int
    - name: sourceElementType
      type: String
    - name: sourceId
      type: String!
    - name: targetContentPreview
      type: String
    - name: targetElementPk
      type: Int
    - name: targetElementType
      type: String
    - name: targetReference
      type: String!
  graphql:
    typeName: SearchDocumentsOutgoingRelationships
    inputTypeName: SearchDocumentsOutgoingRelationshipsInput
  dataConnectorTypeMapping:
    - dataConnectorName: documents
      dataConnectorObjectType: search_documents_outgoing_relationships
      fieldMapping:
        docId:
          column:
            name: doc_id
        isSource:
          column:
            name: is_source
        metadata:
          column:
            name: metadata
        relationshipId:
          column:
            name: relationship_id
        relationshipType:
          column:
            name: relationship_type
        sourceElementPk:
          column:
            name: source_element_pk
        sourceElementType:
          column:
            name: source_element_type
        sourceId:
          column:
            name: source_id
        targetContentPreview:
          column:
            name: target_content_preview
        targetElementPk:
          column:
            name: target_element_pk
        targetElementType:
          column:
            name: target_element_type
        targetReference:
          column:
            name: target_reference

---
kind: TypePermissions
version: v1
definition:
  typeName: SearchDocumentsOutgoingRelationships
  permissions:
    - role: admin
      output:
        allowedFields:
          - docId
          - isSource
          - metadata
          - relationshipId
          - relationshipType
          - sourceElementPk
          - sourceElementType
          - sourceId
          - targetContentPreview
          - targetElementPk
          - targetElementType
          - targetReference

---
kind: ObjectType
version: v1
definition:
  name: SearchDocuments
  description: Pydantic model for storing search result data in a flat structure
    with relationships.
  fields:
    - name: contentLocation
      type: String
    - name: contentPreview
      type: String
    - name: docId
      type: String!
    - name: docType
      type: String!
    - name: elementId
      type: String!
    - name: elementPk
      type: Int!
    - name: elementType
      type: String!
    - name: outgoingRelationships
      type: "[SearchDocumentsOutgoingRelationships!]!"
    - name: resolutionError
      type: String
    - name: resolvedContent
      type: String
    - name: similarity
      type: Float!
    - name: source
      type: String
  graphql:
    typeName: SearchDocuments
    inputTypeName: SearchDocumentsInput
  dataConnectorTypeMapping:
    - dataConnectorName: documents
      dataConnectorObjectType: search_documents
      fieldMapping:
        contentLocation:
          column:
            name: content_location
        contentPreview:
          column:
            name: content_preview
        docId:
          column:
            name: doc_id
        docType:
          column:
            name: doc_type
        elementId:
          column:
            name: element_id
        elementPk:
          column:
            name: element_pk
        elementType:
          column:
            name: element_type
        outgoingRelationships:
          column:
            name: outgoing_relationships
        resolutionError:
          column:
            name: resolution_error
        resolvedContent:
          column:
            name: resolved_content
        similarity:
          column:
            name: similarity
        source:
          column:
            name: source

---
kind: TypePermissions
version: v1
definition:
  typeName: SearchDocuments
  permissions:
    - role: admin
      output:
        allowedFields:
          - contentLocation
          - contentPreview
          - docId
          - docType
          - elementId
          - elementPk
          - elementType
          - outgoingRelationships
          - resolutionError
          - resolvedContent
          - similarity
          - source

---
kind: Command
version: v1
definition:
  name: SearchDocuments
  outputType: "[SearchDocuments!]!"
  arguments:
    - name: limit
      type: Int!
    - name: searchFor
      type: String!
  source:
    dataConnectorName: documents
    dataConnectorCommand:
      function: search_documents
    argumentMapping:
      limit: limit
      searchFor: search_for
  graphql:
    rootFieldName: searchDocuments
    rootFieldKind: Query
  description: >-
    This performs a similarity search to identify individual elements (like
    paragraphs, list items, or tables) in a document
        and returns the type of elements, the content of those elements and a preview of its related items.
        Items may be related structurally, like parent, child, sibling, explicitly like a link (if the document type
        supports that), and semantically, like a similar word or phrase.

        :param search_for: A string representing the query text to search for in the documents.
        :param limit: An integer specifying the maximum number of search results to return. Defaults to 10.
        :return: A SearchResults object containing the search results matching the query.

---
kind: CommandPermissions
version: v1
definition:
  commandName: SearchDocuments
  permissions:
    - role: admin
      allowExecution: true

