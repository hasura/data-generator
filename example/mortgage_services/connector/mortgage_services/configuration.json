{
  "version": "5",
  "$schema": "schema.json",
  "connectionSettings": {
    "connectionUri": {
      "variable": "CONNECTION_URI"
    },
    "poolSettings": {
      "maxConnections": 50,
      "poolTimeout": 30,
      "idleTimeout": 180,
      "checkConnectionAfterIdle": 60,
      "connectionLifetime": 600
    },
    "isolationLevel": "ReadCommitted"
  },
  "metadata": {
    "tables": {
      "app_mgmt_application_components": {
        "schemaName": "app_mgmt",
        "tableName": "application_components",
        "columns": {
          "app_mgmt_application_id": {
            "name": "app_mgmt_application_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier for the application that uses the component."
          },
          "app_mgmt_component_id": {
            "name": "app_mgmt_component_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier for the software component used by the application."
          },
          "dependency_type": {
            "name": "dependency_type",
            "type": {
              "scalarType": "app_mgmt_dependency_types"
            },
            "nullable": "nonNullable",
            "description": "Type of dependency (e.g., runtime, build, test)."
          }
        },
        "uniquenessConstraints": {
          "application_components_pkey": [
            "app_mgmt_application_id",
            "app_mgmt_component_id",
            "dependency_type"
          ]
        },
        "foreignRelations": {
          "application_components_app_mgmt_application_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "applications",
            "columnMapping": {
              "app_mgmt_application_id": "app_mgmt_application_id"
            }
          },
          "application_components_app_mgmt_component_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "components",
            "columnMapping": {
              "app_mgmt_component_id": "app_mgmt_component_id"
            }
          }
        },
        "description": "Table to store dependencies between applications and their software components."
      },
      "app_mgmt_application_licenses": {
        "schemaName": "app_mgmt",
        "tableName": "application_licenses",
        "columns": {
          "app_mgmt_application_id": {
            "name": "app_mgmt_application_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier for the application that uses the license."
          },
          "app_mgmt_license_id": {
            "name": "app_mgmt_license_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier for the software license used by the application."
          }
        },
        "uniquenessConstraints": {
          "application_licenses_pkey": [
            "app_mgmt_application_id",
            "app_mgmt_license_id"
          ]
        },
        "foreignRelations": {
          "application_licenses_app_mgmt_application_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "applications",
            "columnMapping": {
              "app_mgmt_application_id": "app_mgmt_application_id"
            }
          },
          "application_licenses_app_mgmt_license_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "licenses",
            "columnMapping": {
              "app_mgmt_license_id": "app_mgmt_license_id"
            }
          }
        },
        "description": "Table to store associations between applications and the licenses they use."
      },
      "app_mgmt_application_relationships": {
        "schemaName": "app_mgmt",
        "tableName": "application_relationships",
        "columns": {
          "app_mgmt_application_relationship_id": {
            "name": "app_mgmt_application_relationship_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Primary key for application relationships"
          },
          "application_id_1": {
            "name": "application_id_1",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Identifier for the first application involved in the relationship."
          },
          "application_id_2": {
            "name": "application_id_2",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Identifier for the second application involved in the relationship."
          },
          "criticality": {
            "name": "criticality",
            "type": {
              "scalarType": "app_mgmt_criticality_levels"
            },
            "nullable": "nullable",
            "description": "Criticality score of the relationship, indicating the impact of its failure."
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional explanation about nature of relationship."
          },
          "relationship_type": {
            "name": "relationship_type",
            "type": {
              "scalarType": "app_mgmt_relationship_types"
            },
            "nullable": "nullable",
            "description": "Type of relationship between the applications (e.g., depends on, uses data from)."
          }
        },
        "uniquenessConstraints": {
          "application_relationships_pkey": [
            "app_mgmt_application_relationship_id"
          ]
        },
        "foreignRelations": {
          "application_relationships_application_id_1_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "applications",
            "columnMapping": {
              "application_id_1": "app_mgmt_application_id"
            }
          },
          "application_relationships_application_id_2_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "applications",
            "columnMapping": {
              "application_id_2": "app_mgmt_application_id"
            }
          }
        },
        "description": "Table to store relationships between applications and their criticality levels. Applications may have many relationships, even of the same type. They are only differentiated through the description."
      },
      "app_mgmt_applications": {
        "schemaName": "app_mgmt",
        "tableName": "applications",
        "columns": {
          "app_mgmt_application_id": {
            "name": "app_mgmt_application_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for an application."
          },
          "application_name": {
            "name": "application_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the application."
          },
          "application_owner_id": {
            "name": "application_owner_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Identifier for the individual responsible for communication with stakeholders, funding, budget, and strategy for the application."
          },
          "application_type": {
            "name": "application_type",
            "type": {
              "scalarType": "app_mgmt_application_types"
            },
            "nullable": "nullable",
            "description": "Type of application (e.g., web, mobile, desktop)."
          },
          "architecture_id": {
            "name": "architecture_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Identifier for the approved architecture the application adheres to."
          },
          "created_by_team_id": {
            "name": "created_by_team_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Identifier for the team that initially created the application."
          },
          "created_by_user_id": {
            "name": "created_by_user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Identifier of the employee who initially created the application record."
          },
          "date_deployed": {
            "name": "date_deployed",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "Date the application was deployed to its environment."
          },
          "date_retired": {
            "name": "date_retired",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "Date the application was retired or decommissioned."
          },
          "deployment_environment": {
            "name": "deployment_environment",
            "type": {
              "scalarType": "app_mgmt_deployment_environments"
            },
            "nullable": "nullable",
            "description": "Environment where the application is deployed (e.g., on-premises, cloud)."
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "General description of the application's purpose."
          },
          "documentation_url": {
            "name": "documentation_url",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Link to the application's documentation."
          },
          "enterprise_department_id": {
            "name": "enterprise_department_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Has financial responsibility for resource. This is the department that pays for maintenance, upgrades and operation of the application."
          },
          "lifecycle_status": {
            "name": "lifecycle_status",
            "type": {
              "scalarType": "app_mgmt_application_lifecycle_status"
            },
            "nullable": "nullable",
            "description": "Current stage in the application's lifecycle (e.g., development, production)."
          },
          "maintained_by_team_id": {
            "name": "maintained_by_team_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Identifier for the team responsible for maintaining the application, including updates and fixes."
          },
          "modified_by_user_id": {
            "name": "modified_by_user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Identifier of the employee who last modified the application record."
          },
          "operated_by_team_id": {
            "name": "operated_by_team_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Identifier for the team responsible for the day-to-day operation of the application."
          },
          "rpo": {
            "name": "rpo",
            "type": {
              "scalarType": "interval"
            },
            "nullable": "nullable",
            "description": "Recovery Point Objective (RPO): The maximum acceptable data loss for the application."
          },
          "rto": {
            "name": "rto",
            "type": {
              "scalarType": "interval"
            },
            "nullable": "nullable",
            "description": "Recovery Time Objective (RTO): The maximum acceptable downtime for the application."
          },
          "sdlc_process_id": {
            "name": "sdlc_process_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Identifier for the SDLC process used to develop or manage the application."
          },
          "source_code_repository": {
            "name": "source_code_repository",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Link to the repository where the application's source code is stored."
          },
          "vendor": {
            "name": "vendor",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the vendor if the application is purchased."
          },
          "version": {
            "name": "version",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Current version of the application."
          }
        },
        "uniquenessConstraints": {
          "applications_pkey": [
            "app_mgmt_application_id"
          ]
        },
        "foreignRelations": {
          "applications_application_owner_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "application_owner_id": "enterprise_associate_id"
            }
          },
          "applications_architecture_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "architectures",
            "columnMapping": {
              "architecture_id": "app_mgmt_architecture_id"
            }
          },
          "applications_created_by_team_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "teams",
            "columnMapping": {
              "created_by_team_id": "app_mgmt_team_id"
            }
          },
          "applications_created_by_user_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "created_by_user_id": "enterprise_associate_id"
            }
          },
          "applications_enterprise_department_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "departments",
            "columnMapping": {
              "enterprise_department_id": "enterprise_department_id"
            }
          },
          "applications_maintained_by_team_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "teams",
            "columnMapping": {
              "maintained_by_team_id": "app_mgmt_team_id"
            }
          },
          "applications_modified_by_user_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "modified_by_user_id": "enterprise_associate_id"
            }
          },
          "applications_operated_by_team_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "teams",
            "columnMapping": {
              "operated_by_team_id": "app_mgmt_team_id"
            }
          },
          "applications_sdlc_process_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "sdlc_processes",
            "columnMapping": {
              "sdlc_process_id": "app_mgmt_sdlc_process_id"
            }
          }
        },
        "description": "Table to store comprehensive information about software applications within the organization."
      },
      "app_mgmt_architectures": {
        "schemaName": "app_mgmt",
        "tableName": "architectures",
        "columns": {
          "app_mgmt_architecture_id": {
            "name": "app_mgmt_architecture_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for an approved architectural design."
          },
          "approval_date": {
            "name": "approval_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "Date when the architectural design was officially approved."
          },
          "approved_by_id": {
            "name": "approved_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Identifier of the employee who approved the design."
          },
          "architecture_name": {
            "name": "architecture_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name given to the architectural design."
          },
          "created_by_user_id": {
            "name": "created_by_user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Identifier of the employee who created the architectural design."
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Detailed explanation of the architectural design."
          },
          "documentation_url": {
            "name": "documentation_url",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Link to the full documentation for the architectural design."
          },
          "modified_by_user_id": {
            "name": "modified_by_user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Identifier of the employee who last modified the architectural design."
          },
          "sdlc_process_id": {
            "name": "sdlc_process_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Identifier for the software development lifecycle process this architecture aligns with."
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Current state of the architecture (e.g., approved, deprecated, proposed)."
          }
        },
        "uniquenessConstraints": {
          "architectures_pkey": [
            "app_mgmt_architecture_id"
          ]
        },
        "foreignRelations": {
          "architectures_approved_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "approved_by_id": "enterprise_associate_id"
            }
          },
          "architectures_created_by_user_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "created_by_user_id": "enterprise_associate_id"
            }
          },
          "architectures_modified_by_user_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "modified_by_user_id": "enterprise_associate_id"
            }
          },
          "architectures_sdlc_process_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "sdlc_processes",
            "columnMapping": {
              "sdlc_process_id": "app_mgmt_sdlc_process_id"
            }
          }
        },
        "description": "Table to store approved architectural designs and their key details."
      },
      "app_mgmt_component_dependencies": {
        "schemaName": "app_mgmt",
        "tableName": "component_dependencies",
        "columns": {
          "child_component_id": {
            "name": "child_component_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier for the component being depended upon."
          },
          "dependency_type": {
            "name": "dependency_type",
            "type": {
              "scalarType": "app_mgmt_dependency_types"
            },
            "nullable": "nullable",
            "description": "Type of dependency (e.g., runtime, build, test)."
          },
          "parent_component_id": {
            "name": "parent_component_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier for the component that depends on another component."
          },
          "quantity": {
            "name": "quantity",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of times the child component is used by the parent."
          }
        },
        "uniquenessConstraints": {
          "component_dependencies_pkey": [
            "child_component_id",
            "parent_component_id"
          ]
        },
        "foreignRelations": {
          "component_dependencies_child_component_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "components",
            "columnMapping": {
              "child_component_id": "app_mgmt_component_id"
            }
          },
          "component_dependencies_parent_component_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "components",
            "columnMapping": {
              "parent_component_id": "app_mgmt_component_id"
            }
          }
        },
        "description": "Table to store component dependencies (BOM relationships)."
      },
      "app_mgmt_components": {
        "schemaName": "app_mgmt",
        "tableName": "components",
        "columns": {
          "app_mgmt_component_id": {
            "name": "app_mgmt_component_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for a software component (e.g., library, module)."
          },
          "app_mgmt_license_id": {
            "name": "app_mgmt_license_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Identifier for the license associated with the component."
          },
          "component_name": {
            "name": "component_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the software component."
          },
          "component_type": {
            "name": "component_type",
            "type": {
              "scalarType": "app_mgmt_component_types"
            },
            "nullable": "nullable",
            "description": "Type of component (e.g., library, framework, API, module). Also used for language-specific categorization (e.g., java-library, npm-package)."
          },
          "component_version": {
            "name": "component_version",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Version identifier for the software component."
          },
          "created_by_user_id": {
            "name": "created_by_user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Identifier of the employee who initially created the component record."
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of the component's functionality."
          },
          "modified_by_user_id": {
            "name": "modified_by_user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Identifier of the employee who last modified the component record."
          },
          "namespace_or_module": {
            "name": "namespace_or_module",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Namespace or module name within the component (if applicable)."
          },
          "package_info": {
            "name": "package_info",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Language-specific package information (e.g., Maven coordinates, npm package name, NuGet package ID)."
          },
          "repository_url": {
            "name": "repository_url",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Link to the component's repository (e.g., Maven repository, npm registry, NuGet feed)."
          },
          "vendor": {
            "name": "vendor",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Vendor or provider of the software component."
          }
        },
        "uniquenessConstraints": {
          "components_pkey": [
            "app_mgmt_component_id"
          ]
        },
        "foreignRelations": {
          "components_app_mgmt_license_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "licenses",
            "columnMapping": {
              "app_mgmt_license_id": "app_mgmt_license_id"
            }
          },
          "components_created_by_user_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "created_by_user_id": "enterprise_associate_id"
            }
          },
          "components_modified_by_user_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "modified_by_user_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Table to store detailed information about software components (BOM)."
      },
      "app_mgmt_licenses": {
        "schemaName": "app_mgmt",
        "tableName": "licenses",
        "columns": {
          "app_mgmt_license_id": {
            "name": "app_mgmt_license_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for a software license."
          },
          "license_name": {
            "name": "license_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the software license."
          },
          "license_text": {
            "name": "license_text",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Full text or a summary of the software license terms."
          },
          "license_type": {
            "name": "license_type",
            "type": {
              "scalarType": "app_mgmt_license_types"
            },
            "nullable": "nullable",
            "description": "Type of software license (e.g., MIT, GPL)."
          }
        },
        "uniquenessConstraints": {
          "licenses_pkey": [
            "app_mgmt_license_id"
          ]
        },
        "foreignRelations": {},
        "description": "Table to store information about software licenses."
      },
      "app_mgmt_sdlc_processes": {
        "schemaName": "app_mgmt",
        "tableName": "sdlc_processes",
        "columns": {
          "app_mgmt_sdlc_process_id": {
            "name": "app_mgmt_sdlc_process_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for a defined software development lifecycle process."
          },
          "app_mgmt_team_id": {
            "name": "app_mgmt_team_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Identifier for the team that manages this SDLC process."
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of the steps and activities within the SDLC process."
          },
          "documentation_url": {
            "name": "documentation_url",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Link to the full documentation for the SDLC process."
          },
          "process_name": {
            "name": "process_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the software development lifecycle process."
          },
          "process_owner": {
            "name": "process_owner",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "The individual responsible for the SDLC process."
          },
          "version": {
            "name": "version",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Version number or identifier for the SDLC process."
          }
        },
        "uniquenessConstraints": {
          "sdlc_processes_pkey": [
            "app_mgmt_sdlc_process_id"
          ]
        },
        "foreignRelations": {
          "sdlc_processes_app_mgmt_team_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "teams",
            "columnMapping": {
              "app_mgmt_team_id": "app_mgmt_team_id"
            }
          },
          "sdlc_processes_process_owner_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "process_owner": "enterprise_associate_id"
            }
          }
        },
        "description": "Table to store software development lifecycle processes and their attributes."
      },
      "app_mgmt_team_members": {
        "schemaName": "app_mgmt",
        "tableName": "team_members",
        "columns": {
          "app_mgmt_team_id": {
            "name": "app_mgmt_team_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the team."
          },
          "enterprise_associate_id": {
            "name": "enterprise_associate_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the team member from the enterprise associates table."
          },
          "function": {
            "name": "function",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Function or role of the team member within the team."
          }
        },
        "uniquenessConstraints": {
          "team_members_pkey": [
            "app_mgmt_team_id",
            "enterprise_associate_id"
          ]
        },
        "foreignRelations": {
          "team_members_app_mgmt_team_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "teams",
            "columnMapping": {
              "app_mgmt_team_id": "app_mgmt_team_id"
            }
          },
          "team_members_enterprise_associate_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "enterprise_associate_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Table to store the associations between teams and their members, including member functions."
      },
      "app_mgmt_teams": {
        "schemaName": "app_mgmt",
        "tableName": "teams",
        "columns": {
          "app_mgmt_team_id": {
            "name": "app_mgmt_team_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for a development or management team."
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of the team's responsibilities."
          },
          "team_lead_id": {
            "name": "team_lead_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Identifier of the team lead from the enterprise associates table."
          },
          "team_name": {
            "name": "team_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the team."
          }
        },
        "uniquenessConstraints": {
          "teams_pkey": [
            "app_mgmt_team_id"
          ]
        },
        "foreignRelations": {
          "teams_team_lead_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "team_lead_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Table to store information about development and management teams, including team lead association."
      },
      "consumer_banking_account_access_consents": {
        "schemaName": "consumer_banking",
        "tableName": "account_access_consents",
        "columns": {
          "consumer_banking_account_id": {
            "name": "consumer_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the account that the consent is related to."
          },
          "consumer_banking_consent_id": {
            "name": "consumer_banking_consent_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each consent record"
          },
          "creation_date_time": {
            "name": "creation_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the consent was initially created"
          },
          "expiration_date_time": {
            "name": "expiration_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the consent will expire (if applicable)"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_banking_consent_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the consent (e.g., Active, Revoked)"
          },
          "status_update_date_time": {
            "name": "status_update_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the status was last changed"
          }
        },
        "uniquenessConstraints": {
          "account_access_consents_pkey": [
            "consumer_banking_consent_id"
          ]
        },
        "foreignRelations": {
          "account_access_consents_consumer_banking_account_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "consumer_banking_account_id": "consumer_banking_account_id"
            }
          }
        },
        "description": "Stores consent records for account access, tracking when and how third parties are permitted to access consumer banking account information"
      },
      "consumer_banking_account_access_consents_permissions": {
        "schemaName": "consumer_banking",
        "tableName": "account_access_consents_permissions",
        "columns": {
          "consumer_banking_consent_id": {
            "name": "consumer_banking_consent_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References a consent record"
          },
          "enterprise_permission_id": {
            "name": "enterprise_permission_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References a permission record"
          }
        },
        "uniquenessConstraints": {},
        "foreignRelations": {
          "account_access_consents_permis_consumer_banking_consent_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "account_access_consents",
            "columnMapping": {
              "consumer_banking_consent_id": "consumer_banking_consent_id"
            }
          },
          "account_access_consents_permissio_enterprise_permission_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "permissions",
            "columnMapping": {
              "enterprise_permission_id": "enterprise_permission_id"
            }
          }
        },
        "description": "Junction table linking consents to specific permissions granted, implements a many-to-many relationship"
      },
      "consumer_banking_account_statement_preferences": {
        "schemaName": "consumer_banking",
        "tableName": "account_statement_preferences",
        "columns": {
          "communication_method": {
            "name": "communication_method",
            "type": {
              "scalarType": "consumer_banking_communication_method"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "consumer_banking_account_id": {
            "name": "consumer_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "consumer_banking_statement_id": {
            "name": "consumer_banking_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Fake relationship, to influence data generator and make statements be created before this record."
          },
          "enterprise_address_id": {
            "name": "enterprise_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": null
          },
          "format": {
            "name": "format",
            "type": {
              "scalarType": "consumer_banking_statement_format"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "frequency": {
            "name": "frequency",
            "type": {
              "scalarType": "enterprise_frequency"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "last_statement_date": {
            "name": "last_statement_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": null
          },
          "next_statement_date": {
            "name": "next_statement_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {},
        "foreignRelations": {
          "account_statement_preferences_consumer_banking_account_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "consumer_banking_account_id": "consumer_banking_account_id"
            }
          },
          "account_statement_preferences_consumer_banking_statement_i_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "statements",
            "columnMapping": {
              "consumer_banking_statement_id": "consumer_banking_statement_id"
            }
          },
          "account_statement_preferences_enterprise_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "enterprise_address_id": "enterprise_address_id"
            }
          }
        },
        "description": "Stores customer preferences for account statements"
      },
      "consumer_banking_accounts": {
        "schemaName": "consumer_banking",
        "tableName": "accounts",
        "columns": {
          "account_category": {
            "name": "account_category",
            "type": {
              "scalarType": "enterprise_account_category"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "account_number": {
            "name": "account_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Customer facing account number"
          },
          "consumer_banking_account_id": {
            "name": "consumer_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique ID for the consumer banking account"
          },
          "consumer_banking_product_id": {
            "name": "consumer_banking_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References the enterprise account this consumer account belongs to. Required for all consumer accounts"
          },
          "currency_code": {
            "name": "currency_code",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nullable",
            "description": null
          },
          "displayName": {
            "name": "displayName",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "A friendly account description provided by the institution."
          },
          "enterprise_account_id": {
            "name": "enterprise_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Link to the enterprise-level account bucket"
          },
          "maturity_date": {
            "name": "maturity_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "Used for products such as certificates of deposits that have a maturity date"
          },
          "nickname": {
            "name": "nickname",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "A short name added by customer."
          },
          "opened_date": {
            "name": "opened_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date the account was opened"
          },
          "servicer_identifier_id": {
            "name": "servicer_identifier_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Required reference to this institutions BIC scheme"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_banking_account_status"
            },
            "nullable": "nonNullable",
            "description": "Operational status of the account"
          },
          "status_update_date_time": {
            "name": "status_update_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Last time the status was updated"
          },
          "switch_status": {
            "name": "switch_status",
            "type": {
              "scalarType": "enterprise_switch_status"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "Specific to the UK account account switching service."
          }
        },
        "uniquenessConstraints": {
          "accounts_pkey": [
            "consumer_banking_account_id"
          ]
        },
        "foreignRelations": {
          "accounts_consumer_banking_product_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "products",
            "columnMapping": {
              "consumer_banking_product_id": "consumer_banking_product_id"
            }
          },
          "accounts_currency_code_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "currency_code": "code"
            }
          },
          "accounts_enterprise_account_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "accounts",
            "columnMapping": {
              "enterprise_account_id": "enterprise_account_id"
            }
          },
          "accounts_servicer_identifier_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "identifiers",
            "columnMapping": {
              "servicer_identifier_id": "enterprise_identifier_id"
            }
          }
        },
        "description": "Deposit account linked to enterprise account; always serviced by a this institution"
      },
      "consumer_banking_balances": {
        "schemaName": "consumer_banking",
        "tableName": "balances",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Monetary amount with precision to 5 decimal places"
          },
          "consumer_banking_account_id": {
            "name": "consumer_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the account this balance belongs to"
          },
          "consumer_banking_balance_id": {
            "name": "consumer_banking_balance_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each balance record"
          },
          "credit_debit_indicator": {
            "name": "credit_debit_indicator",
            "type": {
              "scalarType": "enterprise_credit_debit_indicator"
            },
            "nullable": "nonNullable",
            "description": "Indicates if balance is credit or debit"
          },
          "currency": {
            "name": "currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nonNullable",
            "description": "Currency code (e.g., USD, EUR)"
          },
          "date_time": {
            "name": "date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When this balance was recorded"
          },
          "sub_type": {
            "name": "sub_type",
            "type": {
              "scalarType": "consumer_banking_balance_sub_type"
            },
            "nullable": "nullable",
            "description": "Optional further classification of balance type"
          },
          "type": {
            "name": "type",
            "type": {
              "scalarType": "consumer_banking_balance_type"
            },
            "nullable": "nonNullable",
            "description": "Primary balance type (e.g., available, closing, etc.)"
          }
        },
        "uniquenessConstraints": {
          "balances_pkey": [
            "consumer_banking_balance_id"
          ]
        },
        "foreignRelations": {
          "balances_consumer_banking_account_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "consumer_banking_account_id": "consumer_banking_account_id"
            }
          },
          "balances_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "currency": "code"
            }
          }
        },
        "description": "Tracks account balance information with history, stores different types of balances"
      },
      "consumer_banking_beneficiaries": {
        "schemaName": "consumer_banking",
        "tableName": "beneficiaries",
        "columns": {
          "beneficiary_type": {
            "name": "beneficiary_type",
            "type": {
              "scalarType": "consumer_banking_beneficiary_type"
            },
            "nullable": "nonNullable",
            "description": "Type of beneficiary (individual, organization, etc.)"
          },
          "consumer_banking_account_id": {
            "name": "consumer_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the account this balance belongs to"
          },
          "consumer_banking_beneficiary_id": {
            "name": "consumer_banking_beneficiary_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each beneficiary"
          },
          "reference": {
            "name": "reference",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Optional reference identifier for the beneficiary"
          },
          "supplementary_data": {
            "name": "supplementary_data",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional information in free-text format"
          }
        },
        "uniquenessConstraints": {
          "beneficiaries_pkey": [
            "consumer_banking_beneficiary_id"
          ]
        },
        "foreignRelations": {
          "beneficiaries_consumer_banking_account_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "consumer_banking_account_id": "consumer_banking_account_id"
            }
          }
        },
        "description": "Stores beneficiary details for account payments, records entities that can receive payments"
      },
      "consumer_banking_beneficiary_creditor_accounts": {
        "schemaName": "consumer_banking",
        "tableName": "beneficiary_creditor_accounts",
        "columns": {
          "consumer_banking_beneficiary_creditor_account_id": {
            "name": "consumer_banking_beneficiary_creditor_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each creditor account record"
          },
          "consumer_banking_beneficiary_id": {
            "name": "consumer_banking_beneficiary_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the beneficiary this account belongs to"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "The actual account identifier value"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Optional display name for this account"
          },
          "scheme_name": {
            "name": "scheme_name",
            "type": {
              "scalarType": "enterprise_identifier_scheme"
            },
            "nullable": "nonNullable",
            "description": "Account identifier scheme (e.g., IBAN, BBAN)"
          },
          "secondary_identification": {
            "name": "secondary_identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Additional account identification information"
          }
        },
        "uniquenessConstraints": {
          "beneficiary_creditor_accounts_pkey": [
            "consumer_banking_beneficiary_creditor_account_id"
          ]
        },
        "foreignRelations": {
          "beneficiary_creditor_accounts_consumer_banking_beneficiary_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "beneficiaries",
            "columnMapping": {
              "consumer_banking_beneficiary_id": "consumer_banking_beneficiary_id"
            }
          }
        },
        "description": "Stores account details of beneficiaries for payment routing"
      },
      "consumer_banking_beneficiary_creditor_agents": {
        "schemaName": "consumer_banking",
        "tableName": "beneficiary_creditor_agents",
        "columns": {
          "consumer_banking_beneficiary_creditor_agent_id": {
            "name": "consumer_banking_beneficiary_creditor_agent_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each agent record"
          },
          "consumer_banking_beneficiary_id": {
            "name": "consumer_banking_beneficiary_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the beneficiary this agent is associated with"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "The actual identifier of the institution"
          },
          "lei": {
            "name": "lei",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Legal Entity Identifier of the institution"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Display name of the financial institution"
          },
          "scheme_name": {
            "name": "scheme_name",
            "type": {
              "scalarType": "enterprise_identifier_scheme"
            },
            "nullable": "nonNullable",
            "description": "Identifier scheme (e.g., BIC, SORT)"
          }
        },
        "uniquenessConstraints": {
          "beneficiary_creditor_agents_pkey": [
            "consumer_banking_beneficiary_creditor_agent_id"
          ]
        },
        "foreignRelations": {
          "beneficiary_creditor_agents_consumer_banking_beneficiary_i_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "beneficiaries",
            "columnMapping": {
              "consumer_banking_beneficiary_id": "consumer_banking_beneficiary_id"
            }
          }
        },
        "description": "Stores financial institution details for beneficiaries, records information about banks/agents"
      },
      "consumer_banking_customer_interactions": {
        "schemaName": "consumer_banking",
        "tableName": "customer_interactions",
        "columns": {
          "account_id": {
            "name": "account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "The ID of the specific account related to the interaction. This can be NULL if the interaction isn't tied to a specific account (e.g., a general inquiry)."
          },
          "channel": {
            "name": "channel",
            "type": {
              "scalarType": "consumer_banking_interaction_channel"
            },
            "nullable": "nullable",
            "description": "The channel through which the interaction occurred (e.g., \"phone,\" \"email,\" \"web,\" \"branch,\" \"mobile app\")."
          },
          "consumer_banking_interaction_id": {
            "name": "consumer_banking_interaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "A unique identifier for each interaction."
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "When the interaction record was created."
          },
          "customer_id": {
            "name": "customer_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "The ID of the customer involved in the interaction."
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "A detailed description of the interaction."
          },
          "enterprise_associate_id": {
            "name": "enterprise_associate_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "The ID of the bank employee who handled the interaction. This can be NULL if it was an automated interaction."
          },
          "interaction_date_time": {
            "name": "interaction_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "The date and time of the interaction."
          },
          "interaction_type": {
            "name": "interaction_type",
            "type": {
              "scalarType": "consumer_banking_interaction_type"
            },
            "nullable": "nullable",
            "description": "The type of interaction (e.g., \"phone call,\" \"email,\" \"chat,\" \"in-person,\" \"online form,\" \"ATM interaction\")."
          },
          "priority": {
            "name": "priority",
            "type": {
              "scalarType": "consumer_banking_interaction_priority"
            },
            "nullable": "nullable",
            "description": "The priority of the interaction (e.g., \"high,\" \"medium,\" \"low\")."
          },
          "related_transaction_id": {
            "name": "related_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "If the interaction relates to a specific transaction, this can hold that transaction ID."
          },
          "resolution": {
            "name": "resolution",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of how the interaction was resolved."
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_banking_interaction_status"
            },
            "nullable": "nullable",
            "description": "The status of the interaction (e.g., \"open,\" \"resolved,\" \"pending\")."
          },
          "subject": {
            "name": "subject",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "A brief subject or title of the interaction."
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "When the interaction record was last updated."
          }
        },
        "uniquenessConstraints": {
          "customer_interactions_pkey": [
            "consumer_banking_interaction_id"
          ]
        },
        "foreignRelations": {
          "customer_interactions_account_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "account_id": "consumer_banking_account_id"
            }
          },
          "customer_interactions_customer_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "parties",
            "columnMapping": {
              "customer_id": "enterprise_party_id"
            }
          },
          "customer_interactions_enterprise_associate_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "enterprise_associate_id": "enterprise_associate_id"
            }
          },
          "customer_interactions_related_transaction_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "related_transaction_id": "consumer_banking_transaction_id"
            }
          }
        },
        "description": null
      },
      "consumer_banking_direct_debits": {
        "schemaName": "consumer_banking",
        "tableName": "direct_debits",
        "columns": {
          "consumer_banking_account_id": {
            "name": "consumer_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the account this direct debit belongs to"
          },
          "consumer_banking_direct_debit_id": {
            "name": "consumer_banking_direct_debit_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each direct debit mandate"
          },
          "direct_debit_status_code": {
            "name": "direct_debit_status_code",
            "type": {
              "scalarType": "consumer_banking_direct_debit_status_code"
            },
            "nullable": "nonNullable",
            "description": "Status code of the direct debit (e.g., active, canceled)"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the merchant/organization collecting the direct debit"
          },
          "previous_payment_amount": {
            "name": "previous_payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of the last payment"
          },
          "previous_payment_currency": {
            "name": "previous_payment_currency",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Currency of the last payment"
          },
          "previous_payment_date_time": {
            "name": "previous_payment_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the last payment was made"
          }
        },
        "uniquenessConstraints": {
          "direct_debits_pkey": [
            "consumer_banking_direct_debit_id"
          ]
        },
        "foreignRelations": {
          "direct_debits_consumer_banking_account_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "consumer_banking_account_id": "consumer_banking_account_id"
            }
          }
        },
        "description": "Stores information about direct debit arrangements set up on accounts"
      },
      "consumer_banking_mandate_related_information": {
        "schemaName": "consumer_banking",
        "tableName": "mandate_related_information",
        "columns": {
          "category": {
            "name": "category",
            "type": {
              "scalarType": "consumer_banking_direct_debit_category"
            },
            "nullable": "nullable",
            "description": "Purpose code for categorizing the payment type"
          },
          "classification": {
            "name": "classification",
            "type": {
              "scalarType": "consumer_banking_direct_debit_classification"
            },
            "nullable": "nullable",
            "description": "Classification of the mandate (e.g., personal, business)"
          },
          "consumer_banking_direct_debit_id": {
            "name": "consumer_banking_direct_debit_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the direct debit this mandate belongs to"
          },
          "consumer_banking_mandate_related_information_id": {
            "name": "consumer_banking_mandate_related_information_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for mandate information"
          },
          "final_payment_date_time": {
            "name": "final_payment_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the final payment is scheduled (if applicable)"
          },
          "first_payment_date_time": {
            "name": "first_payment_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the first payment is scheduled"
          },
          "frequency_count_per_period": {
            "name": "frequency_count_per_period",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of payments in each period"
          },
          "frequency_point_in_time": {
            "name": "frequency_point_in_time",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Specific day or time point for payments"
          },
          "frequency_type": {
            "name": "frequency_type",
            "type": {
              "scalarType": "enterprise_frequency"
            },
            "nullable": "nonNullable",
            "description": "How often payments occur (e.g., monthly, weekly)"
          },
          "mandate_id": {
            "name": "mandate_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Unique reference for the direct debit mandate"
          },
          "reason": {
            "name": "reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reason or purpose for the mandate"
          },
          "recurring_payment_date_time": {
            "name": "recurring_payment_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When recurring payments are scheduled"
          }
        },
        "uniquenessConstraints": {
          "mandate_related_information_pkey": [
            "consumer_banking_mandate_related_information_id"
          ]
        },
        "foreignRelations": {
          "mandate_related_information_consumer_banking_direct_debit__fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "direct_debits",
            "columnMapping": {
              "consumer_banking_direct_debit_id": "consumer_banking_direct_debit_id"
            }
          }
        },
        "description": "Stores detailed information about direct debit mandates including payment schedules"
      },
      "consumer_banking_offers": {
        "schemaName": "consumer_banking",
        "tableName": "offers",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Monetary amount of the offer"
          },
          "amount_currency": {
            "name": "amount_currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nullable",
            "description": "Currency of the offer amount"
          },
          "consumer_banking_account_id": {
            "name": "consumer_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the account this offer belongs to"
          },
          "consumer_banking_offer_id": {
            "name": "consumer_banking_offer_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each offer"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Detailed description of the offer"
          },
          "end_date_time": {
            "name": "end_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the offer expires"
          },
          "fee": {
            "name": "fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Any fee associated with accepting the offer"
          },
          "fee_currency": {
            "name": "fee_currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nullable",
            "description": "Currency of the fee"
          },
          "offer_type": {
            "name": "offer_type",
            "type": {
              "scalarType": "consumer_banking_offer_type"
            },
            "nullable": "nonNullable",
            "description": "Type of offer (e.g., loan, investment, balance transfer)"
          },
          "rate": {
            "name": "rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Interest rate associated with the offer"
          },
          "start_date_time": {
            "name": "start_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the offer becomes available"
          },
          "term": {
            "name": "term",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Terms and conditions of the offer"
          },
          "url": {
            "name": "url",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Web link for more information about the offer"
          },
          "value": {
            "name": "value",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Numerical value related to the offer (e.g., reward points)"
          }
        },
        "uniquenessConstraints": {
          "offers_pkey": [
            "consumer_banking_offer_id"
          ]
        },
        "foreignRelations": {
          "offers_amount_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "amount_currency": "code"
            }
          },
          "offers_consumer_banking_account_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "consumer_banking_account_id": "consumer_banking_account_id"
            }
          },
          "offers_fee_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "fee_currency": "code"
            }
          }
        },
        "description": "Stores promotional offers made to account holders"
      },
      "consumer_banking_other_product_types": {
        "schemaName": "consumer_banking",
        "tableName": "other_product_types",
        "columns": {
          "consumer_banking_other_product_type_id": {
            "name": "consumer_banking_other_product_type_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each custom product type"
          },
          "consumer_banking_product_id": {
            "name": "consumer_banking_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the related product record"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Detailed description of the custom product type"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the custom product type"
          }
        },
        "uniquenessConstraints": {
          "other_product_types_pkey": [
            "consumer_banking_other_product_type_id"
          ]
        },
        "foreignRelations": {
          "other_product_types_consumer_banking_product_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "products",
            "columnMapping": {
              "consumer_banking_product_id": "consumer_banking_product_id"
            }
          }
        },
        "description": "Stores information about non-standard product types not covered in main categories"
      },
      "consumer_banking_products": {
        "schemaName": "consumer_banking",
        "tableName": "products",
        "columns": {
          "base_interest_rate": {
            "name": "base_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Standard interest rate for the product (if applicable)"
          },
          "consumer_banking_product_id": {
            "name": "consumer_banking_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each product"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Detailed product description"
          },
          "discontinue_date": {
            "name": "discontinue_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when product was discontinued if applicable"
          },
          "fee_schedule": {
            "name": "fee_schedule",
            "type": {
              "scalarType": "consumer_banking_account_fee_schedule"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Type of fee structure applicable to this product"
          },
          "interest_calculation_method": {
            "name": "interest_calculation_method",
            "type": {
              "scalarType": "consumer_banking_interest_calculation_method"
            },
            "nullable": "nullable",
            "description": "Method used to calculate interest on the account"
          },
          "is_interest_bearing": {
            "name": "is_interest_bearing",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Indicates if the product earns interest"
          },
          "launch_date": {
            "name": "launch_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when product was first offered"
          },
          "min_balance": {
            "name": "min_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Minimum balance to avoid fees"
          },
          "min_opening_deposit": {
            "name": "min_opening_deposit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Minimum amount required to open an account of this product type"
          },
          "monthly_fee": {
            "name": "monthly_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Standard monthly maintenance fee"
          },
          "product_code": {
            "name": "product_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Internal code for the product"
          },
          "product_name": {
            "name": "product_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Display name for the product"
          },
          "product_type": {
            "name": "product_type",
            "type": {
              "scalarType": "consumer_banking_product_type"
            },
            "nullable": "nonNullable",
            "description": "Type of product (checking, savings, money market, etc.)"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_banking_product_status"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current availability status of the product"
          },
          "term_length": {
            "name": "term_length",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Term in months (for term products)"
          },
          "transaction_fee": {
            "name": "transaction_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee charged per transaction beyond the limit"
          },
          "transaction_limit": {
            "name": "transaction_limit",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of free transactions per statement period"
          }
        },
        "uniquenessConstraints": {
          "products_pkey": [
            "consumer_banking_product_id"
          ]
        },
        "foreignRelations": {},
        "description": "Defines the financial products offered to customers"
      },
      "consumer_banking_proprietary_transaction_codes": {
        "schemaName": "consumer_banking",
        "tableName": "proprietary_transaction_codes",
        "columns": {
          "code": {
            "name": "code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Custom transaction code defined by the issuer"
          },
          "consumer_banking_proprietary_transaction_code_id": {
            "name": "consumer_banking_proprietary_transaction_code_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each proprietary code record"
          },
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the transaction this code belongs to"
          },
          "issuer": {
            "name": "issuer",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Organization that defined the proprietary code"
          }
        },
        "uniquenessConstraints": {
          "proprietary_transaction_codes_pkey": [
            "consumer_banking_proprietary_transaction_code_id"
          ]
        },
        "foreignRelations": {
          "proprietary_transaction_codes_consumer_banking_transaction_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "consumer_banking_transaction_id": "consumer_banking_transaction_id"
            }
          }
        },
        "description": "Stores non-standard proprietary codes for transaction categorization"
      },
      "consumer_banking_scheduled_payment_creditor_accounts": {
        "schemaName": "consumer_banking",
        "tableName": "scheduled_payment_creditor_accounts",
        "columns": {
          "consumer_banking_scheduled_payment_creditor_account_id": {
            "name": "consumer_banking_scheduled_payment_creditor_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each creditor account"
          },
          "consumer_banking_scheduled_payment_id": {
            "name": "consumer_banking_scheduled_payment_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the scheduled payment"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Account identifier for receiving the payment"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name associated with the receiving account"
          },
          "scheme_name": {
            "name": "scheme_name",
            "type": {
              "scalarType": "enterprise_identifier_scheme"
            },
            "nullable": "nonNullable",
            "description": "Account identifier scheme (e.g., IBAN)"
          },
          "secondary_identification": {
            "name": "secondary_identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Additional identification for the receiving account"
          }
        },
        "uniquenessConstraints": {
          "scheduled_payment_creditor_accounts_pkey": [
            "consumer_banking_scheduled_payment_creditor_account_id"
          ]
        },
        "foreignRelations": {
          "scheduled_payment_creditor_ac_consumer_banking_scheduled_p_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "scheduled_payments",
            "columnMapping": {
              "consumer_banking_scheduled_payment_id": "consumer_banking_scheduled_payment_id"
            }
          }
        },
        "description": "Stores information about accounts receiving scheduled payments"
      },
      "consumer_banking_scheduled_payment_creditor_agents": {
        "schemaName": "consumer_banking",
        "tableName": "scheduled_payment_creditor_agents",
        "columns": {
          "consumer_banking_scheduled_payment_creditor_agent_id": {
            "name": "consumer_banking_scheduled_payment_creditor_agent_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each agent record"
          },
          "consumer_banking_scheduled_payment_id": {
            "name": "consumer_banking_scheduled_payment_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the scheduled payment"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the receiving financial institution"
          },
          "lei": {
            "name": "lei",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Legal Entity Identifier of the receiving institution"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the receiving financial institution"
          },
          "scheme_name": {
            "name": "scheme_name",
            "type": {
              "scalarType": "enterprise_identifier_scheme"
            },
            "nullable": "nonNullable",
            "description": "Identifier scheme for the receiving institution (e.g., BIC)"
          }
        },
        "uniquenessConstraints": {
          "scheduled_payment_creditor_agents_pkey": [
            "consumer_banking_scheduled_payment_creditor_agent_id"
          ]
        },
        "foreignRelations": {
          "scheduled_payment_creditor_ag_consumer_banking_scheduled_p_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "scheduled_payments",
            "columnMapping": {
              "consumer_banking_scheduled_payment_id": "consumer_banking_scheduled_payment_id"
            }
          }
        },
        "description": "Stores information about financial institutions receiving scheduled payments"
      },
      "consumer_banking_scheduled_payments": {
        "schemaName": "consumer_banking",
        "tableName": "scheduled_payments",
        "columns": {
          "consumer_banking_account_id": {
            "name": "consumer_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the account this balance belongs to"
          },
          "consumer_banking_scheduled_payment_id": {
            "name": "consumer_banking_scheduled_payment_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each scheduled payment"
          },
          "debtor_reference": {
            "name": "debtor_reference",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reference identifier for the payer"
          },
          "end_date": {
            "name": "end_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "End date for recurring payments"
          },
          "execution_count": {
            "name": "execution_count",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of times recurring payment has executed"
          },
          "frequency": {
            "name": "frequency",
            "type": {
              "scalarType": "enterprise_frequency"
            },
            "nullable": "nullable",
            "description": "Frequency of recurring payments if applicable"
          },
          "instructed_amount": {
            "name": "instructed_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount to be paid"
          },
          "instructed_amount_currency": {
            "name": "instructed_amount_currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nonNullable",
            "description": "Currency of the payment amount"
          },
          "max_executions": {
            "name": "max_executions",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Maximum number of executions for recurring payment"
          },
          "payment_method": {
            "name": "payment_method",
            "type": {
              "scalarType": "consumer_banking_payment_method"
            },
            "nullable": "nonNullable",
            "description": "Method of payment execution"
          },
          "payment_status": {
            "name": "payment_status",
            "type": {
              "scalarType": "consumer_banking_scheduled_payment_status"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current status of the scheduled payment"
          },
          "reference": {
            "name": "reference",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reference identifier for the payment"
          },
          "scheduled_payment_date_time": {
            "name": "scheduled_payment_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the payment is scheduled to occur"
          },
          "scheduled_type": {
            "name": "scheduled_type",
            "type": {
              "scalarType": "consumer_banking_scheduled_payment_type"
            },
            "nullable": "nonNullable",
            "description": "Type of scheduled payment"
          }
        },
        "uniquenessConstraints": {
          "scheduled_payments_pkey": [
            "consumer_banking_scheduled_payment_id"
          ]
        },
        "foreignRelations": {
          "scheduled_payments_consumer_banking_account_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "consumer_banking_account_id": "consumer_banking_account_id"
            }
          },
          "scheduled_payments_instructed_amount_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "instructed_amount_currency": "code"
            }
          }
        },
        "description": "Stores information about one-time and recurring scheduled payments"
      },
      "consumer_banking_standing_order_creditor_accounts": {
        "schemaName": "consumer_banking",
        "tableName": "standing_order_creditor_accounts",
        "columns": {
          "consumer_banking_standing_order_creditor_account_id": {
            "name": "consumer_banking_standing_order_creditor_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each creditor account"
          },
          "consumer_banking_standing_order_id": {
            "name": "consumer_banking_standing_order_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the standing order"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Account identifier for receiving the payments"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name associated with the receiving account"
          },
          "scheme_name": {
            "name": "scheme_name",
            "type": {
              "scalarType": "enterprise_identifier_scheme"
            },
            "nullable": "nonNullable",
            "description": "Account identifier scheme (e.g., IBAN)"
          },
          "secondary_identification": {
            "name": "secondary_identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Additional identification for the receiving account"
          }
        },
        "uniquenessConstraints": {
          "standing_order_creditor_accounts_pkey": [
            "consumer_banking_standing_order_creditor_account_id"
          ]
        },
        "foreignRelations": {
          "standing_order_creditor_accou_consumer_banking_standing_or_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "standing_orders",
            "columnMapping": {
              "consumer_banking_standing_order_id": "consumer_banking_standing_order_id"
            }
          }
        },
        "description": "Stores information about accounts receiving standing order payments"
      },
      "consumer_banking_standing_order_creditor_agents": {
        "schemaName": "consumer_banking",
        "tableName": "standing_order_creditor_agents",
        "columns": {
          "consumer_banking_standing_order_creditor_agent_id": {
            "name": "consumer_banking_standing_order_creditor_agent_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each agent record"
          },
          "consumer_banking_standing_order_id": {
            "name": "consumer_banking_standing_order_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the standing order"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the receiving financial institution"
          },
          "lei": {
            "name": "lei",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Legal Entity Identifier of the receiving institution"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the receiving financial institution"
          },
          "scheme_name": {
            "name": "scheme_name",
            "type": {
              "scalarType": "enterprise_identifier_scheme"
            },
            "nullable": "nonNullable",
            "description": "Identifier scheme for the receiving institution"
          }
        },
        "uniquenessConstraints": {
          "standing_order_creditor_agents_pkey": [
            "consumer_banking_standing_order_creditor_agent_id"
          ]
        },
        "foreignRelations": {
          "standing_order_creditor_agent_consumer_banking_standing_or_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "standing_orders",
            "columnMapping": {
              "consumer_banking_standing_order_id": "consumer_banking_standing_order_id"
            }
          }
        },
        "description": "Stores information about financial institutions receiving standing order payments"
      },
      "consumer_banking_standing_orders": {
        "schemaName": "consumer_banking",
        "tableName": "standing_orders",
        "columns": {
          "category": {
            "name": "category",
            "type": {
              "scalarType": "consumer_banking_standing_order_category"
            },
            "nullable": "nullable",
            "description": "Category or purpose of the standing order"
          },
          "consumer_banking_account_id": {
            "name": "consumer_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the account this standing order belongs to"
          },
          "consumer_banking_standing_order_id": {
            "name": "consumer_banking_standing_order_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each standing order"
          },
          "created_by": {
            "name": "created_by",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Who or what created the standing order"
          },
          "created_date": {
            "name": "created_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "When the standing order was created"
          },
          "day_of_month": {
            "name": "day_of_month",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Day of month for payments (for monthly/quarterly frequencies)"
          },
          "day_of_week": {
            "name": "day_of_week",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Day of week for payments (for weekly frequencies)"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Description of the standing order purpose"
          },
          "end_date": {
            "name": "end_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when the standing order expires (if specified)"
          },
          "final_payment_amount": {
            "name": "final_payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of the final payment (if different)"
          },
          "final_payment_currency": {
            "name": "final_payment_currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nullable",
            "description": "Currency of the final payment"
          },
          "first_payment_amount": {
            "name": "first_payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of the first payment (if different)"
          },
          "first_payment_currency": {
            "name": "first_payment_currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nullable",
            "description": "Currency of the first payment"
          },
          "frequency": {
            "name": "frequency",
            "type": {
              "scalarType": "enterprise_frequency"
            },
            "nullable": "nonNullable",
            "description": "Frequency of standing order payments"
          },
          "last_payment_amount": {
            "name": "last_payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of the most recent payment"
          },
          "last_payment_currency": {
            "name": "last_payment_currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nullable",
            "description": "Currency of the most recent payment"
          },
          "last_payment_date_time": {
            "name": "last_payment_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the most recent payment was made"
          },
          "modified_date": {
            "name": "modified_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the standing order was last modified"
          },
          "next_payment_amount": {
            "name": "next_payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of the next scheduled payment"
          },
          "next_payment_currency": {
            "name": "next_payment_currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nullable",
            "description": "Currency of the next payment"
          },
          "next_payment_date_time": {
            "name": "next_payment_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the next payment is scheduled"
          },
          "payment_type": {
            "name": "payment_type",
            "type": {
              "scalarType": "consumer_banking_standing_order_type"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Type of payment (fixed, variable, etc.)"
          },
          "reference": {
            "name": "reference",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Payment reference shown to the recipient"
          },
          "standing_order_status_code": {
            "name": "standing_order_status_code",
            "type": {
              "scalarType": "consumer_banking_standing_order_status_code"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Status code of the standing order (e.g., active, canceled)"
          },
          "start_date": {
            "name": "start_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date when the first payment should be made"
          },
          "supplementary_data": {
            "name": "supplementary_data",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional information about the standing order in JSON format"
          }
        },
        "uniquenessConstraints": {
          "standing_orders_pkey": [
            "consumer_banking_standing_order_id"
          ]
        },
        "foreignRelations": {
          "standing_orders_consumer_banking_account_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "consumer_banking_account_id": "consumer_banking_account_id"
            }
          },
          "standing_orders_final_payment_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "final_payment_currency": "code"
            }
          },
          "standing_orders_first_payment_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "first_payment_currency": "code"
            }
          },
          "standing_orders_last_payment_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "last_payment_currency": "code"
            }
          },
          "standing_orders_next_payment_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "next_payment_currency": "code"
            }
          }
        },
        "description": "Stores information about recurring payment instructions (standing orders)"
      },
      "consumer_banking_statement_amounts": {
        "schemaName": "consumer_banking",
        "tableName": "statement_amounts",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Monetary value"
          },
          "consumer_banking_statement_amount_id": {
            "name": "consumer_banking_statement_amount_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each amount record"
          },
          "consumer_banking_statement_id": {
            "name": "consumer_banking_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the statement this amount belongs to"
          },
          "credit_debit_indicator": {
            "name": "credit_debit_indicator",
            "type": {
              "scalarType": "enterprise_credit_debit_indicator"
            },
            "nullable": "nonNullable",
            "description": "Indicates if amount is a credit or debit"
          },
          "currency": {
            "name": "currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nonNullable",
            "description": "Currency code for the amount"
          },
          "sub_type": {
            "name": "sub_type",
            "type": {
              "scalarType": "consumer_banking_amount_sub_type"
            },
            "nullable": "nullable",
            "description": "Further classification of the amount type"
          },
          "type": {
            "name": "type",
            "type": {
              "scalarType": "consumer_banking_amount_type"
            },
            "nullable": "nonNullable",
            "description": "Type of amount (e.g., opening balance, closing balance, payments)"
          }
        },
        "uniquenessConstraints": {
          "statement_amounts_pkey": [
            "consumer_banking_statement_amount_id"
          ]
        },
        "foreignRelations": {
          "statement_amounts_consumer_banking_statement_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "statements",
            "columnMapping": {
              "consumer_banking_statement_id": "consumer_banking_statement_id"
            }
          },
          "statement_amounts_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "currency": "code"
            }
          }
        },
        "description": "Stores various monetary amount totals associated with a statement"
      },
      "consumer_banking_statement_benefits": {
        "schemaName": "consumer_banking",
        "tableName": "statement_benefits",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Monetary value of the benefit"
          },
          "consumer_banking_statement_benefit_id": {
            "name": "consumer_banking_statement_benefit_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each benefit record"
          },
          "consumer_banking_statement_id": {
            "name": "consumer_banking_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the statement this benefit belongs to"
          },
          "currency": {
            "name": "currency",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Currency code for the benefit amount"
          },
          "type": {
            "name": "type",
            "type": {
              "scalarType": "consumer_banking_benefit_type"
            },
            "nullable": "nonNullable",
            "description": "Type of benefit (e.g., cashback, rewards, insurance)"
          }
        },
        "uniquenessConstraints": {
          "statement_benefits_pkey": [
            "consumer_banking_statement_benefit_id"
          ]
        },
        "foreignRelations": {
          "statement_benefits_consumer_banking_statement_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "statements",
            "columnMapping": {
              "consumer_banking_statement_id": "consumer_banking_statement_id"
            }
          }
        },
        "description": "Stores information about benefits received during a statement period"
      },
      "consumer_banking_statement_date_times": {
        "schemaName": "consumer_banking",
        "tableName": "statement_date_times",
        "columns": {
          "consumer_banking_statement_date_time_id": {
            "name": "consumer_banking_statement_date_time_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each date record"
          },
          "consumer_banking_statement_id": {
            "name": "consumer_banking_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the statement this date belongs to"
          },
          "date_time": {
            "name": "date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date and time value"
          },
          "type": {
            "name": "type",
            "type": {
              "scalarType": "consumer_banking_statement_date_type"
            },
            "nullable": "nonNullable",
            "description": "Type of date (e.g., payment due, minimum payment, cycle end)"
          }
        },
        "uniquenessConstraints": {
          "statement_date_times_pkey": [
            "consumer_banking_statement_date_time_id"
          ]
        },
        "foreignRelations": {
          "statement_date_times_consumer_banking_statement_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "statements",
            "columnMapping": {
              "consumer_banking_statement_id": "consumer_banking_statement_id"
            }
          }
        },
        "description": "Stores important dates associated with a statement"
      },
      "consumer_banking_statement_descriptions": {
        "schemaName": "consumer_banking",
        "tableName": "statement_descriptions",
        "columns": {
          "consumer_banking_statement_description_id": {
            "name": "consumer_banking_statement_description_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each description entry"
          },
          "consumer_banking_statement_id": {
            "name": "consumer_banking_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the statement this description belongs to"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Descriptive text about the statement"
          }
        },
        "uniquenessConstraints": {
          "statement_descriptions_pkey": [
            "consumer_banking_statement_description_id"
          ]
        },
        "foreignRelations": {
          "statement_descriptions_consumer_banking_statement_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "statements",
            "columnMapping": {
              "consumer_banking_statement_id": "consumer_banking_statement_id"
            }
          }
        },
        "description": "Stores additional descriptive information for statements"
      },
      "consumer_banking_statement_fees": {
        "schemaName": "consumer_banking",
        "tableName": "statement_fees",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Monetary amount of the fee"
          },
          "consumer_banking_statement_fee_id": {
            "name": "consumer_banking_statement_fee_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each fee record"
          },
          "consumer_banking_statement_id": {
            "name": "consumer_banking_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the statement this fee belongs to"
          },
          "credit_debit_indicator": {
            "name": "credit_debit_indicator",
            "type": {
              "scalarType": "enterprise_credit_debit_indicator"
            },
            "nullable": "nonNullable",
            "description": "Indicates if fee is a credit or debit"
          },
          "currency": {
            "name": "currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nonNullable",
            "description": "Currency code for the fee amount"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Description of the fee"
          },
          "frequency": {
            "name": "frequency",
            "type": {
              "scalarType": "consumer_banking_fee_frequency"
            },
            "nullable": "nullable",
            "description": "How often the fee is applied (e.g., monthly, per transaction)"
          },
          "rate": {
            "name": "rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Rate applied if fee is percentage-based"
          },
          "rate_type": {
            "name": "rate_type",
            "type": {
              "scalarType": "consumer_banking_rate_type"
            },
            "nullable": "nullable",
            "description": "Type of rate (e.g., fixed, variable)"
          },
          "type": {
            "name": "type",
            "type": {
              "scalarType": "consumer_banking_fee_type"
            },
            "nullable": "nonNullable",
            "description": "Type of fee (e.g., service, transaction, late payment)"
          }
        },
        "uniquenessConstraints": {
          "statement_fees_pkey": [
            "consumer_banking_statement_fee_id"
          ]
        },
        "foreignRelations": {
          "statement_fees_consumer_banking_statement_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "statements",
            "columnMapping": {
              "consumer_banking_statement_id": "consumer_banking_statement_id"
            }
          },
          "statement_fees_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "currency": "code"
            }
          }
        },
        "description": "Stores information about fees charged during a statement period"
      },
      "consumer_banking_statement_interests": {
        "schemaName": "consumer_banking",
        "tableName": "statement_interests",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Monetary amount of interest earned or charged"
          },
          "consumer_banking_statement_id": {
            "name": "consumer_banking_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the statement this interest belongs to"
          },
          "consumer_banking_statement_interest_id": {
            "name": "consumer_banking_statement_interest_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each interest record"
          },
          "credit_debit_indicator": {
            "name": "credit_debit_indicator",
            "type": {
              "scalarType": "enterprise_credit_debit_indicator"
            },
            "nullable": "nonNullable",
            "description": "Indicates if interest is earned (credit) or charged (debit)"
          },
          "currency": {
            "name": "currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nonNullable",
            "description": "Currency code for the interest amount"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Description of the interest"
          },
          "frequency": {
            "name": "frequency",
            "type": {
              "scalarType": "enterprise_frequency"
            },
            "nullable": "nullable",
            "description": "How often interest is calculated (e.g., daily, monthly)"
          },
          "rate": {
            "name": "rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Interest rate applied"
          },
          "rate_type": {
            "name": "rate_type",
            "type": {
              "scalarType": "consumer_banking_rate_type"
            },
            "nullable": "nullable",
            "description": "Type of rate (e.g., fixed, variable, promotional)"
          },
          "type": {
            "name": "type",
            "type": {
              "scalarType": "consumer_banking_interest_type"
            },
            "nullable": "nonNullable",
            "description": "Type of interest (e.g., deposit, loan, credit card)"
          }
        },
        "uniquenessConstraints": {
          "statement_interests_pkey": [
            "consumer_banking_statement_interest_id"
          ]
        },
        "foreignRelations": {
          "statement_interests_consumer_banking_statement_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "statements",
            "columnMapping": {
              "consumer_banking_statement_id": "consumer_banking_statement_id"
            }
          },
          "statement_interests_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "currency": "code"
            }
          }
        },
        "description": "Stores information about interest earned or charged during a statement period"
      },
      "consumer_banking_statement_rates": {
        "schemaName": "consumer_banking",
        "tableName": "statement_rates",
        "columns": {
          "balance_subject_to_rate": {
            "name": "balance_subject_to_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Balance amount subject to this rate"
          },
          "consumer_banking_statement_id": {
            "name": "consumer_banking_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the statement this rate belongs to"
          },
          "consumer_banking_statement_rate_id": {
            "name": "consumer_banking_statement_rate_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each rate record"
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "When this record was created"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Additional description of the rate's applicability"
          },
          "effective_date": {
            "name": "effective_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when this rate became effective"
          },
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when this rate expires (if applicable)"
          },
          "index_rate": {
            "name": "index_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Base index rate for variable rates"
          },
          "is_variable": {
            "name": "is_variable",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether this is a variable rate"
          },
          "margin": {
            "name": "margin",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Margin added to index for variable rates"
          },
          "rate": {
            "name": "rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Rate value (e.g., interest rate, exchange rate)"
          },
          "type": {
            "name": "type",
            "type": {
              "scalarType": "consumer_banking_statement_rate_type"
            },
            "nullable": "nonNullable",
            "description": "Type of rate (e.g., APR, promotional rate)"
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "When this record was last updated"
          }
        },
        "uniquenessConstraints": {
          "statement_rates_pkey": [
            "consumer_banking_statement_rate_id"
          ]
        },
        "foreignRelations": {
          "statement_rates_consumer_banking_statement_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "statements",
            "columnMapping": {
              "consumer_banking_statement_id": "consumer_banking_statement_id"
            }
          }
        },
        "description": "Stores various rate information associated with statements, including interest rates, promotional rates, and exchange rates"
      },
      "consumer_banking_statement_values": {
        "schemaName": "consumer_banking",
        "tableName": "statement_values",
        "columns": {
          "change_percentage": {
            "name": "change_percentage",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Percentage change from previous statement"
          },
          "consumer_banking_statement_id": {
            "name": "consumer_banking_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the statement this value belongs to"
          },
          "consumer_banking_statement_value_id": {
            "name": "consumer_banking_statement_value_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each value record"
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "When this record was created"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Additional description or context for the value"
          },
          "is_estimated": {
            "name": "is_estimated",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether this value is estimated rather than confirmed"
          },
          "previous_value": {
            "name": "previous_value",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Previous statement's value of the same type, for comparison"
          },
          "reference_period_end": {
            "name": "reference_period_end",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "End of the period this value refers to, if different from statement period"
          },
          "reference_period_start": {
            "name": "reference_period_start",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Start of the period this value refers to, if different from statement period"
          },
          "type": {
            "name": "type",
            "type": {
              "scalarType": "consumer_banking_statement_value_type"
            },
            "nullable": "nonNullable",
            "description": "Type of value stored"
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "When this record was last updated"
          },
          "value": {
            "name": "value",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Value content (e.g., loyalty points, tier level, credit score)"
          }
        },
        "uniquenessConstraints": {
          "statement_values_pkey": [
            "consumer_banking_statement_value_id"
          ]
        },
        "foreignRelations": {
          "statement_values_consumer_banking_statement_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "statements",
            "columnMapping": {
              "consumer_banking_statement_id": "consumer_banking_statement_id"
            }
          }
        },
        "description": "Stores miscellaneous values associated with a statement that aren't monetary amounts, such as loyalty points, credit scores, or tier levels"
      },
      "consumer_banking_statements": {
        "schemaName": "consumer_banking",
        "tableName": "statements",
        "columns": {
          "consumer_banking_account_id": {
            "name": "consumer_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the account this balance belongs to"
          },
          "consumer_banking_statement_id": {
            "name": "consumer_banking_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each statement"
          },
          "creation_date_time": {
            "name": "creation_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the statement was generated"
          },
          "end_date_time": {
            "name": "end_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "End of the period covered by the statement"
          },
          "start_date_time": {
            "name": "start_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Start of the period covered by the statement"
          },
          "statement_reference": {
            "name": "statement_reference",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reference number for the statement"
          },
          "type": {
            "name": "type",
            "type": {
              "scalarType": "consumer_banking_statement_type"
            },
            "nullable": "nonNullable",
            "description": "Type of statement (e.g., regular, interim, final)"
          }
        },
        "uniquenessConstraints": {
          "statements_pkey": [
            "consumer_banking_statement_id"
          ]
        },
        "foreignRelations": {
          "statements_consumer_banking_account_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "consumer_banking_account_id": "consumer_banking_account_id"
            }
          }
        },
        "description": "Stores information about account statements"
      },
      "consumer_banking_transaction_balances": {
        "schemaName": "consumer_banking",
        "tableName": "transaction_balances",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Balance amount after the transaction"
          },
          "consumer_banking_transaction_balance_id": {
            "name": "consumer_banking_transaction_balance_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each transaction balance record"
          },
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the transaction this balance belongs to"
          },
          "credit_debit_indicator": {
            "name": "credit_debit_indicator",
            "type": {
              "scalarType": "enterprise_credit_debit_indicator"
            },
            "nullable": "nonNullable",
            "description": "Indicates if balance is credit or debit"
          },
          "currency": {
            "name": "currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nonNullable",
            "description": "Currency code for the balance amount"
          },
          "type": {
            "name": "type",
            "type": {
              "scalarType": "consumer_banking_balance_type"
            },
            "nullable": "nonNullable",
            "description": "Type of balance (e.g., available, booked)"
          }
        },
        "uniquenessConstraints": {
          "transaction_balances_pkey": [
            "consumer_banking_transaction_balance_id"
          ]
        },
        "foreignRelations": {
          "transaction_balances_consumer_banking_transaction_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "consumer_banking_transaction_id": "consumer_banking_transaction_id"
            }
          },
          "transaction_balances_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "currency": "code"
            }
          }
        },
        "description": "Stores account balance information at the time of each transaction"
      },
      "consumer_banking_transaction_bank_transaction_codes": {
        "schemaName": "consumer_banking",
        "tableName": "transaction_bank_transaction_codes",
        "columns": {
          "code": {
            "name": "code",
            "type": {
              "scalarType": "consumer_banking_transaction_bank_code"
            },
            "nullable": "nonNullable",
            "description": "Detailed bank-specific transaction classification code"
          },
          "consumer_banking_transaction_bank_transaction_code_id": {
            "name": "consumer_banking_transaction_bank_transaction_code_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each transaction code record"
          },
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the transaction this code belongs to"
          }
        },
        "uniquenessConstraints": {
          "transaction_bank_transaction_codes_pkey": [
            "consumer_banking_transaction_bank_transaction_code_id"
          ]
        },
        "foreignRelations": {
          "transaction_bank_transaction__consumer_banking_transaction_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "consumer_banking_transaction_id": "consumer_banking_transaction_id"
            }
          }
        },
        "description": "Stores standardized bank transaction codes that categorize transactions with detailed hierarchical classification"
      },
      "consumer_banking_transaction_card_instruments": {
        "schemaName": "consumer_banking",
        "tableName": "transaction_card_instruments",
        "columns": {
          "authorisation_type": {
            "name": "authorisation_type",
            "type": {
              "scalarType": "consumer_banking_authorization_type"
            },
            "nullable": "nullable",
            "description": "Type of authorization (e.g., PIN, signature, contactless)"
          },
          "card_scheme_name": {
            "name": "card_scheme_name",
            "type": {
              "scalarType": "consumer_banking_card_scheme_name"
            },
            "nullable": "nonNullable",
            "description": "Card network (e.g., Visa, Mastercard, Amex)"
          },
          "consumer_banking_transaction_card_instrument_id": {
            "name": "consumer_banking_transaction_card_instrument_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each card instrument record"
          },
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the transaction this card instrument belongs to"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Masked card number or other identifier"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the cardholder as printed on the card"
          }
        },
        "uniquenessConstraints": {
          "transaction_card_instruments_pkey": [
            "consumer_banking_transaction_card_instrument_id"
          ]
        },
        "foreignRelations": {
          "transaction_card_instruments_consumer_banking_transaction__fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "consumer_banking_transaction_id": "consumer_banking_transaction_id"
            }
          }
        },
        "description": "Stores information about payment cards used in transactions"
      },
      "consumer_banking_transaction_creditor_accounts": {
        "schemaName": "consumer_banking",
        "tableName": "transaction_creditor_accounts",
        "columns": {
          "consumer_banking_transaction_creditor_account_id": {
            "name": "consumer_banking_transaction_creditor_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each creditor account record"
          },
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the transaction this creditor account belongs to"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Account identifier receiving the funds"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name associated with the receiving account"
          },
          "scheme_name": {
            "name": "scheme_name",
            "type": {
              "scalarType": "enterprise_identifier_scheme"
            },
            "nullable": "nonNullable",
            "description": "Account identifier scheme (e.g., IBAN, BBAN)"
          },
          "secondary_identification": {
            "name": "secondary_identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Additional identification for the receiving account"
          }
        },
        "uniquenessConstraints": {
          "transaction_creditor_accounts_pkey": [
            "consumer_banking_transaction_creditor_account_id"
          ]
        },
        "foreignRelations": {
          "transaction_creditor_accounts_consumer_banking_transaction_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "consumer_banking_transaction_id": "consumer_banking_transaction_id"
            }
          }
        },
        "description": "Stores information about accounts receiving funds in transactions"
      },
      "consumer_banking_transaction_creditor_agents": {
        "schemaName": "consumer_banking",
        "tableName": "transaction_creditor_agents",
        "columns": {
          "consumer_banking_transaction_creditor_agent_id": {
            "name": "consumer_banking_transaction_creditor_agent_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each creditor agent record"
          },
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the transaction this creditor agent belongs to"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the receiving financial institution"
          },
          "lei": {
            "name": "lei",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Legal Entity Identifier of the receiving institution"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the receiving financial institution"
          },
          "scheme_name": {
            "name": "scheme_name",
            "type": {
              "scalarType": "enterprise_identifier_scheme"
            },
            "nullable": "nonNullable",
            "description": "Identifier scheme for the receiving institution (e.g., BIC)"
          }
        },
        "uniquenessConstraints": {
          "transaction_creditor_agents_pkey": [
            "consumer_banking_transaction_creditor_agent_id"
          ]
        },
        "foreignRelations": {
          "transaction_creditor_agents_consumer_banking_transaction_i_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "consumer_banking_transaction_id": "consumer_banking_transaction_id"
            }
          }
        },
        "description": "Stores information about financial institutions receiving funds in transactions"
      },
      "consumer_banking_transaction_currency_exchanges": {
        "schemaName": "consumer_banking",
        "tableName": "transaction_currency_exchanges",
        "columns": {
          "consumer_banking_transaction_currency_exchange_id": {
            "name": "consumer_banking_transaction_currency_exchange_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each currency exchange record"
          },
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the transaction this currency exchange belongs to"
          },
          "contract_identification": {
            "name": "contract_identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Identifier for any forex contract used"
          },
          "exchange_rate": {
            "name": "exchange_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Rate used for the currency conversion"
          },
          "instructed_amount": {
            "name": "instructed_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Original amount before conversion"
          },
          "instructed_amount_currency": {
            "name": "instructed_amount_currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nullable",
            "description": "Currency of the original instructed amount"
          },
          "quotation_date": {
            "name": "quotation_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the exchange rate was quoted"
          },
          "source_currency": {
            "name": "source_currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nonNullable",
            "description": "Original currency of the transaction"
          },
          "target_currency": {
            "name": "target_currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nullable",
            "description": "Destination currency after conversion"
          },
          "unit_currency": {
            "name": "unit_currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nullable",
            "description": "Currency used as the unit for the exchange rate"
          }
        },
        "uniquenessConstraints": {
          "transaction_currency_exchanges_pkey": [
            "consumer_banking_transaction_currency_exchange_id"
          ]
        },
        "foreignRelations": {
          "transaction_currency_exchange_consumer_banking_transaction_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "consumer_banking_transaction_id": "consumer_banking_transaction_id"
            }
          },
          "transaction_currency_exchanges_instructed_amount_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "instructed_amount_currency": "code"
            }
          },
          "transaction_currency_exchanges_source_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "source_currency": "code"
            }
          },
          "transaction_currency_exchanges_target_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "target_currency": "code"
            }
          },
          "transaction_currency_exchanges_unit_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "unit_currency": "code"
            }
          }
        },
        "description": "Stores currency exchange details for cross-currency transactions"
      },
      "consumer_banking_transaction_debtor_accounts": {
        "schemaName": "consumer_banking",
        "tableName": "transaction_debtor_accounts",
        "columns": {
          "consumer_banking_transaction_debtor_account_id": {
            "name": "consumer_banking_transaction_debtor_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each debtor account record"
          },
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the transaction this debtor account belongs to"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Account identifier sending the funds"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name associated with the sending account"
          },
          "scheme_name": {
            "name": "scheme_name",
            "type": {
              "scalarType": "enterprise_identifier_scheme"
            },
            "nullable": "nonNullable",
            "description": "Account identifier scheme (e.g., IBAN, BBAN)"
          },
          "secondary_identification": {
            "name": "secondary_identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Additional identification for the sending account"
          }
        },
        "uniquenessConstraints": {
          "transaction_debtor_accounts_pkey": [
            "consumer_banking_transaction_debtor_account_id"
          ]
        },
        "foreignRelations": {
          "transaction_debtor_accounts_consumer_banking_transaction_i_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "consumer_banking_transaction_id": "consumer_banking_transaction_id"
            }
          }
        },
        "description": "Stores information about accounts sending funds in transactions"
      },
      "consumer_banking_transaction_debtor_agents": {
        "schemaName": "consumer_banking",
        "tableName": "transaction_debtor_agents",
        "columns": {
          "consumer_banking_transaction_debtor_agent_id": {
            "name": "consumer_banking_transaction_debtor_agent_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each debtor agent record"
          },
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the transaction this debtor agent belongs to"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the sending financial institution"
          },
          "lei": {
            "name": "lei",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Legal Entity Identifier of the sending institution"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the sending financial institution"
          },
          "scheme_name": {
            "name": "scheme_name",
            "type": {
              "scalarType": "enterprise_identifier_scheme"
            },
            "nullable": "nonNullable",
            "description": "Identifier scheme for the sending institution (e.g., BIC)"
          }
        },
        "uniquenessConstraints": {
          "transaction_debtor_agents_pkey": [
            "consumer_banking_transaction_debtor_agent_id"
          ]
        },
        "foreignRelations": {
          "transaction_debtor_agents_consumer_banking_transaction_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "consumer_banking_transaction_id": "consumer_banking_transaction_id"
            }
          }
        },
        "description": "Stores information about financial institutions sending funds in transactions"
      },
      "consumer_banking_transaction_merchant_details": {
        "schemaName": "consumer_banking",
        "tableName": "transaction_merchant_details",
        "columns": {
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the transaction this merchant detail belongs to"
          },
          "consumer_banking_transaction_merchant_detail_id": {
            "name": "consumer_banking_transaction_merchant_detail_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each merchant detail record"
          },
          "merchant_category_code": {
            "name": "merchant_category_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Standard code identifying the merchant's business category"
          },
          "merchant_name": {
            "name": "merchant_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the merchant involved in the transaction"
          }
        },
        "uniquenessConstraints": {
          "transaction_merchant_details_pkey": [
            "consumer_banking_transaction_merchant_detail_id"
          ]
        },
        "foreignRelations": {
          "transaction_merchant_details_consumer_banking_transaction__fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "consumer_banking_transaction_id": "consumer_banking_transaction_id"
            }
          }
        },
        "description": "Stores information about merchants involved in transactions"
      },
      "consumer_banking_transaction_statement_references": {
        "schemaName": "consumer_banking",
        "tableName": "transaction_statement_references",
        "columns": {
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the transaction this reference belongs to"
          },
          "consumer_banking_transaction_statement_reference_id": {
            "name": "consumer_banking_transaction_statement_reference_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each transaction-statement reference record"
          },
          "statement_reference": {
            "name": "statement_reference",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Statement reference n"
          }
        },
        "uniquenessConstraints": {
          "transaction_statement_references_pkey": [
            "consumer_banking_transaction_statement_reference_id"
          ]
        },
        "foreignRelations": {
          "transaction_statement_referen_consumer_banking_transaction_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "consumer_banking_transaction_id": "consumer_banking_transaction_id"
            }
          }
        },
        "description": "Links transactions to specific statements they appear on"
      },
      "consumer_banking_transaction_ultimate_creditors": {
        "schemaName": "consumer_banking",
        "tableName": "transaction_ultimate_creditors",
        "columns": {
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the transaction this ultimate creditor belongs to"
          },
          "consumer_banking_transaction_ultimate_creditor_id": {
            "name": "consumer_banking_transaction_ultimate_creditor_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each ultimate creditor record"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Identification code for the ultimate creditor"
          },
          "lei": {
            "name": "lei",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Legal Entity Identifier if the ultimate creditor is an organization"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the final beneficiary/recipient of the funds"
          },
          "scheme_name": {
            "name": "scheme_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Identification scheme for the creditor's identifier"
          }
        },
        "uniquenessConstraints": {
          "transaction_ultimate_creditors_pkey": [
            "consumer_banking_transaction_ultimate_creditor_id"
          ]
        },
        "foreignRelations": {
          "transaction_ultimate_creditor_consumer_banking_transaction_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "consumer_banking_transaction_id": "consumer_banking_transaction_id"
            }
          }
        },
        "description": "Stores information about the final recipient of funds in a transaction chain"
      },
      "consumer_banking_transaction_ultimate_debtors": {
        "schemaName": "consumer_banking",
        "tableName": "transaction_ultimate_debtors",
        "columns": {
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the transaction this ultimate debtor belongs to"
          },
          "consumer_banking_transaction_ultimate_debtor_id": {
            "name": "consumer_banking_transaction_ultimate_debtor_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each ultimate debtor record"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Identification code for the ultimate debtor"
          },
          "lei": {
            "name": "lei",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Legal Entity Identifier if the ultimate debtor is an organization"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the original party initiating the payment"
          },
          "scheme_name": {
            "name": "scheme_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Identification scheme for the debtor's identifier"
          }
        },
        "uniquenessConstraints": {
          "transaction_ultimate_debtors_pkey": [
            "consumer_banking_transaction_ultimate_debtor_id"
          ]
        },
        "foreignRelations": {
          "transaction_ultimate_debtors_consumer_banking_transaction__fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "transactions",
            "columnMapping": {
              "consumer_banking_transaction_id": "consumer_banking_transaction_id"
            }
          }
        },
        "description": "Stores information about the original party that initiated the payment in a transaction chain"
      },
      "consumer_banking_transactions": {
        "schemaName": "consumer_banking",
        "tableName": "transactions",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Monetary amount of the transaction"
          },
          "category": {
            "name": "category",
            "type": {
              "scalarType": "consumer_banking_transaction_category"
            },
            "nullable": "nullable",
            "description": "High-level categorization of the transaction"
          },
          "charge_amount": {
            "name": "charge_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Any fees associated with the transaction"
          },
          "charge_currency": {
            "name": "charge_currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nullable",
            "description": "Currency code for the transaction fee"
          },
          "consumer_banking_account_id": {
            "name": "consumer_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the account this transaction belongs to"
          },
          "consumer_banking_balance_id": {
            "name": "consumer_banking_balance_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "No meaningful relationship, just guarantees that balances must exist before a transaction can be created."
          },
          "consumer_banking_transaction_id": {
            "name": "consumer_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each transaction"
          },
          "credit_debit_indicator": {
            "name": "credit_debit_indicator",
            "type": {
              "scalarType": "enterprise_credit_debit_indicator"
            },
            "nullable": "nonNullable",
            "description": "Indicates if transaction is a credit or debit"
          },
          "currency": {
            "name": "currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nonNullable",
            "description": "Currency code for the transaction amount"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Additional information about the transaction"
          },
          "merchant_address": {
            "name": "merchant_address",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Address associated with the transaction, if applicable"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_banking_transaction_status"
            },
            "nullable": "nonNullable",
            "description": "Status of the transaction (e.g., pending, booked, rejected)"
          },
          "transaction_date": {
            "name": "transaction_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the transaction was recorded in the books"
          },
          "transaction_mutability": {
            "name": "transaction_mutability",
            "type": {
              "scalarType": "consumer_banking_transaction_mutability"
            },
            "nullable": "nullable",
            "description": "Whether the transaction can be changed (e.g., mutable, immutable)"
          },
          "transaction_reference": {
            "name": "transaction_reference",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reference code for the transaction"
          },
          "transaction_type": {
            "name": "transaction_type",
            "type": {
              "scalarType": "consumer_banking_transaction_type"
            },
            "nullable": "nullable",
            "description": "Specific type of transaction with more detail"
          },
          "value_date": {
            "name": "value_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the transaction affects the account balance"
          }
        },
        "uniquenessConstraints": {
          "transactions_pkey": [
            "consumer_banking_transaction_id"
          ]
        },
        "foreignRelations": {
          "transactions_charge_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "charge_currency": "code"
            }
          },
          "transactions_consumer_banking_account_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "consumer_banking_account_id": "consumer_banking_account_id"
            }
          },
          "transactions_consumer_banking_balance_id_fkey": {
            "foreignSchema": "consumer_banking",
            "foreignTable": "balances",
            "columnMapping": {
              "consumer_banking_balance_id": "consumer_banking_balance_id"
            }
          },
          "transactions_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "currency": "code"
            }
          }
        },
        "description": "Stores detailed information about account transactions"
      },
      "consumer_lending_adverse_action_details": {
        "schemaName": "consumer_lending",
        "tableName": "adverse_action_details",
        "columns": {
          "consumer_lending_adverse_action_id": {
            "name": "consumer_lending_adverse_action_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for adverse action record"
          },
          "consumer_lending_notice_id": {
            "name": "consumer_lending_notice_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to adverse_action_notices"
          },
          "credit_bureau_name": {
            "name": "credit_bureau_name",
            "type": {
              "scalarType": "consumer_lending_credit_bureau"
            },
            "nullable": "nullable",
            "description": "Credit bureau providing the report"
          },
          "credit_score_disclosed": {
            "name": "credit_score_disclosed",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Credit score disclosed to applicant"
          },
          "credit_score_factors": {
            "name": "credit_score_factors",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Key factors affecting score"
          },
          "credit_score_range_max": {
            "name": "credit_score_range_max",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Maximum score in range"
          },
          "credit_score_range_min": {
            "name": "credit_score_range_min",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Minimum score in range"
          },
          "ecoa_reason_code": {
            "name": "ecoa_reason_code",
            "type": {
              "scalarType": "consumer_lending_ecoa_reason_code"
            },
            "nullable": "nonNullable",
            "description": "Standard ECOA reason code"
          },
          "fcra_reason_code": {
            "name": "fcra_reason_code",
            "type": {
              "scalarType": "consumer_lending_fcra_reason_code"
            },
            "nullable": "nullable",
            "description": "Standard FCRA reason code if applicable"
          },
          "generated_date": {
            "name": "generated_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date details were generated"
          },
          "reason_description": {
            "name": "reason_description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Description of reason for adverse action"
          },
          "sequence": {
            "name": "sequence",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Order of importance for reason"
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who generated adverse action"
          }
        },
        "uniquenessConstraints": {
          "adverse_action_details_pkey": [
            "consumer_lending_adverse_action_id"
          ]
        },
        "foreignRelations": {
          "adverse_action_details_consumer_lending_notice_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "adverse_action_notices",
            "columnMapping": {
              "consumer_lending_notice_id": "consumer_lending_notice_id"
            }
          },
          "adverse_action_details_user_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "user_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Provides detailed information about adverse action taken on loan applications, including reasons and credit information."
      },
      "consumer_lending_adverse_action_notices": {
        "schemaName": "consumer_lending",
        "tableName": "adverse_action_notices",
        "columns": {
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan application"
          },
          "consumer_lending_notice_id": {
            "name": "consumer_lending_notice_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for notice"
          },
          "delivery_method": {
            "name": "delivery_method",
            "type": {
              "scalarType": "consumer_lending_delivery_method"
            },
            "nullable": "nonNullable",
            "description": "Method of delivering the notice"
          },
          "generated_date": {
            "name": "generated_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When notice was generated"
          },
          "notice_path": {
            "name": "notice_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored notice document"
          },
          "sent_date": {
            "name": "sent_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When notice was sent to applicant"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_lending_adverse_action_notice_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the notice"
          }
        },
        "uniquenessConstraints": {
          "adverse_action_notices_pkey": [
            "consumer_lending_notice_id"
          ]
        },
        "foreignRelations": {
          "adverse_action_notices_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          }
        },
        "description": "Tracks adverse action notices sent to applicants when their loan applications are denied."
      },
      "consumer_lending_applicant_assets": {
        "schemaName": "consumer_lending",
        "tableName": "applicant_assets",
        "columns": {
          "account_number": {
            "name": "account_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Account number, stored encrypted"
          },
          "asset_type": {
            "name": "asset_type",
            "type": {
              "scalarType": "consumer_lending_asset_type"
            },
            "nullable": "nonNullable",
            "description": "Type of asset"
          },
          "consumer_lending_applicant_id": {
            "name": "consumer_lending_applicant_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to applicant"
          },
          "consumer_lending_asset_id": {
            "name": "consumer_lending_asset_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for asset record"
          },
          "current_value": {
            "name": "current_value",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Current market value of asset"
          },
          "institution_name": {
            "name": "institution_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Financial institution holding the asset"
          },
          "property_address_id": {
            "name": "property_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to enterprise.addresses if asset is property"
          },
          "verification_date": {
            "name": "verification_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date asset was verified"
          },
          "verification_status": {
            "name": "verification_status",
            "type": {
              "scalarType": "consumer_lending_verification_status"
            },
            "nullable": "nonNullable",
            "description": "Self-reported, Verified, Failed"
          }
        },
        "uniquenessConstraints": {
          "applicant_assets_pkey": [
            "consumer_lending_asset_id"
          ]
        },
        "foreignRelations": {
          "applicant_assets_consumer_lending_applicant_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "applicants",
            "columnMapping": {
              "consumer_lending_applicant_id": "consumer_lending_applicant_id"
            }
          },
          "applicant_assets_property_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "property_address_id": "enterprise_address_id"
            }
          }
        },
        "description": "Records assets owned by loan applicants, including financial accounts and property."
      },
      "consumer_lending_applicant_employments": {
        "schemaName": "consumer_lending",
        "tableName": "applicant_employments",
        "columns": {
          "consumer_lending_applicant_id": {
            "name": "consumer_lending_applicant_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to applicant"
          },
          "consumer_lending_employment_id": {
            "name": "consumer_lending_employment_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for employment record"
          },
          "employer_name": {
            "name": "employer_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of employer"
          },
          "employment_type": {
            "name": "employment_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Full-time, Part-time, Self-employed"
          },
          "end_date": {
            "name": "end_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Employment end date if applicable"
          },
          "enterprise_address_id": {
            "name": "enterprise_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to enterprise.addresses for employer location"
          },
          "is_current": {
            "name": "is_current",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Indicates if this is current employer"
          },
          "monthly_income": {
            "name": "monthly_income",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Gross monthly income"
          },
          "phone": {
            "name": "phone",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Employer phone number"
          },
          "position": {
            "name": "position",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Job title or position"
          },
          "start_date": {
            "name": "start_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Employment start date"
          },
          "years_in_profession": {
            "name": "years_in_profession",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Total years in this profession/industry"
          }
        },
        "uniquenessConstraints": {
          "applicant_employments_pkey": [
            "consumer_lending_employment_id"
          ]
        },
        "foreignRelations": {
          "applicant_employments_consumer_lending_applicant_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "applicants",
            "columnMapping": {
              "consumer_lending_applicant_id": "consumer_lending_applicant_id"
            }
          },
          "applicant_employments_enterprise_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "enterprise_address_id": "enterprise_address_id"
            }
          }
        },
        "description": "Stores employment history and income details for loan applicants."
      },
      "consumer_lending_applicant_incomes": {
        "schemaName": "consumer_lending",
        "tableName": "applicant_incomes",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Income amount"
          },
          "consumer_lending_applicant_id": {
            "name": "consumer_lending_applicant_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to applicant"
          },
          "consumer_lending_income_id": {
            "name": "consumer_lending_income_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for income record"
          },
          "frequency": {
            "name": "frequency",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Monthly, Annual, etc."
          },
          "income_type": {
            "name": "income_type",
            "type": {
              "scalarType": "consumer_lending_income_type"
            },
            "nullable": "nonNullable",
            "description": "Type of income source"
          },
          "verification_date": {
            "name": "verification_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date income was verified"
          },
          "verification_status": {
            "name": "verification_status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Self-reported, Verified, Failed"
          }
        },
        "uniquenessConstraints": {
          "applicant_incomes_pkey": [
            "consumer_lending_income_id"
          ]
        },
        "foreignRelations": {
          "applicant_incomes_consumer_lending_applicant_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "applicants",
            "columnMapping": {
              "consumer_lending_applicant_id": "consumer_lending_applicant_id"
            }
          }
        },
        "description": "Tracks various income sources for loan applicants, including employment and other income types."
      },
      "consumer_lending_applicant_liabilities": {
        "schemaName": "consumer_lending",
        "tableName": "applicant_liabilities",
        "columns": {
          "account_number": {
            "name": "account_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Account number, stored encrypted"
          },
          "consumer_lending_applicant_id": {
            "name": "consumer_lending_applicant_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to applicant"
          },
          "consumer_lending_liability_id": {
            "name": "consumer_lending_liability_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for liability record"
          },
          "creditor_name": {
            "name": "creditor_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of creditor"
          },
          "current_balance": {
            "name": "current_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Current outstanding balance"
          },
          "interest_rate": {
            "name": "interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Current interest rate percentage"
          },
          "liability_type": {
            "name": "liability_type",
            "type": {
              "scalarType": "consumer_lending_liability_type"
            },
            "nullable": "nonNullable",
            "description": "Type of liability"
          },
          "maturity_date": {
            "name": "maturity_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When debt will be paid off"
          },
          "monthly_payment": {
            "name": "monthly_payment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Required monthly payment amount"
          },
          "original_amount": {
            "name": "original_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Original loan or credit amount"
          },
          "origination_date": {
            "name": "origination_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When debt was originated"
          },
          "verification_date": {
            "name": "verification_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date liability was verified"
          },
          "verification_status": {
            "name": "verification_status",
            "type": {
              "scalarType": "consumer_lending_verification_status"
            },
            "nullable": "nonNullable",
            "description": "Status of liability verification"
          },
          "will_be_paid_off": {
            "name": "will_be_paid_off",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "Indicates if debt will be paid off with loan"
          }
        },
        "uniquenessConstraints": {
          "applicant_liabilities_pkey": [
            "consumer_lending_liability_id"
          ]
        },
        "foreignRelations": {
          "applicant_liabilities_consumer_lending_applicant_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "applicants",
            "columnMapping": {
              "consumer_lending_applicant_id": "consumer_lending_applicant_id"
            }
          }
        },
        "description": "Tracks liabilities and debt obligations of loan applicants."
      },
      "consumer_lending_applicants": {
        "schemaName": "consumer_lending",
        "tableName": "applicants",
        "columns": {
          "citizenship_status": {
            "name": "citizenship_status",
            "type": {
              "scalarType": "enterprise_citizenship_status"
            },
            "nullable": "nonNullable",
            "description": "US Citizen, Permanent Resident, etc."
          },
          "consumer_lending_applicant_id": {
            "name": "consumer_lending_applicant_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for applicant, may link to parties table"
          },
          "current_address_id": {
            "name": "current_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to enterprise.addresses"
          },
          "date_of_birth": {
            "name": "date_of_birth",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Applicant's date of birth"
          },
          "email": {
            "name": "email",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Primary email address"
          },
          "first_name": {
            "name": "first_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Applicant's legal first name"
          },
          "housing_status": {
            "name": "housing_status",
            "type": {
              "scalarType": "consumer_lending_housing_status"
            },
            "nullable": "nonNullable",
            "description": "Current housing situation"
          },
          "last_name": {
            "name": "last_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Applicant's legal last name"
          },
          "mailing_address_id": {
            "name": "mailing_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to enterprise.addresses if different from current"
          },
          "marital_status": {
            "name": "marital_status",
            "type": {
              "scalarType": "enterprise_marital_status"
            },
            "nullable": "nullable",
            "description": "Married, Single, Divorced, etc."
          },
          "middle_name": {
            "name": "middle_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Applicant's middle name"
          },
          "mobile_phone": {
            "name": "mobile_phone",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Mobile phone number if different from primary"
          },
          "monthly_housing_expense": {
            "name": "monthly_housing_expense",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Monthly housing payment amount"
          },
          "phone": {
            "name": "phone",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Primary phone number"
          },
          "previous_address_id": {
            "name": "previous_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to enterprise.addresses for previous residence"
          },
          "ssn": {
            "name": "ssn",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Social Security Number, stored encrypted"
          },
          "years_at_current_address": {
            "name": "years_at_current_address",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Years at current residence"
          }
        },
        "uniquenessConstraints": {
          "applicants_pkey": [
            "consumer_lending_applicant_id"
          ]
        },
        "foreignRelations": {
          "applicants_current_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "current_address_id": "enterprise_address_id"
            }
          },
          "applicants_mailing_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "mailing_address_id": "enterprise_address_id"
            }
          },
          "applicants_previous_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "previous_address_id": "enterprise_address_id"
            }
          }
        },
        "description": "Stores personal and contact information for loan applicants."
      },
      "consumer_lending_application_applicants": {
        "schemaName": "consumer_lending",
        "tableName": "application_applicants",
        "columns": {
          "applicant_type": {
            "name": "applicant_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Primary, Co-Applicant, Guarantor"
          },
          "consumer_lending_applicant_id": {
            "name": "consumer_lending_applicant_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to applicant"
          },
          "consumer_lending_application_applicant_id": {
            "name": "consumer_lending_application_applicant_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for application-applicant relationship"
          },
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan application"
          },
          "contribution_percentage": {
            "name": "contribution_percentage",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Percentage of loan responsibility"
          },
          "relationship_to_primary": {
            "name": "relationship_to_primary",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Spouse, Relative, Friend, etc."
          }
        },
        "uniquenessConstraints": {
          "application_applicants_pkey": [
            "consumer_lending_application_applicant_id"
          ]
        },
        "foreignRelations": {
          "application_applicants_consumer_lending_applicant_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "applicants",
            "columnMapping": {
              "consumer_lending_applicant_id": "consumer_lending_applicant_id"
            }
          },
          "application_applicants_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          }
        },
        "description": "Links loan applications to individual applicants, allowing for multiple applicants per application."
      },
      "consumer_lending_application_decisions": {
        "schemaName": "consumer_lending",
        "tableName": "application_decisions",
        "columns": {
          "approved_amount": {
            "name": "approved_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Approved loan amount"
          },
          "approved_interest_rate": {
            "name": "approved_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Approved interest rate"
          },
          "approved_monthly_payment": {
            "name": "approved_monthly_payment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Estimated monthly payment"
          },
          "approved_term_months": {
            "name": "approved_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Approved loan term in months"
          },
          "conditional_approval": {
            "name": "conditional_approval",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether approval has conditions"
          },
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan application"
          },
          "consumer_lending_decision_id": {
            "name": "consumer_lending_decision_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for decision"
          },
          "consumer_lending_model_id": {
            "name": "consumer_lending_model_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to decision model used"
          },
          "consumer_lending_pricing_tier_id": {
            "name": "consumer_lending_pricing_tier_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to pricing tier if approved"
          },
          "decision_by_id": {
            "name": "decision_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User that made decision"
          },
          "decision_date_time": {
            "name": "decision_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When decision was made"
          },
          "decision_result": {
            "name": "decision_result",
            "type": {
              "scalarType": "consumer_lending_decision_result"
            },
            "nullable": "nonNullable",
            "description": "Result of the decision"
          },
          "decision_score": {
            "name": "decision_score",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Numeric score from decision model"
          },
          "decision_type": {
            "name": "decision_type",
            "type": {
              "scalarType": "consumer_lending_decision_type"
            },
            "nullable": "nonNullable",
            "description": "Type of decision"
          },
          "expires_date": {
            "name": "expires_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When approval or prequalification expires"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional decision notes"
          }
        },
        "uniquenessConstraints": {
          "application_decisions_pkey": [
            "consumer_lending_decision_id"
          ]
        },
        "foreignRelations": {
          "application_decisions_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          },
          "application_decisions_consumer_lending_model_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "decision_models",
            "columnMapping": {
              "consumer_lending_model_id": "consumer_lending_model_id"
            }
          },
          "application_decisions_consumer_lending_pricing_tier_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "risk_based_pricing_tiers",
            "columnMapping": {
              "consumer_lending_pricing_tier_id": "consumer_lending_pricing_tier_id"
            }
          },
          "application_decisions_decision_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "decision_by_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Records the decisions made on loan applications, including approvals, denials, and pre-qualifications."
      },
      "consumer_lending_appraisal_disclosures": {
        "schemaName": "consumer_lending",
        "tableName": "appraisal_disclosures",
        "columns": {
          "appraisal_ordered_date": {
            "name": "appraisal_ordered_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date appraisal was ordered"
          },
          "appraisal_provided_date": {
            "name": "appraisal_provided_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date appraisal was provided to applicant"
          },
          "appraisal_received_date": {
            "name": "appraisal_received_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date appraisal was received"
          },
          "appraisal_type": {
            "name": "appraisal_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Full Appraisal, AVM, BPO, etc."
          },
          "appraisal_value": {
            "name": "appraisal_value",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Appraised value if known"
          },
          "appraisal_waiver": {
            "name": "appraisal_waiver",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether appraisal was waived"
          },
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan application"
          },
          "consumer_lending_disclosure_id": {
            "name": "consumer_lending_disclosure_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for appraisal disclosure"
          },
          "delivery_method": {
            "name": "delivery_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Email, Mail, Electronic"
          },
          "disclosure_date": {
            "name": "disclosure_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date disclosure was generated"
          },
          "disclosure_type": {
            "name": "disclosure_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Initial Disclosure, Final Disclosure"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored disclosure document"
          },
          "property_address_id": {
            "name": "property_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to enterprise.addresses"
          },
          "sent_date": {
            "name": "sent_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date disclosure was sent"
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who generated disclosure"
          },
          "waiver_reason": {
            "name": "waiver_reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reason for waiver if applicable"
          }
        },
        "uniquenessConstraints": {
          "appraisal_disclosures_pkey": [
            "consumer_lending_disclosure_id"
          ]
        },
        "foreignRelations": {
          "appraisal_disclosures_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          },
          "appraisal_disclosures_property_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "property_address_id": "enterprise_address_id"
            }
          },
          "appraisal_disclosures_user_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "user_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Manages appraisal disclosures provided to loan applicants, including the type of appraisal and its value."
      },
      "consumer_lending_collection_accounts": {
        "schemaName": "consumer_lending",
        "tableName": "collection_accounts",
        "columns": {
          "amount_past_due": {
            "name": "amount_past_due",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Total amount past due"
          },
          "assigned_date": {
            "name": "assigned_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date account was placed in collections"
          },
          "assigned_to": {
            "name": "assigned_to",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Collector assigned to account"
          },
          "consumer_lending_collection_id": {
            "name": "consumer_lending_collection_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for collection record"
          },
          "days_delinquent": {
            "name": "days_delinquent",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Current days delinquent"
          },
          "delinquency_date": {
            "name": "delinquency_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "First date of delinquency"
          },
          "delinquency_reason": {
            "name": "delinquency_reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Customer-provided reason for delinquency"
          },
          "last_action_date": {
            "name": "last_action_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date of most recent action taken"
          },
          "loan_account_id": {
            "name": "loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan account"
          },
          "next_action_date": {
            "name": "next_action_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date of next scheduled action"
          },
          "priority": {
            "name": "priority",
            "type": {
              "scalarType": "consumer_lending_collection_priority"
            },
            "nullable": "nullable",
            "description": "Priority level of the collection account"
          },
          "resolution_date": {
            "name": "resolution_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date collection was resolved"
          },
          "resolution_type": {
            "name": "resolution_type",
            "type": {
              "scalarType": "consumer_lending_collection_resolution_type"
            },
            "nullable": "nullable",
            "description": "Type of resolution for the collection account"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_lending_collection_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of collection account"
          }
        },
        "uniquenessConstraints": {
          "collection_accounts_pkey": [
            "consumer_lending_collection_id"
          ]
        },
        "foreignRelations": {
          "collection_accounts_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "loan_account_id": "consumer_lending_loan_account_id"
            }
          }
        },
        "description": "Tracks accounts that have been placed in collections, including delinquency details and collection actions."
      },
      "consumer_lending_collection_actions": {
        "schemaName": "consumer_lending",
        "tableName": "collection_actions",
        "columns": {
          "action_by_id": {
            "name": "action_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "User who performed action"
          },
          "action_date": {
            "name": "action_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date/time action was taken"
          },
          "action_result": {
            "name": "action_result",
            "type": {
              "scalarType": "consumer_lending_collection_action_result"
            },
            "nullable": "nullable",
            "description": "Result of the collection action"
          },
          "action_type": {
            "name": "action_type",
            "type": {
              "scalarType": "consumer_lending_collection_action_type"
            },
            "nullable": "nonNullable",
            "description": "Type of collection action"
          },
          "consumer_lending_action_id": {
            "name": "consumer_lending_action_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for collection action"
          },
          "consumer_lending_collection_id": {
            "name": "consumer_lending_collection_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to collection account"
          },
          "next_action_date": {
            "name": "next_action_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date for next planned action"
          },
          "next_action_type": {
            "name": "next_action_type",
            "type": {
              "scalarType": "consumer_lending_next_collection_action_type"
            },
            "nullable": "nullable",
            "description": "Type of next planned action"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Details of action and outcome"
          },
          "promise_to_pay_amount": {
            "name": "promise_to_pay_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount customer promised to pay"
          },
          "promise_to_pay_date": {
            "name": "promise_to_pay_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date customer promised to pay by"
          }
        },
        "uniquenessConstraints": {
          "collection_actions_pkey": [
            "consumer_lending_action_id"
          ]
        },
        "foreignRelations": {
          "collection_actions_action_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "action_by_id": "enterprise_associate_id"
            }
          },
          "collection_actions_consumer_lending_collection_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "collection_accounts",
            "columnMapping": {
              "consumer_lending_collection_id": "consumer_lending_collection_id"
            }
          }
        },
        "description": "Logs specific actions taken to collect on delinquent loan accounts, such as calls, letters, and emails."
      },
      "consumer_lending_compliance_exceptions": {
        "schemaName": "consumer_lending",
        "tableName": "compliance_exceptions",
        "columns": {
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to loan application if applicable"
          },
          "consumer_lending_exception_id": {
            "name": "consumer_lending_exception_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for exception"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "Detailed description of exception"
          },
          "exception_date": {
            "name": "exception_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date exception was identified"
          },
          "exception_type": {
            "name": "exception_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Documentation, Disclosure, Timing, etc."
          },
          "identified_by_id": {
            "name": "identified_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Person that identified exception"
          },
          "loan_account_id": {
            "name": "loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to loan account if applicable"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional exception notes"
          },
          "preventive_action": {
            "name": "preventive_action",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Action to prevent recurrence"
          },
          "regulation": {
            "name": "regulation",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Reg Z, Reg B, FCRA, etc."
          },
          "remediated_by_id": {
            "name": "remediated_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Person who remediated exception"
          },
          "remediation_date": {
            "name": "remediation_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date remediation completed"
          },
          "remediation_plan": {
            "name": "remediation_plan",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Plan to address exception"
          },
          "root_cause": {
            "name": "root_cause",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Identified root cause"
          },
          "severity": {
            "name": "severity",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "High, Medium, Low"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Open, In Remediation, Closed"
          }
        },
        "uniquenessConstraints": {
          "compliance_exceptions_pkey": [
            "consumer_lending_exception_id"
          ]
        },
        "foreignRelations": {
          "compliance_exceptions_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          },
          "compliance_exceptions_identified_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "identified_by_id": "enterprise_associate_id"
            }
          },
          "compliance_exceptions_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "loan_account_id": "consumer_lending_loan_account_id"
            }
          },
          "compliance_exceptions_remediated_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "remediated_by_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Tracks compliance exceptions and issues encountered during the lending process, including remediation efforts."
      },
      "consumer_lending_credit_inquiries": {
        "schemaName": "consumer_lending",
        "tableName": "credit_inquiries",
        "columns": {
          "consumer_lending_credit_report_id": {
            "name": "consumer_lending_credit_report_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to credit report"
          },
          "consumer_lending_inquiry_id": {
            "name": "consumer_lending_inquiry_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for inquiry record"
          },
          "creditor_name": {
            "name": "creditor_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Institution that made inquiry"
          },
          "inquiry_date": {
            "name": "inquiry_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date of credit inquiry"
          },
          "inquiry_type": {
            "name": "inquiry_type",
            "type": {
              "scalarType": "consumer_lending_inquiry_type"
            },
            "nullable": "nullable",
            "description": "Type of credit inquiry"
          }
        },
        "uniquenessConstraints": {
          "credit_inquiries_pkey": [
            "consumer_lending_inquiry_id"
          ]
        },
        "foreignRelations": {
          "credit_inquiries_consumer_lending_credit_report_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "credit_reports",
            "columnMapping": {
              "consumer_lending_credit_report_id": "consumer_lending_credit_report_id"
            }
          }
        },
        "description": "Records inquiries made on a credit report, indicating potential credit applications or checks."
      },
      "consumer_lending_credit_report_tradelines": {
        "schemaName": "consumer_lending",
        "tableName": "credit_report_tradelines",
        "columns": {
          "account_number": {
            "name": "account_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Masked account number"
          },
          "account_type": {
            "name": "account_type",
            "type": {
              "scalarType": "consumer_lending_account_type"
            },
            "nullable": "nonNullable",
            "description": "Type of credit account"
          },
          "consumer_lending_credit_report_id": {
            "name": "consumer_lending_credit_report_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to credit report"
          },
          "consumer_lending_tradeline_id": {
            "name": "consumer_lending_tradeline_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for tradeline"
          },
          "credit_limit": {
            "name": "credit_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Credit limit if applicable"
          },
          "creditor_name": {
            "name": "creditor_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of creditor"
          },
          "current_balance": {
            "name": "current_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Current balance on account"
          },
          "days_past_due": {
            "name": "days_past_due",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Current days past due"
          },
          "high_credit": {
            "name": "high_credit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Highest balance or credit limit"
          },
          "monthly_payment": {
            "name": "monthly_payment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Monthly payment amount"
          },
          "open_date": {
            "name": "open_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When account was opened"
          },
          "payment_status": {
            "name": "payment_status",
            "type": {
              "scalarType": "consumer_lending_payment_status"
            },
            "nullable": "nullable",
            "description": "Current status of account payments"
          },
          "worst_delinquency": {
            "name": "worst_delinquency",
            "type": {
              "scalarType": "consumer_lending_delinquency_severity"
            },
            "nullable": "nullable",
            "description": "Worst historical delinquency"
          },
          "worst_delinquency_date": {
            "name": "worst_delinquency_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date of worst delinquency"
          }
        },
        "uniquenessConstraints": {
          "credit_report_tradelines_pkey": [
            "consumer_lending_tradeline_id"
          ]
        },
        "foreignRelations": {
          "credit_report_tradelines_consumer_lending_credit_report_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "credit_reports",
            "columnMapping": {
              "consumer_lending_credit_report_id": "consumer_lending_credit_report_id"
            }
          }
        },
        "description": "Contains details of individual tradelines (credit accounts) reported on a credit report."
      },
      "consumer_lending_credit_reports": {
        "schemaName": "consumer_lending",
        "tableName": "credit_reports",
        "columns": {
          "bureau_name": {
            "name": "bureau_name",
            "type": {
              "scalarType": "consumer_lending_credit_bureau"
            },
            "nullable": "nullable",
            "description": "Credit bureau providing the report"
          },
          "consumer_lending_applicant_id": {
            "name": "consumer_lending_applicant_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to applicant"
          },
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan application"
          },
          "consumer_lending_credit_report_id": {
            "name": "consumer_lending_credit_report_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for credit report"
          },
          "credit_score": {
            "name": "credit_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Primary credit score from report"
          },
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When report expires"
          },
          "report_date": {
            "name": "report_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When report was pulled"
          },
          "report_path": {
            "name": "report_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored report file"
          },
          "report_reference": {
            "name": "report_reference",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "External reference ID from bureau"
          },
          "report_type": {
            "name": "report_type",
            "type": {
              "scalarType": "consumer_lending_credit_report_type"
            },
            "nullable": "nonNullable",
            "description": "Type of credit report"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_lending_credit_report_status"
            },
            "nullable": "nonNullable",
            "description": "Status of credit report retrieval"
          }
        },
        "uniquenessConstraints": {
          "credit_reports_pkey": [
            "consumer_lending_credit_report_id"
          ]
        },
        "foreignRelations": {
          "credit_reports_consumer_lending_applicant_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "applicants",
            "columnMapping": {
              "consumer_lending_applicant_id": "consumer_lending_applicant_id"
            }
          },
          "credit_reports_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          }
        },
        "description": "Stores credit reports obtained for loan applicants, including credit scores and other relevant information."
      },
      "consumer_lending_decision_models": {
        "schemaName": "consumer_lending",
        "tableName": "decision_models",
        "columns": {
          "consumer_lending_model_id": {
            "name": "consumer_lending_model_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for decision model"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of the model and its purpose"
          },
          "effective_date": {
            "name": "effective_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When model became effective"
          },
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When model expires"
          },
          "is_active": {
            "name": "is_active",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether model is in active use"
          },
          "model_name": {
            "name": "model_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the model"
          },
          "model_type": {
            "name": "model_type",
            "type": {
              "scalarType": "consumer_lending_decision_model_type"
            },
            "nullable": "nonNullable",
            "description": "Type of decision model"
          },
          "model_version": {
            "name": "model_version",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Version of the model"
          }
        },
        "uniquenessConstraints": {
          "decision_models_pkey": [
            "consumer_lending_model_id"
          ]
        },
        "foreignRelations": {},
        "description": "Contains information about the decision models used to evaluate loan applications, including credit scoring, income verification, and fraud detection models."
      },
      "consumer_lending_decision_reasons": {
        "schemaName": "consumer_lending",
        "tableName": "decision_reasons",
        "columns": {
          "consumer_lending_decision_id": {
            "name": "consumer_lending_decision_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to application decision"
          },
          "consumer_lending_decision_reason_id": {
            "name": "consumer_lending_decision_reason_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for decision reason"
          },
          "reason_code": {
            "name": "reason_code",
            "type": {
              "scalarType": "consumer_lending_decision_reason_code"
            },
            "nullable": "nonNullable",
            "description": "Standard reason code for decision"
          },
          "reason_description": {
            "name": "reason_description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Description of reason"
          },
          "sequence": {
            "name": "sequence",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Order of importance for reason"
          }
        },
        "uniquenessConstraints": {
          "decision_reasons_pkey": [
            "consumer_lending_decision_reason_id"
          ]
        },
        "foreignRelations": {
          "decision_reasons_consumer_lending_decision_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "application_decisions",
            "columnMapping": {
              "consumer_lending_decision_id": "consumer_lending_decision_id"
            }
          }
        },
        "description": "Provides specific reasons for the decisions made on loan applications, linked to the application_decisions table."
      },
      "consumer_lending_disbursements": {
        "schemaName": "consumer_lending",
        "tableName": "disbursements",
        "columns": {
          "check_number": {
            "name": "check_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Check number if applicable"
          },
          "consumer_lending_loan_account_id": {
            "name": "consumer_lending_loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan account"
          },
          "disbursement_amount": {
            "name": "disbursement_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount disbursed"
          },
          "disbursement_date": {
            "name": "disbursement_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date funds were disbursed"
          },
          "disbursement_id": {
            "name": "disbursement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for disbursement"
          },
          "disbursement_method": {
            "name": "disbursement_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "ACH, Check, Wire"
          },
          "disbursement_status": {
            "name": "disbursement_status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Pending, Completed, Failed"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional disbursement notes"
          },
          "recipient_account_number": {
            "name": "recipient_account_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Recipient account number, encrypted"
          },
          "recipient_account_type": {
            "name": "recipient_account_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Checking, Savings"
          },
          "recipient_name": {
            "name": "recipient_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of recipient"
          },
          "recipient_routing_number": {
            "name": "recipient_routing_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Recipient routing number"
          },
          "tracking_number": {
            "name": "tracking_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Tracking or reference number"
          }
        },
        "uniquenessConstraints": {
          "disbursements_pkey": [
            "disbursement_id"
          ]
        },
        "foreignRelations": {
          "disbursements_consumer_lending_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "consumer_lending_loan_account_id": "consumer_lending_loan_account_id"
            }
          }
        },
        "description": "Tracks the disbursement of funds for loan accounts, including the date, amount, method, and recipient information."
      },
      "consumer_lending_ecoa_monitoring": {
        "schemaName": "consumer_lending",
        "tableName": "ecoa_monitoring",
        "columns": {
          "action_date": {
            "name": "action_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date of action"
          },
          "action_taken": {
            "name": "action_taken",
            "type": {
              "scalarType": "consumer_lending_action_taken"
            },
            "nullable": "nonNullable",
            "description": "Action taken on the loan application"
          },
          "age": {
            "name": "age",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Applicant age"
          },
          "consumer_lending_applicant_id": {
            "name": "consumer_lending_applicant_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to applicant"
          },
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan application"
          },
          "consumer_lending_monitoring_id": {
            "name": "consumer_lending_monitoring_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for monitoring record"
          },
          "ethnicity": {
            "name": "ethnicity",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Self-reported ethnicity"
          },
          "income_monitored": {
            "name": "income_monitored",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Income used for decision"
          },
          "information_method": {
            "name": "information_method",
            "type": {
              "scalarType": "consumer_lending_information_method"
            },
            "nullable": "nonNullable",
            "description": "Method of obtaining information"
          },
          "marital_status": {
            "name": "marital_status",
            "type": {
              "scalarType": "enterprise_marital_status"
            },
            "nullable": "nullable",
            "description": "Marital status"
          },
          "race": {
            "name": "race",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Self-reported race"
          },
          "sex": {
            "name": "sex",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Self-reported sex"
          },
          "submission_date": {
            "name": "submission_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date monitoring info submitted"
          },
          "submitted_by_id": {
            "name": "submitted_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who submitted monitoring info"
          }
        },
        "uniquenessConstraints": {
          "ecoa_monitoring_pkey": [
            "consumer_lending_monitoring_id"
          ]
        },
        "foreignRelations": {
          "ecoa_monitoring_consumer_lending_applicant_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "applicants",
            "columnMapping": {
              "consumer_lending_applicant_id": "consumer_lending_applicant_id"
            }
          },
          "ecoa_monitoring_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          },
          "ecoa_monitoring_submitted_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "submitted_by_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Tracks information related to the Equal Credit Opportunity Act (ECOA) for monitoring and compliance purposes."
      },
      "consumer_lending_fairlending_analysis": {
        "schemaName": "consumer_lending",
        "tableName": "fairlending_analysis",
        "columns": {
          "action_recommended": {
            "name": "action_recommended",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Recommended actions based on findings"
          },
          "analysis_date": {
            "name": "analysis_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date analysis was performed"
          },
          "analysis_type": {
            "name": "analysis_type",
            "type": {
              "scalarType": "consumer_lending_analysis_type"
            },
            "nullable": "nonNullable",
            "description": "Type of fair lending analysis"
          },
          "analyst": {
            "name": "analyst",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Person who performed analysis"
          },
          "consumer_lending_analysis_id": {
            "name": "consumer_lending_analysis_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for analysis record"
          },
          "consumer_lending_loan_product_id": {
            "name": "consumer_lending_loan_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Loan product analyzed if specific product"
          },
          "control_group": {
            "name": "control_group",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Reference group for comparison"
          },
          "controls_applied": {
            "name": "controls_applied",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Variables controlled for in analysis"
          },
          "disparity_ratio": {
            "name": "disparity_ratio",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Ratio of outcomes between groups"
          },
          "findings": {
            "name": "findings",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Summary of findings"
          },
          "outcome_variable": {
            "name": "outcome_variable",
            "type": {
              "scalarType": "consumer_lending_outcome_variable"
            },
            "nullable": "nonNullable",
            "description": "Outcome being measured"
          },
          "p_value": {
            "name": "p_value",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Statistical significance level"
          },
          "protected_class": {
            "name": "protected_class",
            "type": {
              "scalarType": "consumer_lending_protected_class"
            },
            "nullable": "nonNullable",
            "description": "Protected class being analyzed"
          },
          "report_path": {
            "name": "report_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to full analysis report"
          },
          "reviewer": {
            "name": "reviewer",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Person who reviewed analysis"
          },
          "sample_size_control": {
            "name": "sample_size_control",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Number in control group"
          },
          "sample_size_test": {
            "name": "sample_size_test",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Number in test group"
          },
          "statistical_test": {
            "name": "statistical_test",
            "type": {
              "scalarType": "consumer_lending_statistical_test"
            },
            "nullable": "nullable",
            "description": "Statistical method used"
          },
          "statistically_significant": {
            "name": "statistically_significant",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether result is statistically significant"
          },
          "test_group": {
            "name": "test_group",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Group being tested for disparities"
          },
          "time_period_end": {
            "name": "time_period_end",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "End of analysis period"
          },
          "time_period_start": {
            "name": "time_period_start",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Start of analysis period"
          }
        },
        "uniquenessConstraints": {
          "fairlending_analysis_pkey": [
            "consumer_lending_analysis_id"
          ]
        },
        "foreignRelations": {
          "fairlending_analysis_analyst_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "analyst": "enterprise_associate_id"
            }
          },
          "fairlending_analysis_consumer_lending_loan_product_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_products",
            "columnMapping": {
              "consumer_lending_loan_product_id": "consumer_lending_loan_product_id"
            }
          },
          "fairlending_analysis_reviewer_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "reviewer": "enterprise_associate_id"
            }
          }
        },
        "description": "Records fair lending analysis conducted to identify and address potential disparities in lending practices."
      },
      "consumer_lending_high_cost_mortgage_tests": {
        "schemaName": "consumer_lending",
        "tableName": "high_cost_mortgage_tests",
        "columns": {
          "additional_disclosures_required": {
            "name": "additional_disclosures_required",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether additional disclosures required"
          },
          "apor": {
            "name": "apor",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Average Prime Offer Rate used"
          },
          "apor_date": {
            "name": "apor_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date of APOR used"
          },
          "apr": {
            "name": "apr",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "APR used for test"
          },
          "apr_threshold": {
            "name": "apr_threshold",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Threshold for APR test"
          },
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan application"
          },
          "consumer_lending_test_id": {
            "name": "consumer_lending_test_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for HOEPA test"
          },
          "high_cost_mortgage": {
            "name": "high_cost_mortgage",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether loan is high-cost"
          },
          "loan_amount": {
            "name": "loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount used for test"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional test notes"
          },
          "points_and_fees": {
            "name": "points_and_fees",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Total points and fees"
          },
          "points_and_fees_percentage": {
            "name": "points_and_fees_percentage",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Points and fees as percentage of loan"
          },
          "points_and_fees_threshold": {
            "name": "points_and_fees_threshold",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Threshold for points and fees test"
          },
          "test_date": {
            "name": "test_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date test was performed"
          },
          "test_type": {
            "name": "test_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "APR Test, Points and Fees Test"
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who performed test"
          }
        },
        "uniquenessConstraints": {
          "high_cost_mortgage_tests_pkey": [
            "consumer_lending_test_id"
          ]
        },
        "foreignRelations": {
          "high_cost_mortgage_tests_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          },
          "high_cost_mortgage_tests_user_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "user_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Records the results of high-cost mortgage tests performed under the Home Ownership and Equity Protection Act (HOEPA)."
      },
      "consumer_lending_loan_accounts": {
        "schemaName": "consumer_lending",
        "tableName": "loan_accounts",
        "columns": {
          "account_number": {
            "name": "account_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Customer-facing account number"
          },
          "accrued_interest": {
            "name": "accrued_interest",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current accrued unpaid interest"
          },
          "auto_pay_enabled": {
            "name": "auto_pay_enabled",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether automatic payments are active"
          },
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan application"
          },
          "consumer_lending_loan_account_id": {
            "name": "consumer_lending_loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for loan account"
          },
          "consumer_lending_loan_product_id": {
            "name": "consumer_lending_loan_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan product"
          },
          "current_interest_rate": {
            "name": "current_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Current interest rate"
          },
          "current_principal_balance": {
            "name": "current_principal_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Current principal balance"
          },
          "days_past_due": {
            "name": "days_past_due",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current days past due"
          },
          "first_payment_date": {
            "name": "first_payment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date first payment is due"
          },
          "funding_date": {
            "name": "funding_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date loan was funded"
          },
          "interest_paid_total": {
            "name": "interest_paid_total",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Total interest paid life of loan"
          },
          "interest_paid_ytd": {
            "name": "interest_paid_ytd",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Interest paid year to date"
          },
          "late_count_30": {
            "name": "late_count_30",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Count of 30+ day late payments"
          },
          "late_count_60": {
            "name": "late_count_60",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Count of 60+ day late payments"
          },
          "late_count_90": {
            "name": "late_count_90",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Count of 90+ day late payments"
          },
          "maturity_date": {
            "name": "maturity_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Scheduled loan payoff date"
          },
          "next_payment_amount": {
            "name": "next_payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount due for next payment"
          },
          "next_payment_date": {
            "name": "next_payment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Next payment due date"
          },
          "original_interest_rate": {
            "name": "original_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Interest rate at origination"
          },
          "original_principal_balance": {
            "name": "original_principal_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Initial loan amount"
          },
          "original_term_months": {
            "name": "original_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Original loan term in months"
          },
          "origination_date": {
            "name": "origination_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date loan was originated"
          },
          "past_due_amount": {
            "name": "past_due_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current past due amount"
          },
          "payment_amount": {
            "name": "payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Regular payment amount"
          },
          "payment_frequency": {
            "name": "payment_frequency",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Monthly, Bi-weekly"
          },
          "principal_paid_total": {
            "name": "principal_paid_total",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Total principal paid life of loan"
          },
          "principal_paid_ytd": {
            "name": "principal_paid_ytd",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Principal paid year to date"
          },
          "remaining_term_months": {
            "name": "remaining_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Remaining months on loan"
          },
          "servicing_transferred_date": {
            "name": "servicing_transferred_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date servicing was transferred if applicable"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Active, Paid Off, Charged Off, etc."
          },
          "total_fees_charged": {
            "name": "total_fees_charged",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Sum of all fees charged"
          },
          "total_fees_paid": {
            "name": "total_fees_paid",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Sum of all fees paid"
          }
        },
        "uniquenessConstraints": {
          "loan_accounts_account_number_key": [
            "account_number"
          ],
          "loan_accounts_pkey": [
            "consumer_lending_loan_account_id"
          ]
        },
        "foreignRelations": {
          "loan_accounts_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          },
          "loan_accounts_consumer_lending_loan_product_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_products",
            "columnMapping": {
              "consumer_lending_loan_product_id": "consumer_lending_loan_product_id"
            }
          }
        },
        "description": "Stores information about active loan accounts, including loan details, payment history, and current status."
      },
      "consumer_lending_loan_applications": {
        "schemaName": "consumer_lending",
        "tableName": "loan_applications",
        "columns": {
          "application_channel": {
            "name": "application_channel",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Online, Mobile, Branch, Phone"
          },
          "application_type": {
            "name": "application_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Personal, Auto, Student, Home Improvement, etc."
          },
          "branch_id": {
            "name": "branch_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Branch where application was processed"
          },
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for the loan application"
          },
          "creation_date_time": {
            "name": "creation_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When application was initially created"
          },
          "customer_id": {
            "name": "customer_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to enterprise.accounts"
          },
          "decision_date_time": {
            "name": "decision_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When final decision was made"
          },
          "decision_reason": {
            "name": "decision_reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Primary reason for approval/denial"
          },
          "estimated_credit_score": {
            "name": "estimated_credit_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Estimated or self-reported credit score"
          },
          "last_updated_date_time": {
            "name": "last_updated_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Last modification timestamp"
          },
          "loan_purpose": {
            "name": "loan_purpose",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Purpose for the loan"
          },
          "officer_id": {
            "name": "officer_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Loan officer assigned to application"
          },
          "referral_source": {
            "name": "referral_source",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Marketing channel or referral source"
          },
          "requested_amount": {
            "name": "requested_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount requested by applicant"
          },
          "requested_term_months": {
            "name": "requested_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Loan term in months requested by applicant"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Draft, Submitted, In Review, Approved, Denied, Cancelled"
          },
          "submission_date_time": {
            "name": "submission_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When application was submitted by customer"
          }
        },
        "uniquenessConstraints": {
          "loan_applications_pkey": [
            "consumer_lending_application_id"
          ]
        },
        "foreignRelations": {
          "loan_applications_branch_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "buildings",
            "columnMapping": {
              "branch_id": "enterprise_building_id"
            }
          },
          "loan_applications_customer_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "accounts",
            "columnMapping": {
              "customer_id": "enterprise_account_id"
            }
          },
          "loan_applications_officer_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "officer_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Stores consumer lending applications for non-mortgage loans"
      },
      "consumer_lending_loan_collateral": {
        "schemaName": "consumer_lending",
        "tableName": "loan_collateral",
        "columns": {
          "collateral_type": {
            "name": "collateral_type",
            "type": {
              "scalarType": "consumer_lending_collateral_type"
            },
            "nullable": "nonNullable",
            "description": "Type of collateral"
          },
          "consumer_lending_collateral_id": {
            "name": "consumer_lending_collateral_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for collateral"
          },
          "deposit_account_id": {
            "name": "deposit_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to enterprise.accounts if deposit"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Description of collateral"
          },
          "insurance_expiration_date": {
            "name": "insurance_expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Expiration date of insurance policy"
          },
          "insurance_required": {
            "name": "insurance_required",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether insurance is required"
          },
          "lien_position": {
            "name": "lien_position",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Priority of lien"
          },
          "lien_recording_date": {
            "name": "lien_recording_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date lien was recorded"
          },
          "lien_recording_number": {
            "name": "lien_recording_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Lien recording reference number"
          },
          "loan_account_id": {
            "name": "loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan account"
          },
          "property_address_id": {
            "name": "property_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to enterprise.addresses if property"
          },
          "valuation_date": {
            "name": "valuation_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date of valuation"
          },
          "value": {
            "name": "value",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Estimated value of collateral"
          },
          "vehicle_id": {
            "name": "vehicle_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to vehicles table if applicable"
          }
        },
        "uniquenessConstraints": {
          "loan_collateral_pkey": [
            "consumer_lending_collateral_id"
          ]
        },
        "foreignRelations": {
          "loan_collateral_deposit_account_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "accounts",
            "columnMapping": {
              "deposit_account_id": "enterprise_account_id"
            }
          },
          "loan_collateral_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "loan_account_id": "consumer_lending_loan_account_id"
            }
          },
          "loan_collateral_property_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "property_address_id": "enterprise_address_id"
            }
          },
          "loan_collateral_vehicle_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "vehicles",
            "columnMapping": {
              "vehicle_id": "vehicle_id"
            }
          }
        },
        "description": "Stores information about collateral used to secure loans, including type, value, and insurance requirements."
      },
      "consumer_lending_loan_communications": {
        "schemaName": "consumer_lending",
        "tableName": "loan_communications",
        "columns": {
          "communication_date": {
            "name": "communication_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date/time of communication"
          },
          "communication_type": {
            "name": "communication_type",
            "type": {
              "scalarType": "consumer_lending_communication_type"
            },
            "nullable": "nonNullable",
            "description": "Method of communication"
          },
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to loan application if applicable"
          },
          "consumer_lending_communication_id": {
            "name": "consumer_lending_communication_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for communication"
          },
          "content": {
            "name": "content",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Communication content or transcript"
          },
          "direction": {
            "name": "direction",
            "type": {
              "scalarType": "consumer_lending_communication_direction"
            },
            "nullable": "nonNullable",
            "description": "Direction of communication"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored communication document"
          },
          "loan_account_id": {
            "name": "loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to loan account if applicable"
          },
          "recipient": {
            "name": "recipient",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Person who received communication"
          },
          "related_to": {
            "name": "related_to",
            "type": {
              "scalarType": "consumer_lending_communication_context"
            },
            "nullable": "nullable",
            "description": "Context or purpose of communication"
          },
          "sender": {
            "name": "sender",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Person or system that sent communication"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_lending_communication_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of communication"
          },
          "subject": {
            "name": "subject",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Communication subject"
          },
          "template_id": {
            "name": "template_id",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reference to template if applicable"
          }
        },
        "uniquenessConstraints": {
          "loan_communications_pkey": [
            "consumer_lending_communication_id"
          ]
        },
        "foreignRelations": {
          "loan_communications_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          },
          "loan_communications_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "loan_account_id": "consumer_lending_loan_account_id"
            }
          }
        },
        "description": "Logs various communications related to loan applications and accounts, such as emails, letters, and phone calls."
      },
      "consumer_lending_loan_documents": {
        "schemaName": "consumer_lending",
        "tableName": "loan_documents",
        "columns": {
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to loan application if applicable"
          },
          "consumer_lending_document_id": {
            "name": "consumer_lending_document_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for document"
          },
          "document_name": {
            "name": "document_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "File name or title"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Path to stored document"
          },
          "document_type": {
            "name": "document_type",
            "type": {
              "scalarType": "consumer_lending_document_type"
            },
            "nullable": "nonNullable",
            "description": "Type of document"
          },
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Document expiration date if applicable"
          },
          "loan_account_id": {
            "name": "loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to loan account if applicable"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional document notes"
          },
          "review_date": {
            "name": "review_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When document was reviewed"
          },
          "reviewer_id": {
            "name": "reviewer_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who reviewed document"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_lending_document_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the document"
          },
          "upload_date": {
            "name": "upload_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When document was created/uploaded"
          }
        },
        "uniquenessConstraints": {
          "loan_documents_pkey": [
            "consumer_lending_document_id"
          ]
        },
        "foreignRelations": {
          "loan_documents_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          },
          "loan_documents_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "loan_account_id": "consumer_lending_loan_account_id"
            }
          }
        },
        "description": "Tracks documents related to loan applications and accounts, including application forms, contracts, and statements."
      },
      "consumer_lending_loan_fees": {
        "schemaName": "consumer_lending",
        "tableName": "loan_fees",
        "columns": {
          "consumer_lending_fee_id": {
            "name": "consumer_lending_fee_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for fee"
          },
          "consumer_lending_loan_account_id": {
            "name": "consumer_lending_loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan account"
          },
          "consumer_lending_payment_id": {
            "name": "consumer_lending_payment_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to loan_payments if paid"
          },
          "fee_amount": {
            "name": "fee_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Fee amount"
          },
          "fee_date": {
            "name": "fee_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date fee was assessed"
          },
          "fee_status": {
            "name": "fee_status",
            "type": {
              "scalarType": "consumer_lending_loan_fee_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the fee"
          },
          "fee_type": {
            "name": "fee_type",
            "type": {
              "scalarType": "consumer_lending_loan_fee_type"
            },
            "nullable": "nonNullable",
            "description": "Type of fee charged"
          },
          "paid_date": {
            "name": "paid_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date fee was paid"
          },
          "waived_by_id": {
            "name": "waived_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who waived the fee"
          },
          "waived_date": {
            "name": "waived_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date fee was waived if applicable"
          },
          "waiver_reason": {
            "name": "waiver_reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reason fee was waived"
          }
        },
        "uniquenessConstraints": {
          "loan_fees_pkey": [
            "consumer_lending_fee_id"
          ]
        },
        "foreignRelations": {
          "loan_fees_consumer_lending_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "consumer_lending_loan_account_id": "consumer_lending_loan_account_id"
            }
          },
          "loan_fees_consumer_lending_payment_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_payments",
            "columnMapping": {
              "consumer_lending_payment_id": "consumer_lending_payment_id"
            }
          },
          "loan_fees_waived_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "waived_by_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Tracks fees charged to loan accounts, including fee type, amount, status, and payment details."
      },
      "consumer_lending_loan_insurance": {
        "schemaName": "consumer_lending",
        "tableName": "loan_insurance",
        "columns": {
          "beneficiary": {
            "name": "beneficiary",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Named beneficiary if applicable"
          },
          "carrier_name": {
            "name": "carrier_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of insurance company"
          },
          "consumer_lending_collateral_id": {
            "name": "consumer_lending_collateral_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to loan_collateral if associated with specific collateral"
          },
          "consumer_lending_insurance_id": {
            "name": "consumer_lending_insurance_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for insurance record"
          },
          "consumer_lending_loan_account_id": {
            "name": "consumer_lending_loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan account"
          },
          "coverage_amount": {
            "name": "coverage_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount of coverage"
          },
          "effective_date": {
            "name": "effective_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Policy start date"
          },
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Policy end date"
          },
          "insurance_type": {
            "name": "insurance_type",
            "type": {
              "scalarType": "consumer_lending_insurance_type"
            },
            "nullable": "nonNullable",
            "description": "Type of insurance"
          },
          "policy_number": {
            "name": "policy_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Insurance policy number"
          },
          "premium_amount": {
            "name": "premium_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Cost of insurance premium"
          },
          "premium_frequency": {
            "name": "premium_frequency",
            "type": {
              "scalarType": "consumer_lending_premium_frequency"
            },
            "nullable": "nonNullable",
            "description": "Frequency of premium payments"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_lending_insurance_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the insurance policy"
          }
        },
        "uniquenessConstraints": {
          "loan_insurance_pkey": [
            "consumer_lending_insurance_id"
          ]
        },
        "foreignRelations": {
          "loan_insurance_consumer_lending_collateral_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_collateral",
            "columnMapping": {
              "consumer_lending_collateral_id": "consumer_lending_collateral_id"
            }
          },
          "loan_insurance_consumer_lending_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "consumer_lending_loan_account_id": "consumer_lending_loan_account_id"
            }
          }
        },
        "description": "Stores information about insurance policies associated with loan accounts or collateral."
      },
      "consumer_lending_loan_modifications": {
        "schemaName": "consumer_lending",
        "tableName": "loan_modifications",
        "columns": {
          "approval_date": {
            "name": "approval_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date modification was approved"
          },
          "approved_by_id": {
            "name": "approved_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who approved modification"
          },
          "capitalized_amount": {
            "name": "capitalized_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of interest or fees capitalized"
          },
          "consumer_lending_modification_id": {
            "name": "consumer_lending_modification_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for loan modification"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to modification agreement document"
          },
          "effective_date": {
            "name": "effective_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date modification takes effect"
          },
          "hardship_reason": {
            "name": "hardship_reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Customer's reason for hardship"
          },
          "loan_account_id": {
            "name": "loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan account"
          },
          "modification_type": {
            "name": "modification_type",
            "type": {
              "scalarType": "consumer_lending_loan_modification_type"
            },
            "nullable": "nonNullable",
            "description": "Type of loan modification"
          },
          "new_principal_balance": {
            "name": "new_principal_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Principal balance after modification"
          },
          "new_rate": {
            "name": "new_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Interest rate after modification"
          },
          "new_term_months": {
            "name": "new_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Loan term after modification"
          },
          "original_principal_balance": {
            "name": "original_principal_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Principal balance before modification"
          },
          "original_rate": {
            "name": "original_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Interest rate before modification"
          },
          "original_term_months": {
            "name": "original_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Loan term before modification"
          },
          "request_date": {
            "name": "request_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date modification was requested"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_lending_loan_modification_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the modification"
          }
        },
        "uniquenessConstraints": {
          "loan_modifications_pkey": [
            "consumer_lending_modification_id"
          ]
        },
        "foreignRelations": {
          "loan_modifications_approved_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "approved_by_id": "enterprise_associate_id"
            }
          },
          "loan_modifications_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "loan_account_id": "consumer_lending_loan_account_id"
            }
          }
        },
        "description": "Tracks modifications made to existing loan accounts, such as changes to interest rates, terms, or principal balance."
      },
      "consumer_lending_loan_payments": {
        "schemaName": "consumer_lending",
        "tableName": "loan_payments",
        "columns": {
          "confirmation_number": {
            "name": "confirmation_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Payment confirmation number"
          },
          "consumer_lending_loan_account_id": {
            "name": "consumer_lending_loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan account"
          },
          "consumer_lending_payment_id": {
            "name": "consumer_lending_payment_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for payment"
          },
          "interest_amount": {
            "name": "interest_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount applied to interest"
          },
          "late_fee_amount": {
            "name": "late_fee_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Amount applied to late fees"
          },
          "other_fee_amount": {
            "name": "other_fee_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Amount applied to other fees"
          },
          "payment_amount": {
            "name": "payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Total payment amount"
          },
          "payment_date": {
            "name": "payment_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date/time payment was received"
          },
          "payment_effective_date": {
            "name": "payment_effective_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date payment is effective"
          },
          "payment_method": {
            "name": "payment_method",
            "type": {
              "scalarType": "consumer_lending_payment_method"
            },
            "nullable": "nonNullable",
            "description": "Method used to make payment"
          },
          "payment_status": {
            "name": "payment_status",
            "type": {
              "scalarType": "consumer_lending_loan_payment_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the payment"
          },
          "payment_type": {
            "name": "payment_type",
            "type": {
              "scalarType": "consumer_lending_payment_type"
            },
            "nullable": "nonNullable",
            "description": "Type of payment"
          },
          "principal_amount": {
            "name": "principal_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount applied to principal"
          },
          "returned_date": {
            "name": "returned_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date payment was returned if applicable"
          },
          "returned_reason": {
            "name": "returned_reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reason for payment return if applicable"
          },
          "transaction_id": {
            "name": "transaction_id",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "External transaction identifier"
          }
        },
        "uniquenessConstraints": {
          "loan_payments_pkey": [
            "consumer_lending_payment_id"
          ]
        },
        "foreignRelations": {
          "loan_payments_consumer_lending_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "consumer_lending_loan_account_id": "consumer_lending_loan_account_id"
            }
          }
        },
        "description": "Records payments made on loan accounts, including payment date, amount, method, and status."
      },
      "consumer_lending_loan_products": {
        "schemaName": "consumer_lending",
        "tableName": "loan_products",
        "columns": {
          "base_interest_rate": {
            "name": "base_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Starting interest rate before adjustments"
          },
          "consumer_lending_loan_product_id": {
            "name": "consumer_lending_loan_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for loan product"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Detailed product description"
          },
          "disbursement_options": {
            "name": "disbursement_options",
            "type": {
              "scalarType": "consumer_lending_disbursement_option"
            },
            "nullable": "nullable",
            "description": "Method of loan disbursement"
          },
          "early_repayment_penalty": {
            "name": "early_repayment_penalty",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether penalty applies for early payoff"
          },
          "interest_rate_type": {
            "name": "interest_rate_type",
            "type": {
              "scalarType": "consumer_lending_interest_rate_type"
            },
            "nullable": "nonNullable",
            "description": "Type of interest rate"
          },
          "is_active": {
            "name": "is_active",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether product is currently offered"
          },
          "late_fee_amount": {
            "name": "late_fee_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount or percentage of late fee"
          },
          "late_fee_type": {
            "name": "late_fee_type",
            "type": {
              "scalarType": "consumer_lending_fee_type"
            },
            "nullable": "nullable",
            "description": "Type of late fee"
          },
          "loan_type": {
            "name": "loan_type",
            "type": {
              "scalarType": "consumer_lending_loan_type"
            },
            "nullable": "nonNullable",
            "description": "Type of loan product"
          },
          "max_loan_amount": {
            "name": "max_loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Maximum allowed loan amount"
          },
          "max_term_months": {
            "name": "max_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Maximum allowed term in months"
          },
          "min_credit_score": {
            "name": "min_credit_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Minimum required credit score"
          },
          "min_loan_amount": {
            "name": "min_loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Minimum allowed loan amount"
          },
          "min_term_months": {
            "name": "min_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Minimum allowed term in months"
          },
          "origination_fee_amount": {
            "name": "origination_fee_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount or percentage of origination fee"
          },
          "origination_fee_type": {
            "name": "origination_fee_type",
            "type": {
              "scalarType": "consumer_lending_fee_type"
            },
            "nullable": "nullable",
            "description": "Type of origination fee"
          },
          "product_code": {
            "name": "product_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Internal code for the product"
          },
          "product_name": {
            "name": "product_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Marketing name of the product"
          },
          "required_collateral": {
            "name": "required_collateral",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether collateral is required"
          }
        },
        "uniquenessConstraints": {
          "loan_products_pkey": [
            "consumer_lending_loan_product_id"
          ]
        },
        "foreignRelations": {},
        "description": "Defines the various loan products offered to consumers, including their terms, fees, and features."
      },
      "consumer_lending_loan_statements": {
        "schemaName": "consumer_lending",
        "tableName": "loan_statements",
        "columns": {
          "amount_due": {
            "name": "amount_due",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount due for next payment"
          },
          "closing_balance": {
            "name": "closing_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Balance at end of period"
          },
          "consumer_lending_statement_id": {
            "name": "consumer_lending_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for statement"
          },
          "delivery_method": {
            "name": "delivery_method",
            "type": {
              "scalarType": "consumer_lending_statement_delivery_method"
            },
            "nullable": "nullable",
            "description": "Method of statement delivery"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored statement document"
          },
          "due_date": {
            "name": "due_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Next payment due date"
          },
          "fees_charged": {
            "name": "fees_charged",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Fees charged in period"
          },
          "fees_paid": {
            "name": "fees_paid",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Fees paid in period"
          },
          "interest_paid": {
            "name": "interest_paid",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Interest paid in period"
          },
          "loan_account_id": {
            "name": "loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan account"
          },
          "opening_balance": {
            "name": "opening_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Balance at start of period"
          },
          "principal_paid": {
            "name": "principal_paid",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Principal paid in period"
          },
          "sent_date": {
            "name": "sent_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date statement was sent to customer"
          },
          "statement_date": {
            "name": "statement_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date statement was generated"
          },
          "statement_period_end": {
            "name": "statement_period_end",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "End date of statement period"
          },
          "statement_period_start": {
            "name": "statement_period_start",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Start date of statement period"
          },
          "total_payments": {
            "name": "total_payments",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Sum of payments in period"
          }
        },
        "uniquenessConstraints": {
          "loan_statements_pkey": [
            "consumer_lending_statement_id"
          ]
        },
        "foreignRelations": {
          "loan_statements_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "loan_account_id": "consumer_lending_loan_account_id"
            }
          }
        },
        "description": "Stores periodic loan statements, providing a summary of account activity, balances, and payments."
      },
      "consumer_lending_military_lending_checks": {
        "schemaName": "consumer_lending",
        "tableName": "military_lending_checks",
        "columns": {
          "certificate_date": {
            "name": "certificate_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date on covered borrower certificate"
          },
          "check_date": {
            "name": "check_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date MLA status was checked"
          },
          "consumer_lending_applicant_id": {
            "name": "consumer_lending_applicant_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to applicant"
          },
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan application"
          },
          "consumer_lending_check_id": {
            "name": "consumer_lending_check_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for MLA check"
          },
          "covered_borrower": {
            "name": "covered_borrower",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether applicant is a covered borrower"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored verification document"
          },
          "mapr_calculated": {
            "name": "mapr_calculated",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Military Annual Percentage Rate if calculated"
          },
          "mapr_disclosure_provided": {
            "name": "mapr_disclosure_provided",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether MAPR disclosure was provided"
          },
          "military_status": {
            "name": "military_status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Active Duty, Dependent, Not Military"
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who performed check"
          },
          "verification_method": {
            "name": "verification_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "MLA Database, Credit Report Flag"
          }
        },
        "uniquenessConstraints": {
          "military_lending_checks_pkey": [
            "consumer_lending_check_id"
          ]
        },
        "foreignRelations": {
          "military_lending_checks_consumer_lending_applicant_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "applicants",
            "columnMapping": {
              "consumer_lending_applicant_id": "consumer_lending_applicant_id"
            }
          },
          "military_lending_checks_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          },
          "military_lending_checks_user_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "user_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Tracks compliance with the Military Lending Act (MLA), including verification of military status and MAPR calculations."
      },
      "consumer_lending_payment_arrangements": {
        "schemaName": "consumer_lending",
        "tableName": "payment_arrangements",
        "columns": {
          "approved_by_id": {
            "name": "approved_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who approved arrangement"
          },
          "arrangement_date": {
            "name": "arrangement_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date arrangement was created"
          },
          "consumer_lending_arrangement_id": {
            "name": "consumer_lending_arrangement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for payment arrangement"
          },
          "consumer_lending_collection_id": {
            "name": "consumer_lending_collection_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to collection account"
          },
          "first_payment_date": {
            "name": "first_payment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date first payment is due"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional arrangement notes"
          },
          "number_of_payments": {
            "name": "number_of_payments",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Number of payments in arrangement"
          },
          "payment_amount": {
            "name": "payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount of each payment"
          },
          "payment_frequency": {
            "name": "payment_frequency",
            "type": {
              "scalarType": "consumer_lending_payment_frequency"
            },
            "nullable": "nonNullable",
            "description": "Frequency of payments"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_lending_payment_arrangement_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of payment arrangement"
          },
          "total_amount": {
            "name": "total_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Total amount to be paid"
          }
        },
        "uniquenessConstraints": {
          "payment_arrangements_pkey": [
            "consumer_lending_arrangement_id"
          ]
        },
        "foreignRelations": {
          "payment_arrangements_approved_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "approved_by_id": "enterprise_associate_id"
            }
          },
          "payment_arrangements_consumer_lending_collection_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "collection_accounts",
            "columnMapping": {
              "consumer_lending_collection_id": "consumer_lending_collection_id"
            }
          }
        },
        "description": "Records payment arrangements made with borrowers to resolve delinquent accounts."
      },
      "consumer_lending_payment_schedules": {
        "schemaName": "consumer_lending",
        "tableName": "payment_schedules",
        "columns": {
          "actual_payment_date": {
            "name": "actual_payment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date payment was actually made"
          },
          "actual_payment_id": {
            "name": "actual_payment_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to loan_payments if paid"
          },
          "beginning_balance": {
            "name": "beginning_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Principal balance before payment"
          },
          "consumer_lending_loan_account_id": {
            "name": "consumer_lending_loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan account"
          },
          "ending_balance": {
            "name": "ending_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Principal balance after payment"
          },
          "interest_amount": {
            "name": "interest_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Portion applied to interest"
          },
          "payment_amount": {
            "name": "payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Total payment amount due"
          },
          "payment_number": {
            "name": "payment_number",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Sequential payment number"
          },
          "payment_schedule_id": {
            "name": "payment_schedule_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for schedule entry"
          },
          "principal_amount": {
            "name": "principal_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Portion applied to principal"
          },
          "scheduled_date": {
            "name": "scheduled_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date payment is scheduled"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_lending_payment_schedule_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the payment schedule entry"
          }
        },
        "uniquenessConstraints": {
          "payment_schedules_pkey": [
            "payment_schedule_id"
          ]
        },
        "foreignRelations": {
          "payment_schedules_actual_payment_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_payments",
            "columnMapping": {
              "actual_payment_id": "consumer_lending_payment_id"
            }
          },
          "payment_schedules_consumer_lending_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "consumer_lending_loan_account_id": "consumer_lending_loan_account_id"
            }
          }
        },
        "description": "Contains the payment schedule for each loan account, including scheduled dates, amounts, and payment status."
      },
      "consumer_lending_product_eligibility_criteria": {
        "schemaName": "consumer_lending",
        "tableName": "product_eligibility_criteria",
        "columns": {
          "consumer_lending_criteria_id": {
            "name": "consumer_lending_criteria_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for eligibility criteria"
          },
          "consumer_lending_loan_product_id": {
            "name": "consumer_lending_loan_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan product"
          },
          "criteria_type": {
            "name": "criteria_type",
            "type": {
              "scalarType": "consumer_lending_eligibility_criteria_type"
            },
            "nullable": "nonNullable",
            "description": "Type of eligibility criteria"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of the eligibility criteria"
          },
          "max_value": {
            "name": "max_value",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Maximum value for eligibility"
          },
          "min_value": {
            "name": "min_value",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Minimum value for eligibility"
          },
          "required": {
            "name": "required",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether this criteria is required"
          }
        },
        "uniquenessConstraints": {
          "product_eligibility_criteria_pkey": [
            "consumer_lending_criteria_id"
          ]
        },
        "foreignRelations": {
          "product_eligibility_criteria_consumer_lending_loan_product_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_products",
            "columnMapping": {
              "consumer_lending_loan_product_id": "consumer_lending_loan_product_id"
            }
          }
        },
        "description": "Specifies the eligibility criteria for each loan product, such as credit score, income, and employment requirements."
      },
      "consumer_lending_public_records": {
        "schemaName": "consumer_lending",
        "tableName": "public_records",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of judgment or lien"
          },
          "consumer_lending_credit_report_id": {
            "name": "consumer_lending_credit_report_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to credit report"
          },
          "consumer_lending_record_id": {
            "name": "consumer_lending_record_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for public record"
          },
          "filing_date": {
            "name": "filing_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date record was filed"
          },
          "record_type": {
            "name": "record_type",
            "type": {
              "scalarType": "consumer_lending_public_record_type"
            },
            "nullable": "nonNullable",
            "description": "Type of public record"
          },
          "reference_number": {
            "name": "reference_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Court or filing reference number"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "consumer_lending_public_record_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the public record"
          }
        },
        "uniquenessConstraints": {
          "public_records_pkey": [
            "consumer_lending_record_id"
          ]
        },
        "foreignRelations": {
          "public_records_consumer_lending_credit_report_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "credit_reports",
            "columnMapping": {
              "consumer_lending_credit_report_id": "consumer_lending_credit_report_id"
            }
          }
        },
        "description": "Stores public records, such as bankruptcies, liens, and judgments, associated with a credit report."
      },
      "consumer_lending_reg_b_notices": {
        "schemaName": "consumer_lending",
        "tableName": "reg_b_notices",
        "columns": {
          "appraisal_notice_included": {
            "name": "appraisal_notice_included",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether appraisal notice included"
          },
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan application"
          },
          "consumer_lending_notice_id": {
            "name": "consumer_lending_notice_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for Reg B notice"
          },
          "counteroffer_terms": {
            "name": "counteroffer_terms",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Terms of counteroffer if applicable"
          },
          "deadline_date": {
            "name": "deadline_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Deadline for response if applicable"
          },
          "delivery_method": {
            "name": "delivery_method",
            "type": {
              "scalarType": "consumer_lending_delivery_method"
            },
            "nullable": "nonNullable",
            "description": "Method of delivering the notice"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored notice document"
          },
          "generated_date": {
            "name": "generated_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date notice was generated"
          },
          "incomplete_items": {
            "name": "incomplete_items",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Items needed if incompleteness notice"
          },
          "notice_type": {
            "name": "notice_type",
            "type": {
              "scalarType": "consumer_lending_reg_b_notice_type"
            },
            "nullable": "nonNullable",
            "description": "Type of Regulation B notice"
          },
          "sent_date": {
            "name": "sent_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date notice was sent"
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who generated notice"
          }
        },
        "uniquenessConstraints": {
          "reg_b_notices_pkey": [
            "consumer_lending_notice_id"
          ]
        },
        "foreignRelations": {
          "reg_b_notices_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          },
          "reg_b_notices_user_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "user_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Tracks notices and disclosures required by Regulation B (Equal Credit Opportunity Act), such as notices of incomplete applications or adverse action."
      },
      "consumer_lending_reg_z_disclosures": {
        "schemaName": "consumer_lending",
        "tableName": "reg_z_disclosures",
        "columns": {
          "amount_financed": {
            "name": "amount_financed",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount financed disclosed"
          },
          "annual_percentage_rate": {
            "name": "annual_percentage_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "APR disclosed"
          },
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan application"
          },
          "consumer_lending_disclosure_id": {
            "name": "consumer_lending_disclosure_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for disclosure"
          },
          "delivery_method": {
            "name": "delivery_method",
            "type": {
              "scalarType": "consumer_lending_disclosure_delivery_method"
            },
            "nullable": "nonNullable",
            "description": "Method of delivering the disclosure"
          },
          "disclosure_date": {
            "name": "disclosure_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date disclosure was generated"
          },
          "disclosure_type": {
            "name": "disclosure_type",
            "type": {
              "scalarType": "consumer_lending_disclosure_type"
            },
            "nullable": "nonNullable",
            "description": "Type of Regulation Z disclosure"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored disclosure document"
          },
          "finance_charge": {
            "name": "finance_charge",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Total finance charge disclosed"
          },
          "late_payment_fee": {
            "name": "late_payment_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Late payment fee disclosed"
          },
          "loan_account_id": {
            "name": "loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to loan account if originated"
          },
          "payment_schedule": {
            "name": "payment_schedule",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Summary of payment schedule"
          },
          "prepayment_penalty": {
            "name": "prepayment_penalty",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of prepayment penalty if any"
          },
          "receipt_date": {
            "name": "receipt_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "Date receipt was confirmed"
          },
          "received_by_customer": {
            "name": "received_by_customer",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether receipt confirmed"
          },
          "security_interest": {
            "name": "security_interest",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of security interest"
          },
          "sent_date": {
            "name": "sent_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "Date disclosure was sent to applicant"
          },
          "total_of_payments": {
            "name": "total_of_payments",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Total of payments disclosed"
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who generated disclosure"
          },
          "version": {
            "name": "version",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Version number if multiple disclosures of same type"
          }
        },
        "uniquenessConstraints": {
          "reg_z_disclosures_pkey": [
            "consumer_lending_disclosure_id"
          ]
        },
        "foreignRelations": {
          "reg_z_disclosures_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          },
          "reg_z_disclosures_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "loan_account_id": "consumer_lending_loan_account_id"
            }
          }
        },
        "description": "Stores disclosures required by the Truth in Lending Act (Regulation Z), such as Loan Estimates and Closing Disclosures."
      },
      "consumer_lending_risk_based_pricing_tiers": {
        "schemaName": "consumer_lending",
        "tableName": "risk_based_pricing_tiers",
        "columns": {
          "consumer_lending_loan_product_id": {
            "name": "consumer_lending_loan_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan product"
          },
          "consumer_lending_pricing_tier_id": {
            "name": "consumer_lending_pricing_tier_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for pricing tier"
          },
          "interest_rate_adjustment": {
            "name": "interest_rate_adjustment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Added to base rate"
          },
          "is_active": {
            "name": "is_active",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether tier is currently in use"
          },
          "max_credit_score": {
            "name": "max_credit_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Maximum credit score for this tier"
          },
          "max_dti_ratio": {
            "name": "max_dti_ratio",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Maximum debt-to-income ratio allowed"
          },
          "max_loan_amount": {
            "name": "max_loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Maximum loan amount for this tier"
          },
          "min_credit_score": {
            "name": "min_credit_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Minimum credit score for this tier"
          },
          "min_loan_amount": {
            "name": "min_loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Minimum loan amount for this tier"
          },
          "tier_name": {
            "name": "tier_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "A, B, C, D, etc."
          }
        },
        "uniquenessConstraints": {
          "risk_based_pricing_tiers_pkey": [
            "consumer_lending_pricing_tier_id"
          ]
        },
        "foreignRelations": {
          "risk_based_pricing_tiers_consumer_lending_loan_product_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_products",
            "columnMapping": {
              "consumer_lending_loan_product_id": "consumer_lending_loan_product_id"
            }
          }
        },
        "description": "Defines pricing tiers based on risk factors, such as credit score and debt-to-income ratio, for loan products."
      },
      "consumer_lending_vehicles": {
        "schemaName": "consumer_lending",
        "tableName": "vehicles",
        "columns": {
          "consumer_lending_application_id": {
            "name": "consumer_lending_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan application"
          },
          "dealer_address_id": {
            "name": "dealer_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to enterprise.addresses"
          },
          "dealer_name": {
            "name": "dealer_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of dealership"
          },
          "down_payment": {
            "name": "down_payment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Down payment amount"
          },
          "is_private_sale": {
            "name": "is_private_sale",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether private sale or dealer"
          },
          "make": {
            "name": "make",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Vehicle manufacturer"
          },
          "mileage": {
            "name": "mileage",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Current odometer reading"
          },
          "model": {
            "name": "model",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Vehicle model"
          },
          "purchase_price": {
            "name": "purchase_price",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Agreed purchase price"
          },
          "trade_in_balance_owed": {
            "name": "trade_in_balance_owed",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Loan balance on trade-in"
          },
          "trade_in_value": {
            "name": "trade_in_value",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Value of trade-in vehicle"
          },
          "trim": {
            "name": "trim",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Vehicle trim level"
          },
          "valuation_amount": {
            "name": "valuation_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Third-party valuation amount"
          },
          "valuation_date": {
            "name": "valuation_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date of valuation"
          },
          "valuation_source": {
            "name": "valuation_source",
            "type": {
              "scalarType": "consumer_lending_valuation_source"
            },
            "nullable": "nullable",
            "description": "Source of vehicle valuation"
          },
          "vehicle_id": {
            "name": "vehicle_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for vehicle"
          },
          "vehicle_type": {
            "name": "vehicle_type",
            "type": {
              "scalarType": "consumer_lending_vehicle_condition"
            },
            "nullable": "nonNullable",
            "description": "Condition of the vehicle"
          },
          "vin": {
            "name": "vin",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Vehicle Identification Number"
          },
          "year": {
            "name": "year",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Vehicle model year"
          }
        },
        "uniquenessConstraints": {
          "vehicles_pkey": [
            "vehicle_id"
          ]
        },
        "foreignRelations": {
          "vehicles_consumer_lending_application_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_applications",
            "columnMapping": {
              "consumer_lending_application_id": "consumer_lending_application_id"
            }
          },
          "vehicles_dealer_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "dealer_address_id": "enterprise_address_id"
            }
          }
        },
        "description": "Stores information about vehicles involved in auto loan applications, including details like make, model, and purchase price."
      },
      "credit_cards_ability_to_pay_assessments": {
        "schemaName": "credit_cards",
        "tableName": "ability_to_pay_assessments",
        "columns": {
          "assessment_date": {
            "name": "assessment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date of ability to pay assessment"
          },
          "credit_cards_application_id": {
            "name": "credit_cards_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to applications"
          },
          "credit_cards_assessment_id": {
            "name": "credit_cards_assessment_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each assessment"
          },
          "debt_obligations": {
            "name": "debt_obligations",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Existing debt obligations considered"
          },
          "dti_ratio": {
            "name": "dti_ratio",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Debt-to-income ratio calculated"
          },
          "income_amount": {
            "name": "income_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Income amount used in assessment"
          },
          "income_source": {
            "name": "income_source",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Source of income verification"
          },
          "income_verified": {
            "name": "income_verified",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether income was verified"
          },
          "living_expenses": {
            "name": "living_expenses",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Basic living expenses considered"
          },
          "max_supportable_payment": {
            "name": "max_supportable_payment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Maximum monthly payment calculated as supportable"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional assessment notes"
          },
          "passed_assessment": {
            "name": "passed_assessment",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether applicant passed ability to pay test"
          },
          "performed_by_id": {
            "name": "performed_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who performed assessment"
          }
        },
        "uniquenessConstraints": {
          "ability_to_pay_assessments_pkey": [
            "credit_cards_assessment_id"
          ]
        },
        "foreignRelations": {
          "ability_to_pay_assessments_credit_cards_application_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "applications",
            "columnMapping": {
              "credit_cards_application_id": "credit_cards_application_id"
            }
          },
          "ability_to_pay_assessments_performed_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "performed_by_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Documents ability to pay assessments required by Reg Z"
      },
      "credit_cards_applications": {
        "schemaName": "credit_cards",
        "tableName": "applications",
        "columns": {
          "annual_income": {
            "name": "annual_income",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Applicant's reported annual income"
          },
          "application_channel": {
            "name": "application_channel",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Channel used for application (Online, Branch, Mail, Phone)"
          },
          "application_date": {
            "name": "application_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When application was submitted"
          },
          "approval_expiration_date": {
            "name": "approval_expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when approval expires if not accepted"
          },
          "approved_credit_limit": {
            "name": "approved_credit_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Credit limit approved by issuer"
          },
          "approved_interest_rate": {
            "name": "approved_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Interest rate approved for account"
          },
          "authorized_users_requested": {
            "name": "authorized_users_requested",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of authorized users requested"
          },
          "balance_transfer_requested": {
            "name": "balance_transfer_requested",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether balance transfer was requested"
          },
          "credit_cards_application_id": {
            "name": "credit_cards_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for card application"
          },
          "credit_cards_product_id": {
            "name": "credit_cards_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_products"
          },
          "customer_id": {
            "name": "customer_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to enterprise.accounts"
          },
          "decision_date": {
            "name": "decision_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When decision was made"
          },
          "decision_method": {
            "name": "decision_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Automated or Manual decision"
          },
          "decision_reason": {
            "name": "decision_reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Primary reason for decision"
          },
          "employment_status": {
            "name": "employment_status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Applicant's employment status"
          },
          "housing_payment": {
            "name": "housing_payment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Applicant's monthly housing payment"
          },
          "is_preapproved": {
            "name": "is_preapproved",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether application was pre-approved"
          },
          "is_secured": {
            "name": "is_secured",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether card requires security deposit"
          },
          "offer_code": {
            "name": "offer_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Promotional offer code if applicable"
          },
          "referring_source": {
            "name": "referring_source",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Marketing source or referral"
          },
          "requested_credit_limit": {
            "name": "requested_credit_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Credit limit requested by applicant"
          },
          "security_deposit_amount": {
            "name": "security_deposit_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of security deposit if secured card"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Current status (Pending, Approved, Denied, Canceled)"
          },
          "time_at_current_address_years": {
            "name": "time_at_current_address_years",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Years at current address"
          }
        },
        "uniquenessConstraints": {
          "applications_pkey": [
            "credit_cards_application_id"
          ]
        },
        "foreignRelations": {
          "applications_credit_cards_product_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_products",
            "columnMapping": {
              "credit_cards_product_id": "credit_cards_product_id"
            }
          },
          "applications_customer_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "accounts",
            "columnMapping": {
              "customer_id": "enterprise_account_id"
            }
          }
        },
        "description": "Stores credit card applications and their status"
      },
      "credit_cards_authorized_users": {
        "schemaName": "credit_cards",
        "tableName": "authorized_users",
        "columns": {
          "add_date": {
            "name": "add_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When user was added"
          },
          "credit_cards_authorized_user_id": {
            "name": "credit_cards_authorized_user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each authorized user"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "enterprise_party_id": {
            "name": "enterprise_party_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to parties.party_id"
          },
          "limit_period": {
            "name": "limit_period",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Period for limit (Daily, Monthly, etc.)"
          },
          "relationship": {
            "name": "relationship",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Relationship to primary cardholder"
          },
          "remove_date": {
            "name": "remove_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When user was removed if applicable"
          },
          "spending_limit": {
            "name": "spending_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Custom spending limit if applicable"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Status of authorized user (Active, Removed)"
          }
        },
        "uniquenessConstraints": {
          "authorized_users_pkey": [
            "credit_cards_authorized_user_id"
          ]
        },
        "foreignRelations": {
          "authorized_users_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          },
          "authorized_users_enterprise_party_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "parties",
            "columnMapping": {
              "enterprise_party_id": "enterprise_party_id"
            }
          }
        },
        "description": "Tracks authorized users who can use the account"
      },
      "credit_cards_autopay_settings": {
        "schemaName": "credit_cards",
        "tableName": "autopay_settings",
        "columns": {
          "credit_cards_autopay_id": {
            "name": "credit_cards_autopay_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each autopay setup"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_payment_method_id": {
            "name": "credit_cards_payment_method_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to payment_methods"
          },
          "days_before_due": {
            "name": "days_before_due",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Days before due date if applicable"
          },
          "end_date": {
            "name": "end_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When autopay ends if applicable"
          },
          "fixed_amount": {
            "name": "fixed_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fixed amount if applicable"
          },
          "last_payment_date": {
            "name": "last_payment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date of last autopay payment"
          },
          "next_payment_date": {
            "name": "next_payment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Scheduled date of next payment"
          },
          "payment_day": {
            "name": "payment_day",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "When to pay (Due Date, Days Before Due Date, Specific Day)"
          },
          "payment_option": {
            "name": "payment_option",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "What to pay (Minimum, Statement Balance, Current Balance, Fixed Amount)"
          },
          "specific_day": {
            "name": "specific_day",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Specific day of month if applicable"
          },
          "start_date": {
            "name": "start_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When autopay begins"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Status of autopay (Active, Inactive)"
          }
        },
        "uniquenessConstraints": {
          "autopay_settings_pkey": [
            "credit_cards_autopay_id"
          ]
        },
        "foreignRelations": {
          "autopay_settings_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          },
          "autopay_settings_credit_cards_payment_method_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "payment_methods",
            "columnMapping": {
              "credit_cards_payment_method_id": "credit_cards_payment_method_id"
            }
          }
        },
        "description": "Stores automatic payment settings"
      },
      "credit_cards_balance_transfers": {
        "schemaName": "credit_cards",
        "tableName": "balance_transfers",
        "columns": {
          "account_number": {
            "name": "account_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Account number at other creditor, masked"
          },
          "completion_date": {
            "name": "completion_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When transfer was completed"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_offer_id": {
            "name": "credit_cards_offer_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to promotional_offers if applicable"
          },
          "credit_cards_transaction_id": {
            "name": "credit_cards_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to transactions"
          },
          "credit_cards_transfer_id": {
            "name": "credit_cards_transfer_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each balance transfer"
          },
          "creditor_name": {
            "name": "creditor_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of creditor being paid"
          },
          "current_balance": {
            "name": "current_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Current balance remaining from transfer"
          },
          "fee_amount": {
            "name": "fee_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee charged for transfer"
          },
          "interest_rate": {
            "name": "interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Interest rate applied to transfer"
          },
          "promotion_end_date": {
            "name": "promotion_end_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When promotional rate ends if applicable"
          },
          "promotional_rate": {
            "name": "promotional_rate",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether rate is promotional"
          },
          "request_date": {
            "name": "request_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When transfer was requested"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Status of transfer (Pending, Completed, Rejected)"
          },
          "transfer_amount": {
            "name": "transfer_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount transferred"
          }
        },
        "uniquenessConstraints": {
          "balance_transfers_pkey": [
            "credit_cards_transfer_id"
          ]
        },
        "foreignRelations": {
          "balance_transfers_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          },
          "balance_transfers_credit_cards_offer_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "promotional_offers",
            "columnMapping": {
              "credit_cards_offer_id": "credit_cards_offer_id"
            }
          },
          "balance_transfers_credit_cards_transaction_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "transactions",
            "columnMapping": {
              "credit_cards_transaction_id": "credit_cards_transaction_id"
            }
          }
        },
        "description": "Tracks balance transfers from other creditors"
      },
      "credit_cards_card_accounts": {
        "schemaName": "credit_cards",
        "tableName": "card_accounts",
        "columns": {
          "account_number": {
            "name": "account_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Masked account number"
          },
          "annual_fee_next_charge_date": {
            "name": "annual_fee_next_charge_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Next date annual fee will be charged"
          },
          "available_credit": {
            "name": "available_credit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Current available credit"
          },
          "balance_transfer_interest_rate": {
            "name": "balance_transfer_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Current balance transfer APR"
          },
          "cash_advance_interest_rate": {
            "name": "cash_advance_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Current cash advance APR"
          },
          "cash_advance_limit": {
            "name": "cash_advance_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Limit for cash advances if different"
          },
          "credit_cards_application_id": {
            "name": "credit_cards_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to original application if applicable"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for card account"
          },
          "credit_cards_product_id": {
            "name": "credit_cards_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_products"
          },
          "credit_limit": {
            "name": "credit_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Current approved credit limit"
          },
          "current_balance": {
            "name": "current_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current outstanding balance"
          },
          "customer_id": {
            "name": "customer_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to enterprise.accounts"
          },
          "cycle_cut_day": {
            "name": "cycle_cut_day",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Day of month when billing cycle closes"
          },
          "days_past_due": {
            "name": "days_past_due",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current days past due"
          },
          "enterprise_account_id": {
            "name": "enterprise_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to enterprise.accounts - the main account record"
          },
          "intro_rate_expiration_date": {
            "name": "intro_rate_expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When introductory rate expires"
          },
          "is_secured": {
            "name": "is_secured",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether account is secured"
          },
          "last_payment_amount": {
            "name": "last_payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of last payment received"
          },
          "last_payment_date": {
            "name": "last_payment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date of last payment received"
          },
          "minimum_payment_due": {
            "name": "minimum_payment_due",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Minimum payment due"
          },
          "opened_date": {
            "name": "opened_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When account was opened"
          },
          "overlimit_status": {
            "name": "overlimit_status",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether account is over limit"
          },
          "payment_due_date": {
            "name": "payment_due_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date payment is due"
          },
          "penalty_interest_rate": {
            "name": "penalty_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Current penalty APR if applicable"
          },
          "purchase_interest_rate": {
            "name": "purchase_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Current purchase APR"
          },
          "reward_points_balance": {
            "name": "reward_points_balance",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current reward points/cashback balance"
          },
          "security_deposit_amount": {
            "name": "security_deposit_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of security deposit if secured"
          },
          "statement_balance": {
            "name": "statement_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Balance as of last statement"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Account status (Active, Inactive, Closed, Suspended)"
          },
          "status_update_date_time": {
            "name": "status_update_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the status was last updated"
          },
          "times_past_due_30_days": {
            "name": "times_past_due_30_days",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Count of 30+ day late payments"
          },
          "times_past_due_60_days": {
            "name": "times_past_due_60_days",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Count of 60+ day late payments"
          },
          "times_past_due_90_days": {
            "name": "times_past_due_90_days",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Count of 90+ day late payments"
          }
        },
        "uniquenessConstraints": {
          "card_accounts_account_number_key": [
            "account_number"
          ],
          "card_accounts_pkey": [
            "credit_cards_card_account_id"
          ]
        },
        "foreignRelations": {
          "card_accounts_credit_cards_application_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "applications",
            "columnMapping": {
              "credit_cards_application_id": "credit_cards_application_id"
            }
          },
          "card_accounts_credit_cards_product_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_products",
            "columnMapping": {
              "credit_cards_product_id": "credit_cards_product_id"
            }
          },
          "card_accounts_customer_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "accounts",
            "columnMapping": {
              "customer_id": "enterprise_account_id"
            }
          },
          "card_accounts_enterprise_account_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "accounts",
            "columnMapping": {
              "enterprise_account_id": "enterprise_account_id"
            }
          }
        },
        "description": "Stores credit card accounts and their current status"
      },
      "credit_cards_card_alerts": {
        "schemaName": "credit_cards",
        "tableName": "card_alerts",
        "columns": {
          "alert_type": {
            "name": "alert_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of alert (Payment Due, Payment Posted, Purchase, Credit Limit, Fraud)"
          },
          "contact_info": {
            "name": "contact_info",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Email or phone number for alert"
          },
          "created_date": {
            "name": "created_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When alert was set up"
          },
          "credit_cards_alert_id": {
            "name": "credit_cards_alert_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each alert"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_card_id": {
            "name": "credit_cards_card_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to specific card if applicable"
          },
          "delivery_method": {
            "name": "delivery_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "How alert is delivered (Email, SMS, Push)"
          },
          "is_active": {
            "name": "is_active",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether alert is currently active"
          },
          "modified_date": {
            "name": "modified_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When alert was last modified"
          },
          "threshold_amount": {
            "name": "threshold_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount threshold if applicable"
          }
        },
        "uniquenessConstraints": {
          "card_alerts_pkey": [
            "credit_cards_alert_id"
          ]
        },
        "foreignRelations": {
          "card_alerts_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          },
          "card_alerts_credit_cards_card_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "cards",
            "columnMapping": {
              "credit_cards_card_id": "credit_cards_card_id"
            }
          }
        },
        "description": "Stores customer alert preferences"
      },
      "credit_cards_card_product_features": {
        "schemaName": "credit_cards",
        "tableName": "card_product_features",
        "columns": {
          "credit_cards_feature_id": {
            "name": "credit_cards_feature_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each feature"
          },
          "credit_cards_product_id": {
            "name": "credit_cards_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_products"
          },
          "end_date": {
            "name": "end_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When feature expires if limited time"
          },
          "feature_description": {
            "name": "feature_description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "Detailed description of the feature"
          },
          "feature_name": {
            "name": "feature_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the feature"
          },
          "is_limited_time": {
            "name": "is_limited_time",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether feature is limited-time offer"
          },
          "is_premium": {
            "name": "is_premium",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether this is a premium feature"
          },
          "start_date": {
            "name": "start_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When feature becomes available"
          }
        },
        "uniquenessConstraints": {
          "card_product_features_pkey": [
            "credit_cards_feature_id"
          ]
        },
        "foreignRelations": {
          "card_product_features_credit_cards_product_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_products",
            "columnMapping": {
              "credit_cards_product_id": "credit_cards_product_id"
            }
          }
        },
        "description": "Stores features and benefits associated with card products"
      },
      "credit_cards_card_product_reward_categories": {
        "schemaName": "credit_cards",
        "tableName": "card_product_reward_categories",
        "columns": {
          "cap_amount": {
            "name": "cap_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Spending cap for elevated rewards if applicable"
          },
          "cap_period": {
            "name": "cap_period",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Period for cap (e.g., Monthly, Quarterly, Annually)"
          },
          "category_name": {
            "name": "category_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Category name (e.g., Dining, Travel, Gas)"
          },
          "credit_cards_category_id": {
            "name": "credit_cards_category_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each reward category"
          },
          "credit_cards_product_id": {
            "name": "credit_cards_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_products"
          },
          "end_date": {
            "name": "end_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "End date for category if temporary"
          },
          "is_capped": {
            "name": "is_capped",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether rewards are capped"
          },
          "is_quarterly": {
            "name": "is_quarterly",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether category rotates quarterly"
          },
          "reward_rate": {
            "name": "reward_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Reward rate for this category (e.g., 3% cashback)"
          },
          "start_date": {
            "name": "start_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Start date for category if temporary"
          }
        },
        "uniquenessConstraints": {
          "card_product_reward_categories_pkey": [
            "credit_cards_category_id"
          ]
        },
        "foreignRelations": {
          "card_product_reward_categories_credit_cards_product_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_products",
            "columnMapping": {
              "credit_cards_product_id": "credit_cards_product_id"
            }
          }
        },
        "description": "Defines reward earning categories for card products"
      },
      "credit_cards_card_products": {
        "schemaName": "credit_cards",
        "tableName": "card_products",
        "columns": {
          "annual_fee": {
            "name": "annual_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Annual fee for the card"
          },
          "balance_transfer_fee_min": {
            "name": "balance_transfer_fee_min",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Minimum fee amount for balance transfers"
          },
          "balance_transfer_fee_percent": {
            "name": "balance_transfer_fee_percent",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Percentage fee for balance transfers"
          },
          "balance_transfer_rate": {
            "name": "balance_transfer_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "APR for balance transfers"
          },
          "base_interest_rate": {
            "name": "base_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Standard purchase APR (annual percentage rate)"
          },
          "base_reward_rate": {
            "name": "base_reward_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Base reward earning rate (e.g., 1.5% cashback)"
          },
          "card_network": {
            "name": "card_network",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Card network (Visa, Mastercard, Amex, Discover)"
          },
          "card_tier": {
            "name": "card_tier",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Card tier (Standard, Gold, Platinum, etc.)"
          },
          "card_type": {
            "name": "card_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of card (Debit, Credit, Prepaid, Charge)"
          },
          "cash_advance_fee_min": {
            "name": "cash_advance_fee_min",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Minimum fee amount for cash advances"
          },
          "cash_advance_fee_percent": {
            "name": "cash_advance_fee_percent",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Percentage fee for cash advances"
          },
          "cash_advance_rate": {
            "name": "cash_advance_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "APR for cash advances"
          },
          "credit_cards_product_id": {
            "name": "credit_cards_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each card product"
          },
          "discontinue_date": {
            "name": "discontinue_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when product was discontinued if applicable"
          },
          "foreign_transaction_fee": {
            "name": "foreign_transaction_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee percentage for foreign transactions"
          },
          "grace_period_days": {
            "name": "grace_period_days",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Interest-free grace period in days"
          },
          "image_url": {
            "name": "image_url",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "URL to card image for marketing"
          },
          "intro_rate": {
            "name": "intro_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Introductory APR if offered"
          },
          "intro_rate_period_months": {
            "name": "intro_rate_period_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Duration of introductory rate"
          },
          "is_active": {
            "name": "is_active",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether product is currently offered"
          },
          "is_annual_fee_waived_first_year": {
            "name": "is_annual_fee_waived_first_year",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "Whether annual fee is waived first year"
          },
          "is_secured": {
            "name": "is_secured",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether card requires a security deposit"
          },
          "late_payment_fee": {
            "name": "late_payment_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee charged for late payments"
          },
          "launch_date": {
            "name": "launch_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when product was launched"
          },
          "max_credit_limit": {
            "name": "max_credit_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Maximum credit limit offered"
          },
          "min_credit_limit": {
            "name": "min_credit_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Minimum credit limit offered"
          },
          "min_credit_score": {
            "name": "min_credit_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Minimum credit score typically required"
          },
          "overlimit_fee": {
            "name": "overlimit_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee charged for exceeding credit limit"
          },
          "penalty_rate": {
            "name": "penalty_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Penalty APR applied after late payments"
          },
          "product_code": {
            "name": "product_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Internal code identifying the card product"
          },
          "product_name": {
            "name": "product_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Marketing name of the card product"
          },
          "return_payment_fee": {
            "name": "return_payment_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee charged for returned payments"
          },
          "reward_program": {
            "name": "reward_program",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Description of reward program if any"
          },
          "terms_and_conditions_url": {
            "name": "terms_and_conditions_url",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "URL to terms and conditions document"
          }
        },
        "uniquenessConstraints": {
          "card_products_pkey": [
            "credit_cards_product_id"
          ]
        },
        "foreignRelations": {},
        "description": "Defines credit card products offered by the institution"
      },
      "credit_cards_cards": {
        "schemaName": "credit_cards",
        "tableName": "cards",
        "columns": {
          "activation_date": {
            "name": "activation_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When card was activated"
          },
          "card_design": {
            "name": "card_design",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Design/style of physical card"
          },
          "card_number": {
            "name": "card_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Masked card number (last 4 digits only)"
          },
          "card_status": {
            "name": "card_status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Active, Inactive, Lost, Stolen, Expired, Replaced"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_card_id": {
            "name": "credit_cards_card_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each physical card"
          },
          "digital_wallet_enabled": {
            "name": "digital_wallet_enabled",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether added to digital wallet"
          },
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When card expires"
          },
          "is_virtual": {
            "name": "is_virtual",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether card is virtual only"
          },
          "issue_date": {
            "name": "issue_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When card was issued"
          },
          "pin_set": {
            "name": "pin_set",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether PIN has been set"
          },
          "temporary_limits": {
            "name": "temporary_limits",
            "type": {
              "scalarType": "jsonb"
            },
            "nullable": "nullable",
            "description": "Temporary spending limits if any"
          },
          "temporary_limits_expiry": {
            "name": "temporary_limits_expiry",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When temporary limits expire"
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to parties.party_id of cardholder"
          },
          "user_type": {
            "name": "user_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Primary or Authorized User"
          }
        },
        "uniquenessConstraints": {
          "cards_pkey": [
            "credit_cards_card_id"
          ]
        },
        "foreignRelations": {
          "cards_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          },
          "cards_user_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "parties",
            "columnMapping": {
              "user_id": "enterprise_party_id"
            }
          }
        },
        "description": "Stores information about physical and virtual cards issued for accounts"
      },
      "credit_cards_consumer_complaints": {
        "schemaName": "credit_cards",
        "tableName": "consumer_complaints",
        "columns": {
          "cfpb_case_number": {
            "name": "cfpb_case_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CFPB case number if applicable"
          },
          "complaint_type": {
            "name": "complaint_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of complaint (Billing, Fees, Interest, Customer Service)"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_complaint_id": {
            "name": "credit_cards_complaint_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each complaint"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Detailed description of complaint"
          },
          "issue": {
            "name": "issue",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Specific issue raised"
          },
          "monetary_relief_amount": {
            "name": "monetary_relief_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of monetary relief provided"
          },
          "receipt_date": {
            "name": "receipt_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date complaint was received"
          },
          "regulation_violated": {
            "name": "regulation_violated",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Specific regulation violated if applicable"
          },
          "regulatory_violation_found": {
            "name": "regulatory_violation_found",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether regulatory violation was identified"
          },
          "resolution": {
            "name": "resolution",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of how complaint was resolved"
          },
          "resolution_date": {
            "name": "resolution_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date complaint was resolved"
          },
          "response_sent_date": {
            "name": "response_sent_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date response was sent to consumer"
          },
          "source": {
            "name": "source",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Source of complaint (Direct, CFPB, BBB, Social Media)"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Status of complaint (New, In Progress, Resolved)"
          }
        },
        "uniquenessConstraints": {
          "consumer_complaints_pkey": [
            "credit_cards_complaint_id"
          ]
        },
        "foreignRelations": {
          "consumer_complaints_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          }
        },
        "description": "Tracks customer complaints about credit card accounts"
      },
      "credit_cards_credit_card_applications_hmda": {
        "schemaName": "credit_cards",
        "tableName": "credit_card_applications_hmda",
        "columns": {
          "action_taken": {
            "name": "action_taken",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Final disposition (Approved, Denied, etc.)"
          },
          "action_taken_date": {
            "name": "action_taken_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date of final action"
          },
          "age": {
            "name": "age",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Applicant's age at time of application"
          },
          "credit_cards_application_id": {
            "name": "credit_cards_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to applications"
          },
          "credit_cards_record_id": {
            "name": "credit_cards_record_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each HMDA record"
          },
          "denial_reason1": {
            "name": "denial_reason1",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Primary reason for denial if applicable"
          },
          "denial_reason2": {
            "name": "denial_reason2",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Secondary reason for denial if applicable"
          },
          "ethnicity": {
            "name": "ethnicity",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Applicant's ethnicity per HMDA categories"
          },
          "hoepa_status": {
            "name": "hoepa_status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Whether subject to HOEPA (Yes, No)"
          },
          "income": {
            "name": "income",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Applicant's annual income in thousands"
          },
          "race": {
            "name": "race",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Applicant's race per HMDA categories"
          },
          "rate_spread": {
            "name": "rate_spread",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Difference between APR and average prime offer rate"
          },
          "reporting_year": {
            "name": "reporting_year",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Year for HMDA reporting"
          },
          "sex": {
            "name": "sex",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Applicant's sex per HMDA categories"
          },
          "submission_status": {
            "name": "submission_status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Status of HMDA submission"
          }
        },
        "uniquenessConstraints": {
          "credit_card_applications_hmda_pkey": [
            "credit_cards_record_id"
          ]
        },
        "foreignRelations": {
          "credit_card_applications_hmda_credit_cards_application_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "applications",
            "columnMapping": {
              "credit_cards_application_id": "credit_cards_application_id"
            }
          }
        },
        "description": "Regulatory reporting data for credit card applications under HMDA"
      },
      "credit_cards_credit_limit_changes": {
        "schemaName": "credit_cards",
        "tableName": "credit_limit_changes",
        "columns": {
          "approved_by_id": {
            "name": "approved_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who approved change"
          },
          "change_date": {
            "name": "change_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date of credit limit change"
          },
          "change_reason": {
            "name": "change_reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Reason for limit change"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_change_id": {
            "name": "credit_cards_change_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each limit change"
          },
          "new_limit": {
            "name": "new_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Credit limit after change"
          },
          "previous_limit": {
            "name": "previous_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Credit limit before change"
          },
          "requested_by": {
            "name": "requested_by",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Who requested change (Customer, Bank)"
          }
        },
        "uniquenessConstraints": {
          "credit_limit_changes_pkey": [
            "credit_cards_change_id"
          ]
        },
        "foreignRelations": {
          "credit_limit_changes_approved_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "approved_by_id": "enterprise_associate_id"
            }
          },
          "credit_limit_changes_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          }
        },
        "description": "Tracks history of credit limit changes"
      },
      "credit_cards_disputed_transactions": {
        "schemaName": "credit_cards",
        "tableName": "disputed_transactions",
        "columns": {
          "case_number": {
            "name": "case_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Dispute case identifier"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_dispute_id": {
            "name": "credit_cards_dispute_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each dispute"
          },
          "credit_cards_transaction_id": {
            "name": "credit_cards_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to transactions"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Customer description of dispute"
          },
          "dispute_date": {
            "name": "dispute_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date and time dispute was filed"
          },
          "dispute_reason": {
            "name": "dispute_reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Reason for dispute (Fraud, Product Issue, Duplicate Charge, etc.)"
          },
          "disputed_amount": {
            "name": "disputed_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount being disputed"
          },
          "documentation_received": {
            "name": "documentation_received",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether documentation was received"
          },
          "provisional_credit_amount": {
            "name": "provisional_credit_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of provisional credit"
          },
          "provisional_credit_date": {
            "name": "provisional_credit_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date provisional credit was issued if applicable"
          },
          "resolution": {
            "name": "resolution",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Final resolution (Customer Favor, Merchant Favor)"
          },
          "resolution_date": {
            "name": "resolution_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date dispute was resolved"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Status of dispute (Filed, Processing, Resolved, Declined)"
          }
        },
        "uniquenessConstraints": {
          "disputed_transactions_pkey": [
            "credit_cards_dispute_id"
          ]
        },
        "foreignRelations": {
          "disputed_transactions_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          },
          "disputed_transactions_credit_cards_transaction_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "transactions",
            "columnMapping": {
              "credit_cards_transaction_id": "credit_cards_transaction_id"
            }
          }
        },
        "description": "Tracks disputed transactions and their resolution"
      },
      "credit_cards_fees": {
        "schemaName": "credit_cards",
        "tableName": "fees",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Fee amount"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_fee_id": {
            "name": "credit_cards_fee_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each fee"
          },
          "credit_cards_statement_id": {
            "name": "credit_cards_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to statements if included in statement"
          },
          "credit_cards_transaction_id": {
            "name": "credit_cards_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to transactions if associated with specific transaction"
          },
          "date_assessed": {
            "name": "date_assessed",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date fee was charged"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Description of fee"
          },
          "fee_type": {
            "name": "fee_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of fee (Annual, Late Payment, Cash Advance, Foreign Transaction, etc.)"
          },
          "waived": {
            "name": "waived",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether fee was waived"
          },
          "waiver_reason": {
            "name": "waiver_reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reason fee was waived if applicable"
          }
        },
        "uniquenessConstraints": {
          "fees_pkey": [
            "credit_cards_fee_id"
          ]
        },
        "foreignRelations": {
          "fees_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          },
          "fees_credit_cards_statement_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "statements",
            "columnMapping": {
              "credit_cards_statement_id": "credit_cards_statement_id"
            }
          },
          "fees_credit_cards_transaction_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "transactions",
            "columnMapping": {
              "credit_cards_transaction_id": "credit_cards_transaction_id"
            }
          }
        },
        "description": "Tracks fees charged to card accounts"
      },
      "credit_cards_fraud_cases": {
        "schemaName": "credit_cards",
        "tableName": "fraud_cases",
        "columns": {
          "case_type": {
            "name": "case_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of fraud (Card Fraud, Account Takeover, Application Fraud)"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_card_id": {
            "name": "credit_cards_card_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to specific card if applicable"
          },
          "credit_cards_case_id": {
            "name": "credit_cards_case_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each fraud case"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of fraud incident"
          },
          "investigator_id": {
            "name": "investigator_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User ID of fraud investigator"
          },
          "new_card_issued": {
            "name": "new_card_issued",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether replacement card was issued"
          },
          "police_report_filed": {
            "name": "police_report_filed",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether police report was filed"
          },
          "provisional_credit_issued": {
            "name": "provisional_credit_issued",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether provisional credit was issued"
          },
          "report_date": {
            "name": "report_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date and time fraud was reported"
          },
          "reported_by": {
            "name": "reported_by",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Who reported fraud (Customer, Bank, Merchant)"
          },
          "resolution": {
            "name": "resolution",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Final resolution of case"
          },
          "resolution_date": {
            "name": "resolution_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date case was resolved"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Status of case (Open, Investigation, Closed)"
          },
          "total_disputed_amount": {
            "name": "total_disputed_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Total amount of fraudulent transactions"
          }
        },
        "uniquenessConstraints": {
          "fraud_cases_pkey": [
            "credit_cards_case_id"
          ]
        },
        "foreignRelations": {
          "fraud_cases_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          },
          "fraud_cases_credit_cards_card_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "cards",
            "columnMapping": {
              "credit_cards_card_id": "credit_cards_card_id"
            }
          },
          "fraud_cases_investigator_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "investigator_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Tracks fraud cases related to card accounts"
      },
      "credit_cards_fraud_transactions": {
        "schemaName": "credit_cards",
        "tableName": "fraud_transactions",
        "columns": {
          "credit_cards_case_id": {
            "name": "credit_cards_case_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to fraud_cases"
          },
          "credit_cards_fraud_transaction_id": {
            "name": "credit_cards_fraud_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each linked transaction"
          },
          "credit_cards_transaction_id": {
            "name": "credit_cards_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to transactions"
          },
          "is_confirmed_fraud": {
            "name": "is_confirmed_fraud",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether transaction is confirmed fraudulent"
          }
        },
        "uniquenessConstraints": {
          "fraud_transactions_pkey": [
            "credit_cards_fraud_transaction_id"
          ]
        },
        "foreignRelations": {
          "fraud_transactions_credit_cards_case_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "fraud_cases",
            "columnMapping": {
              "credit_cards_case_id": "credit_cards_case_id"
            }
          },
          "fraud_transactions_credit_cards_transaction_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "transactions",
            "columnMapping": {
              "credit_cards_transaction_id": "credit_cards_transaction_id"
            }
          }
        },
        "description": "Junction table linking fraud cases to specific transactions"
      },
      "credit_cards_interest_charges": {
        "schemaName": "credit_cards",
        "tableName": "interest_charges",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Interest amount charged"
          },
          "balance_subject_to_interest": {
            "name": "balance_subject_to_interest",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Balance amount subject to interest"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_charge_id": {
            "name": "credit_cards_charge_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each interest charge"
          },
          "credit_cards_statement_id": {
            "name": "credit_cards_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to statements"
          },
          "date_assessed": {
            "name": "date_assessed",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date interest was charged"
          },
          "days_in_period": {
            "name": "days_in_period",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Number of days interest was calculated for"
          },
          "interest_rate": {
            "name": "interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Interest rate applied"
          },
          "interest_type": {
            "name": "interest_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of interest (Purchase, Cash Advance, Balance Transfer, Penalty)"
          }
        },
        "uniquenessConstraints": {
          "interest_charges_pkey": [
            "credit_cards_charge_id"
          ]
        },
        "foreignRelations": {
          "interest_charges_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          },
          "interest_charges_credit_cards_statement_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "statements",
            "columnMapping": {
              "credit_cards_statement_id": "credit_cards_statement_id"
            }
          }
        },
        "description": "Tracks interest charges applied to card accounts"
      },
      "credit_cards_payment_methods": {
        "schemaName": "credit_cards",
        "tableName": "payment_methods",
        "columns": {
          "account_number": {
            "name": "account_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Masked account number"
          },
          "account_type": {
            "name": "account_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Checking or Savings if bank account"
          },
          "bank_name": {
            "name": "bank_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the bank if applicable"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_payment_method_id": {
            "name": "credit_cards_payment_method_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each payment method"
          },
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Expiration date if debit card"
          },
          "is_default": {
            "name": "is_default",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether this is the default payment method"
          },
          "nickname": {
            "name": "nickname",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "User-assigned nickname for payment method"
          },
          "payment_type": {
            "name": "payment_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of payment method (Bank Account, Debit Card, Check)"
          },
          "routing_number": {
            "name": "routing_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Routing number if bank account"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Status of payment method (Active, Inactive, Removed)"
          },
          "verification_status": {
            "name": "verification_status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Status of verification (Verified, Pending, Failed)"
          }
        },
        "uniquenessConstraints": {
          "payment_methods_pkey": [
            "credit_cards_payment_method_id"
          ]
        },
        "foreignRelations": {
          "payment_methods_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          }
        },
        "description": "Stores payment methods for card account payments"
      },
      "credit_cards_promotional_offers": {
        "schemaName": "credit_cards",
        "tableName": "promotional_offers",
        "columns": {
          "amount_offered": {
            "name": "amount_offered",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of credit offered if applicable"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_offer_id": {
            "name": "credit_cards_offer_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each offer"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Description of offer"
          },
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date offer expires"
          },
          "fee_percentage": {
            "name": "fee_percentage",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee percentage associated with offer"
          },
          "interest_rate": {
            "name": "interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Interest rate associated with offer"
          },
          "offer_date": {
            "name": "offer_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date offer was made"
          },
          "offer_type": {
            "name": "offer_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of offer (Balance Transfer, Cash Advance, Credit Limit Increase, etc.)"
          },
          "promo_code": {
            "name": "promo_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Promotional code associated with offer"
          },
          "response_date": {
            "name": "response_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date customer responded to offer"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Status of offer (Active, Accepted, Declined, Expired)"
          },
          "terms_and_conditions": {
            "name": "terms_and_conditions",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Terms and conditions of offer"
          }
        },
        "uniquenessConstraints": {
          "promotional_offers_pkey": [
            "credit_cards_offer_id"
          ]
        },
        "foreignRelations": {
          "promotional_offers_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          }
        },
        "description": "Tracks promotional offers made to cardholders"
      },
      "credit_cards_reg_z_credit_card_disclosures": {
        "schemaName": "credit_cards",
        "tableName": "reg_z_credit_card_disclosures",
        "columns": {
          "annual_fee": {
            "name": "annual_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Annual fee disclosed"
          },
          "annual_percentage_rate": {
            "name": "annual_percentage_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "APR disclosed"
          },
          "balance_computation_method": {
            "name": "balance_computation_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Method used to calculate balance"
          },
          "credit_cards_application_id": {
            "name": "credit_cards_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to applications if pre-account opening"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to card_accounts if post-account opening"
          },
          "credit_cards_disclosure_id": {
            "name": "credit_cards_disclosure_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each disclosure"
          },
          "delivery_method": {
            "name": "delivery_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "How disclosure was delivered (Mail, Electronic)"
          },
          "disclosure_date": {
            "name": "disclosure_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date disclosure was generated"
          },
          "disclosure_type": {
            "name": "disclosure_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of Reg Z disclosure (Solicitation, Application, Account-Opening, Periodic Statement)"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored disclosure document"
          },
          "grace_period_disclosure": {
            "name": "grace_period_disclosure",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Grace period disclosure text"
          },
          "late_payment_fee": {
            "name": "late_payment_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Late payment fee disclosed"
          },
          "over_limit_fee": {
            "name": "over_limit_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Over-limit fee disclosed"
          },
          "transaction_fee_balance_transfers": {
            "name": "transaction_fee_balance_transfers",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee for balance transfers"
          },
          "transaction_fee_cash_advance": {
            "name": "transaction_fee_cash_advance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee for cash advances"
          },
          "transaction_fee_purchases": {
            "name": "transaction_fee_purchases",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee for purchases if any"
          },
          "variable_rate_indicator": {
            "name": "variable_rate_indicator",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether rate is variable"
          }
        },
        "uniquenessConstraints": {
          "reg_z_credit_card_disclosures_pkey": [
            "credit_cards_disclosure_id"
          ]
        },
        "foreignRelations": {
          "reg_z_credit_card_disclosures_credit_cards_application_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "applications",
            "columnMapping": {
              "credit_cards_application_id": "credit_cards_application_id"
            }
          },
          "reg_z_credit_card_disclosures_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          }
        },
        "description": "Tracks Truth in Lending Act disclosures required for credit cards"
      },
      "credit_cards_reward_redemptions": {
        "schemaName": "credit_cards",
        "tableName": "reward_redemptions",
        "columns": {
          "cash_value": {
            "name": "cash_value",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Cash value of redemption"
          },
          "confirmation_code": {
            "name": "confirmation_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Confirmation code for redemption"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_redemption_id": {
            "name": "credit_cards_redemption_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each redemption"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Description of redemption"
          },
          "points_redeemed": {
            "name": "points_redeemed",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Number of points redeemed"
          },
          "recipient_email": {
            "name": "recipient_email",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Email for digital items if applicable"
          },
          "redemption_date": {
            "name": "redemption_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date and time of redemption"
          },
          "redemption_type": {
            "name": "redemption_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of redemption (Cashback, Travel, Gift Card, Merchandise, Statement Credit)"
          },
          "shipping_address_id": {
            "name": "shipping_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to addresses if physical item"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Status of redemption (Pending, Completed, Canceled)"
          }
        },
        "uniquenessConstraints": {
          "reward_redemptions_pkey": [
            "credit_cards_redemption_id"
          ]
        },
        "foreignRelations": {
          "reward_redemptions_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          },
          "reward_redemptions_shipping_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "shipping_address_id": "enterprise_address_id"
            }
          }
        },
        "description": "Stores details of reward point redemptions"
      },
      "credit_cards_rewards": {
        "schemaName": "credit_cards",
        "tableName": "rewards",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount of reward earned or redeemed"
          },
          "category": {
            "name": "category",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Category associated with reward if applicable"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_reward_id": {
            "name": "credit_cards_reward_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each reward record"
          },
          "credit_cards_transaction_id": {
            "name": "credit_cards_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to transactions if earned from transaction"
          },
          "date_earned": {
            "name": "date_earned",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date reward was earned or redeemed"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Description of reward activity"
          },
          "event_type": {
            "name": "event_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Earned, Bonus, Redeemed, Expired, Adjusted"
          },
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date reward will expire if applicable"
          },
          "reward_type": {
            "name": "reward_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of reward (Points, Cashback, Miles)"
          }
        },
        "uniquenessConstraints": {
          "rewards_pkey": [
            "credit_cards_reward_id"
          ]
        },
        "foreignRelations": {
          "rewards_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          },
          "rewards_credit_cards_transaction_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "transactions",
            "columnMapping": {
              "credit_cards_transaction_id": "credit_cards_transaction_id"
            }
          }
        },
        "description": "Tracks reward earning and redemption activity"
      },
      "credit_cards_security_blocks": {
        "schemaName": "credit_cards",
        "tableName": "security_blocks",
        "columns": {
          "block_type": {
            "name": "block_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of block (Temporary, Permanent, Geographic)"
          },
          "credit_cards_block_id": {
            "name": "credit_cards_block_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each security block"
          },
          "credit_cards_card_id": {
            "name": "credit_cards_card_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to specific card"
          },
          "end_date": {
            "name": "end_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When block ends if temporary"
          },
          "geographic_restriction": {
            "name": "geographic_restriction",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Geographic area blocked if applicable"
          },
          "reason": {
            "name": "reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Reason for security block"
          },
          "removed_by_id": {
            "name": "removed_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who removed the block"
          },
          "removed_date": {
            "name": "removed_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When block was removed"
          },
          "requested_by": {
            "name": "requested_by",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Who requested the block (Customer, Bank, Fraud System)"
          },
          "start_date": {
            "name": "start_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When block began"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Status of block (Active, Removed)"
          },
          "transaction_type_restricted": {
            "name": "transaction_type_restricted",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Transaction types blocked if specific"
          }
        },
        "uniquenessConstraints": {
          "security_blocks_pkey": [
            "credit_cards_block_id"
          ]
        },
        "foreignRelations": {
          "security_blocks_credit_cards_card_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "cards",
            "columnMapping": {
              "credit_cards_card_id": "credit_cards_card_id"
            }
          },
          "security_blocks_removed_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "removed_by_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Tracks security blocks placed on cards"
      },
      "credit_cards_statements": {
        "schemaName": "credit_cards",
        "tableName": "statements",
        "columns": {
          "balance_transfers": {
            "name": "balance_transfers",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Balance transfers in period"
          },
          "cash_advances": {
            "name": "cash_advances",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Cash advances in period"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_statement_id": {
            "name": "credit_cards_statement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each statement"
          },
          "credits": {
            "name": "credits",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Credits/refunds in period"
          },
          "days_in_billing_cycle": {
            "name": "days_in_billing_cycle",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Number of days in billing cycle"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored statement document"
          },
          "due_date": {
            "name": "due_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Payment due date"
          },
          "ending_balance": {
            "name": "ending_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Ending statement balance"
          },
          "fees": {
            "name": "fees",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Fees charged in period"
          },
          "interest": {
            "name": "interest",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Interest charged in period"
          },
          "minimum_payment": {
            "name": "minimum_payment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Minimum payment due"
          },
          "new_charges": {
            "name": "new_charges",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "New purchases and charges"
          },
          "payment_received": {
            "name": "payment_received",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether payment was received by due date"
          },
          "payment_received_amount": {
            "name": "payment_received_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of payment received"
          },
          "payment_received_date": {
            "name": "payment_received_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date payment was received"
          },
          "payments": {
            "name": "payments",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Payments received in period"
          },
          "previous_balance": {
            "name": "previous_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Balance carried over from previous statement"
          },
          "statement_date": {
            "name": "statement_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date statement was generated"
          },
          "statement_period_end": {
            "name": "statement_period_end",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "End date for statement period"
          },
          "statement_period_start": {
            "name": "statement_period_start",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Start date for statement period"
          }
        },
        "uniquenessConstraints": {
          "statements_pkey": [
            "credit_cards_statement_id"
          ]
        },
        "foreignRelations": {
          "statements_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          }
        },
        "description": "Stores monthly billing statements for card accounts"
      },
      "credit_cards_transactions": {
        "schemaName": "credit_cards",
        "tableName": "transactions",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Transaction amount"
          },
          "auth_code": {
            "name": "auth_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Authorization code"
          },
          "category": {
            "name": "category",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Spending category (e.g., Dining, Travel, Merchandise)"
          },
          "credit_cards_card_account_id": {
            "name": "credit_cards_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to card_accounts"
          },
          "credit_cards_card_id": {
            "name": "credit_cards_card_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to specific card used"
          },
          "credit_cards_transaction_id": {
            "name": "credit_cards_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for transaction"
          },
          "decline_reason": {
            "name": "decline_reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reason for decline if applicable"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Merchant name or transaction description"
          },
          "exchange_rate": {
            "name": "exchange_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Exchange rate used if international"
          },
          "is_billable": {
            "name": "is_billable",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether transaction is included in statement billing"
          },
          "is_international": {
            "name": "is_international",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether transaction is international"
          },
          "is_pending": {
            "name": "is_pending",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether transaction is pending"
          },
          "is_recurring": {
            "name": "is_recurring",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether transaction appears to be recurring"
          },
          "mcc_code": {
            "name": "mcc_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Merchant Category Code"
          },
          "original_amount": {
            "name": "original_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount in original currency if international"
          },
          "original_currency": {
            "name": "original_currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nullable",
            "description": "Original currency if international"
          },
          "post_date": {
            "name": "post_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date transaction posted to account"
          },
          "reference_number": {
            "name": "reference_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Transaction reference number"
          },
          "rewards_earned": {
            "name": "rewards_earned",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Rewards points or cashback earned"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Approved, Declined, Reversed, Disputed"
          },
          "transaction_date": {
            "name": "transaction_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date and time of transaction"
          },
          "transaction_type": {
            "name": "transaction_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Purchase, Cash Advance, Balance Transfer, Payment, Fee, Adjustment"
          }
        },
        "uniquenessConstraints": {
          "transactions_pkey": [
            "credit_cards_transaction_id"
          ]
        },
        "foreignRelations": {
          "transactions_credit_cards_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "credit_cards_card_account_id": "credit_cards_card_account_id"
            }
          },
          "transactions_credit_cards_card_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "cards",
            "columnMapping": {
              "credit_cards_card_id": "credit_cards_card_id"
            }
          },
          "transactions_original_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "original_currency": "code"
            }
          }
        },
        "description": "Stores all transaction activity on card accounts"
      },
      "data_quality_validation_error": {
        "schemaName": "data_quality",
        "tableName": "validation_error",
        "columns": {
          "error_keyword": {
            "name": "error_keyword",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "The specific JSON schema keyword (e.g., type, required, pattern) that triggered the validation failure."
          },
          "error_message": {
            "name": "error_message",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "The human-readable error message generated by the validator."
          },
          "error_params": {
            "name": "error_params",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Parameters associated with the failed validation keyword (e.g., allowed values for enum), stored as a JSON string."
          },
          "error_parent_schema_detail": {
            "name": "error_parent_schema_detail",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "The parent schema object containing the failed rule, stored as a JSON string."
          },
          "error_schema_detail": {
            "name": "error_schema_detail",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "The specific part of the JSON schema definition that failed, stored as a JSON string."
          },
          "failed_data": {
            "name": "failed_data",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "String representation of the actual data value that failed the validation rule."
          },
          "instance_path": {
            "name": "instance_path",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "JSON path within the validated data pointing to the element that failed validation."
          },
          "schema_path": {
            "name": "schema_path",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "JSON path within the validation schema pointing to the rule/keyword that failed."
          },
          "validation_error_id": {
            "name": "validation_error_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for the validation error record."
          },
          "validation_run_id": {
            "name": "validation_run_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Foreign key linking to the specific validation run (validation_run table) where this error occurred."
          }
        },
        "uniquenessConstraints": {
          "PK_5415dd3267a2f610c7e0920f10e": [
            "validation_error_id"
          ]
        },
        "foreignRelations": {
          "FK_bc051ff644730731677602d5a5d": {
            "foreignSchema": "data_quality",
            "foreignTable": "validation_run",
            "columnMapping": {
              "validation_run_id": "validation_run_id"
            }
          }
        },
        "description": "Stores details for a single data quality validation error identified during a validation run."
      },
      "data_quality_validation_run": {
        "schemaName": "data_quality",
        "tableName": "validation_run",
        "columns": {
          "operation_name": {
            "name": "operation_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the specific operation being validated, if applicable."
          },
          "query": {
            "name": "query",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "The query string that was executed and validated."
          },
          "run_role": {
            "name": "run_role",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Role associated with the user who initiated this validation run."
          },
          "run_timestamp": {
            "name": "run_timestamp",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Timestamp indicating when the validation run was executed or recorded."
          },
          "run_user": {
            "name": "run_user",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Identifier of the user who initiated or is associated with this validation run."
          },
          "source_identifier": {
            "name": "source_identifier",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Optional identifier for the source system, file, or event that triggered this validation run."
          },
          "total_errors": {
            "name": "total_errors",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "A summary count of the total number of validation errors found during this run."
          },
          "validation_config_all_errors": {
            "name": "validation_config_all_errors",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Validation configuration flag: Indicates if the 'allErrors' option (ajv) was enabled."
          },
          "validation_config_data": {
            "name": "validation_config_data",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Validation configuration flag: Indicates if the '$data' option (ajv) was enabled."
          },
          "validation_config_strict": {
            "name": "validation_config_strict",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Validation configuration flag: Indicates if the 'strict' option (ajv) was enabled."
          },
          "validation_config_verbose": {
            "name": "validation_config_verbose",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Validation configuration flag: Indicates if the 'verbose' option (ajv) was enabled."
          },
          "validation_run_id": {
            "name": "validation_run_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for the validation run."
          },
          "validation_schema": {
            "name": "validation_schema",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "The JSON schema used to validate the query results, stored as a JSON string."
          },
          "variables": {
            "name": "variables",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Variables passed to the query, stored as a JSON string."
          }
        },
        "uniquenessConstraints": {
          "PK_2a1e12ee6cf299ac99d9dca9b5b": [
            "validation_run_id"
          ]
        },
        "foreignRelations": {},
        "description": "Represents a single execution instance of a data quality validation run, including metadata and links to errors found."
      },
      "enterprise_account_ownership": {
        "schemaName": "enterprise",
        "tableName": "account_ownership",
        "columns": {
          "enterprise_account_id": {
            "name": "enterprise_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the enterprise account being owned. When ownership ends, access to all linked LOB accounts is terminated."
          },
          "enterprise_account_ownership_id": {
            "name": "enterprise_account_ownership_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing, unique identifier for each account ownership record"
          },
          "enterprise_party_id": {
            "name": "enterprise_party_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the party who owns the account. Party must exist before ownership can be established."
          }
        },
        "uniquenessConstraints": {
          "account_ownership_pkey": [
            "enterprise_account_ownership_id"
          ]
        },
        "foreignRelations": {
          "account_ownership_enterprise_account_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "accounts",
            "columnMapping": {
              "enterprise_account_id": "enterprise_account_id"
            }
          },
          "account_ownership_enterprise_party_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "parties",
            "columnMapping": {
              "enterprise_party_id": "enterprise_party_id"
            }
          }
        },
        "description": "The only table that controls account access rights. Creates the mandatory link between parties and accounts. Any query checking account access or ownership must start with this table. No direct relationships exist between parties and other account tables."
      },
      "enterprise_accounts": {
        "schemaName": "enterprise",
        "tableName": "accounts",
        "columns": {
          "account_category": {
            "name": "account_category",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Customer defined category of account (e.g., personal, business, retirement)"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Customer defined description of the account"
          },
          "enterprise_account_id": {
            "name": "enterprise_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each enterprise account"
          },
          "opened_date": {
            "name": "opened_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the enterprise account was created, typically coincides with first LOB account."
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "enterprise_account_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the account. When set to 'CLOSED', all linked LOB accounts must be closed or in a terminal state."
          },
          "status_update_date_time": {
            "name": "status_update_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the status was last updated. Updates here may trigger required status changes in linked LOB accounts."
          }
        },
        "uniquenessConstraints": {
          "accounts_pkey": [
            "enterprise_account_id"
          ]
        },
        "foreignRelations": {},
        "description": "Root account record in the account hierarchy. All other account types (consumer, mortgage, credit) are children of an enterprise account and cannot exist without it. The single source of truth for account ownership and access control."
      },
      "enterprise_addresses": {
        "schemaName": "enterprise",
        "tableName": "addresses",
        "columns": {
          "address_type": {
            "name": "address_type",
            "type": {
              "scalarType": "enterprise_address_type"
            },
            "nullable": "nullable",
            "description": "Type of address (e.g., home, work, mailing)"
          },
          "building_name": {
            "name": "building_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of building if applicable"
          },
          "building_number": {
            "name": "building_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Building or house number"
          },
          "care_of": {
            "name": "care_of",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Person to whose attention mail should be sent"
          },
          "country": {
            "name": "country",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Two-letter country code"
          },
          "country_sub_division": {
            "name": "country_sub_division",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "State, province, or region"
          },
          "department": {
            "name": "department",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Department name for organizational addresses"
          },
          "district_name": {
            "name": "district_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "District or county"
          },
          "enterprise_address_id": {
            "name": "enterprise_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each address record"
          },
          "floor": {
            "name": "floor",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Floor number or description"
          },
          "post_box": {
            "name": "post_box",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Post office box number"
          },
          "post_code": {
            "name": "post_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Postal or zip code"
          },
          "room": {
            "name": "room",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Room identifier if applicable"
          },
          "street_name": {
            "name": "street_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Street name component of the address"
          },
          "sub_department": {
            "name": "sub_department",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Sub-department name for organizational addresses"
          },
          "town_location_name": {
            "name": "town_location_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of area within town"
          },
          "town_name": {
            "name": "town_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "City or town name"
          },
          "unit_number": {
            "name": "unit_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Apartment or unit number"
          }
        },
        "uniquenessConstraints": {
          "addresses_pkey": [
            "enterprise_address_id"
          ]
        },
        "foreignRelations": {},
        "description": "Central repository for address information used across the system"
      },
      "enterprise_associates": {
        "schemaName": "enterprise",
        "tableName": "associates",
        "columns": {
          "city": {
            "name": "city",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Associate's city of residence."
          },
          "country": {
            "name": "country",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Associate's country of residence."
          },
          "email": {
            "name": "email",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Associate's unique email address."
          },
          "enterprise_associate_id": {
            "name": "enterprise_associate_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each associate."
          },
          "enterprise_building_id": {
            "name": "enterprise_building_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Foreign key referencing the building where the associate is primarily located."
          },
          "enterprise_department_id": {
            "name": "enterprise_department_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Foreign key referencing the department the associate belongs to."
          },
          "first_name": {
            "name": "first_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Associate's first name."
          },
          "hire_date": {
            "name": "hire_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date the associate was hired."
          },
          "job_title": {
            "name": "job_title",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Associate's functional job title (e.g., Teller, Loan Officer)."
          },
          "last_name": {
            "name": "last_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Associate's last name."
          },
          "manager_id": {
            "name": "manager_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Foreign key referencing the associate's manager."
          },
          "officer_title": {
            "name": "officer_title",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Associate's formal officer title (e.g., VP, MD), if applicable."
          },
          "phone_number": {
            "name": "phone_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Associate's phone number."
          },
          "post_code": {
            "name": "post_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Associate's postal code."
          },
          "relationship_type": {
            "name": "relationship_type",
            "type": {
              "scalarType": "enterprise_relationship_status"
            },
            "nullable": "nullable",
            "description": "Type of relationship with the company."
          },
          "release_date": {
            "name": "release_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date the associate was released from employment, if applicable."
          },
          "salary": {
            "name": "salary",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Associate's annual salary."
          },
          "state": {
            "name": "state",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Associate's state of residence."
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "enterprise_associate_status"
            },
            "nullable": "nullable",
            "description": "Current status of the associate."
          },
          "street_address": {
            "name": "street_address",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Associate's street address."
          }
        },
        "uniquenessConstraints": {
          "associates_email_key": [
            "email"
          ],
          "associates_pkey": [
            "enterprise_associate_id"
          ]
        },
        "foreignRelations": {
          "associates_enterprise_building_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "buildings",
            "columnMapping": {
              "enterprise_building_id": "enterprise_building_id"
            }
          },
          "associates_enterprise_department_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "departments",
            "columnMapping": {
              "enterprise_department_id": "enterprise_department_id"
            }
          },
          "associates_manager_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "manager_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Stores information about employees, contractors, or other individuals associated with the enterprise."
      },
      "enterprise_buildings": {
        "schemaName": "enterprise",
        "tableName": "buildings",
        "columns": {
          "building_name": {
            "name": "building_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the building."
          },
          "building_type": {
            "name": "building_type",
            "type": {
              "scalarType": "enterprise_building_type"
            },
            "nullable": "nonNullable",
            "description": "Type of building classified by primary function."
          },
          "close_date": {
            "name": "close_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date the building was closed, if applicable."
          },
          "enterprise_address_id": {
            "name": "enterprise_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Address of the building"
          },
          "enterprise_building_id": {
            "name": "enterprise_building_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each building."
          },
          "open_date": {
            "name": "open_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date the building was opened."
          },
          "phone_number": {
            "name": "phone_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Phone number of the building."
          }
        },
        "uniquenessConstraints": {
          "buildings_pkey": [
            "enterprise_building_id"
          ]
        },
        "foreignRelations": {
          "buildings_enterprise_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "enterprise_address_id": "enterprise_address_id"
            }
          }
        },
        "description": "Stores information about the physical buildings used by the enterprise, including branches and other facilities."
      },
      "enterprise_currency": {
        "schemaName": "enterprise",
        "tableName": "currency",
        "columns": {
          "code": {
            "name": "code",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "currency_pkey": [
            "code"
          ]
        },
        "foreignRelations": {},
        "description": null
      },
      "enterprise_departments": {
        "schemaName": "enterprise",
        "tableName": "departments",
        "columns": {
          "department_name": {
            "name": "department_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the department."
          },
          "enterprise_department_id": {
            "name": "enterprise_department_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each department."
          },
          "location": {
            "name": "location",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Physical location of the department."
          },
          "operating_unit": {
            "name": "operating_unit",
            "type": {
              "scalarType": "enterprise_operating_unit"
            },
            "nullable": "nullable",
            "description": "This department is managed under this operating unit."
          }
        },
        "uniquenessConstraints": {
          "departments_department_name_key": [
            "department_name"
          ],
          "departments_pkey": [
            "enterprise_department_id"
          ]
        },
        "foreignRelations": {},
        "description": "Stores information about the various departments within the enterprise."
      },
      "enterprise_identifiers": {
        "schemaName": "enterprise",
        "tableName": "identifiers",
        "columns": {
          "enterprise_identifier_id": {
            "name": "enterprise_identifier_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each identifier entry in the registry"
          },
          "identification": {
            "name": "identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Actual identifier value such as a BIC code or national ID"
          },
          "lei": {
            "name": "lei",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Optional Legal Entity Identifier if known"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Optional display name for this identifier (e.g., institution name)"
          },
          "note": {
            "name": "note",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Free-form notes or metadata about this identifier"
          },
          "scheme_name": {
            "name": "scheme_name",
            "type": {
              "scalarType": "enterprise_identifier_scheme"
            },
            "nullable": "nonNullable",
            "description": "Type of identifier (e.g., BIC, IBAN, SSN, LEI, etc.)"
          },
          "secondary_identification": {
            "name": "secondary_identification",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Additional identifier component if applicable (e.g., sub-ID)"
          }
        },
        "uniquenessConstraints": {
          "identifiers_pkey": [
            "enterprise_identifier_id"
          ]
        },
        "foreignRelations": {},
        "description": "Registry of identifiers applicable to accounts, individuals, or institutions — referenced by business-line accounts"
      },
      "enterprise_parties": {
        "schemaName": "enterprise",
        "tableName": "parties",
        "columns": {
          "beneficial_ownership": {
            "name": "beneficial_ownership",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Indicates if this party has beneficial ownership"
          },
          "citizenship_status": {
            "name": "citizenship_status",
            "type": {
              "scalarType": "enterprise_citizenship_status"
            },
            "nullable": "nullable",
            "description": "Citizenship or residency status (for individuals)"
          },
          "date_of_birth": {
            "name": "date_of_birth",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Party's date of birth (for individuals)"
          },
          "email_address": {
            "name": "email_address",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Primary email contact"
          },
          "enterprise_party_id": {
            "name": "enterprise_party_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each party"
          },
          "full_business_legal_name": {
            "name": "full_business_legal_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Complete legal name for business entities"
          },
          "legal_structure": {
            "name": "legal_structure",
            "type": {
              "scalarType": "enterprise_legal_structure"
            },
            "nullable": "nullable",
            "description": "Legal structure of the organization"
          },
          "lei": {
            "name": "lei",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Legal Entity Identifier for organizations"
          },
          "marital_status": {
            "name": "marital_status",
            "type": {
              "scalarType": "enterprise_marital_status"
            },
            "nullable": "nullable",
            "description": "Marital status (for individuals)"
          },
          "mobile": {
            "name": "mobile",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Mobile phone contact"
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the party"
          },
          "party_number": {
            "name": "party_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Alternative reference number for the party"
          },
          "party_status": {
            "name": "party_status",
            "type": {
              "scalarType": "enterprise_party_status"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current status of the party"
          },
          "party_type": {
            "name": "party_type",
            "type": {
              "scalarType": "enterprise_party_type"
            },
            "nullable": "nonNullable",
            "description": "Type of party (individual or organization)"
          },
          "phone": {
            "name": "phone",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Primary phone contact"
          },
          "ssn": {
            "name": "ssn",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Social Security Number (for US individuals)"
          }
        },
        "uniquenessConstraints": {
          "parties_pkey": [
            "enterprise_party_id"
          ]
        },
        "foreignRelations": {},
        "description": "Stores information about individuals and organizations that interact with accounts, now with additional common personal attributes for individuals"
      },
      "enterprise_party_entity_addresses": {
        "schemaName": "enterprise",
        "tableName": "party_entity_addresses",
        "columns": {
          "enterprise_address_id": {
            "name": "enterprise_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the entity address"
          },
          "enterprise_party_entity_address_id": {
            "name": "enterprise_party_entity_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for party-entity address association"
          },
          "enterprise_party_id": {
            "name": "enterprise_party_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the party"
          },
          "relationship_type": {
            "name": "relationship_type",
            "type": {
              "scalarType": "enterprise_address_relationship_type"
            },
            "nullable": "nullable",
            "description": "Type of relationship between the party and the address"
          }
        },
        "uniquenessConstraints": {
          "party_entity_addresses_pkey": [
            "enterprise_party_entity_address_id"
          ]
        },
        "foreignRelations": {
          "party_entity_addresses_enterprise_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "enterprise_address_id": "enterprise_address_id"
            }
          },
          "party_entity_addresses_enterprise_party_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "parties",
            "columnMapping": {
              "enterprise_party_id": "enterprise_party_id"
            }
          }
        },
        "description": "Links parties to entity addresses with a defined relationship"
      },
      "enterprise_party_relationships": {
        "schemaName": "enterprise",
        "tableName": "party_relationships",
        "columns": {
          "enterprise_party_id": {
            "name": "enterprise_party_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the to the party being represented or acted upon"
          },
          "enterprise_party_relationship_id": {
            "name": "enterprise_party_relationship_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each relationship record"
          },
          "priority": {
            "name": "priority",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Order of precedence for the relationship type (lower number = higher priority)"
          },
          "related_party_id": {
            "name": "related_party_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the party taking the role e.g. power of attorney, guardian, etc."
          },
          "relationship_type": {
            "name": "relationship_type",
            "type": {
              "scalarType": "enterprise_party_relationship_type"
            },
            "nullable": "nullable",
            "description": "Describes the role of the related party relative to the enterprise party"
          }
        },
        "uniquenessConstraints": {
          "party_relationships_pkey": [
            "enterprise_party_relationship_id"
          ]
        },
        "foreignRelations": {
          "party_relationships_enterprise_party_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "parties",
            "columnMapping": {
              "enterprise_party_id": "enterprise_party_id"
            }
          },
          "party_relationships_related_party_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "parties",
            "columnMapping": {
              "related_party_id": "enterprise_party_id"
            }
          }
        },
        "description": "Defines the role of related party acts to the the enterprise party, such as power of attorney, beneficiary designations, etc."
      },
      "enterprise_permissions": {
        "schemaName": "enterprise",
        "tableName": "permissions",
        "columns": {
          "enterprise_permission_id": {
            "name": "enterprise_permission_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each permission"
          },
          "permission_name": {
            "name": "permission_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Unique name describing the permission (e.g., read_balances)"
          }
        },
        "uniquenessConstraints": {
          "permissions_pkey": [
            "enterprise_permission_id"
          ]
        },
        "foreignRelations": {},
        "description": "Defines all possible permission types that can be granted in the system"
      },
      "mortgage_services_application_borrowers": {
        "schemaName": "mortgage_services",
        "tableName": "application_borrowers",
        "columns": {
          "borrower_type": {
            "name": "borrower_type",
            "type": {
              "scalarType": "mortgage_services_borrower_type"
            },
            "nullable": "nonNullable",
            "description": "Role of this borrower (Primary, Co-Borrower, etc.)"
          },
          "contribution_percentage": {
            "name": "contribution_percentage",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Percentage of financial contribution to the loan"
          },
          "mortgage_services_application_borrower_id": {
            "name": "mortgage_services_application_borrower_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each application-borrower relationship"
          },
          "mortgage_services_application_id": {
            "name": "mortgage_services_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the mortgage application"
          },
          "mortgage_services_borrower_id": {
            "name": "mortgage_services_borrower_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the borrower associated with this application"
          },
          "relationship_to_primary": {
            "name": "relationship_to_primary",
            "type": {
              "scalarType": "mortgage_services_relationship_type"
            },
            "nullable": "nullable",
            "description": "Relationship of co-borrower to primary borrower"
          }
        },
        "uniquenessConstraints": {
          "application_borrowers_pkey": [
            "mortgage_services_application_borrower_id",
            "mortgage_services_application_id"
          ]
        },
        "foreignRelations": {
          "application_borrowers_mortgage_services_application_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "applications",
            "columnMapping": {
              "mortgage_services_application_id": "mortgage_services_application_id"
            }
          },
          "application_borrowers_mortgage_services_borrower_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "borrowers",
            "columnMapping": {
              "mortgage_services_borrower_id": "mortgage_services_borrower_id"
            }
          }
        },
        "description": "Junction table linking mortgage applications to borrowers, supporting multiple borrowers per application and tracking their roles and relationships"
      },
      "mortgage_services_applications": {
        "schemaName": "mortgage_services",
        "tableName": "applications",
        "columns": {
          "application_type": {
            "name": "application_type",
            "type": {
              "scalarType": "mortgage_services_application_type"
            },
            "nullable": "nonNullable",
            "description": "Type of mortgage application"
          },
          "branch_id": {
            "name": "branch_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References the branch processing the application"
          },
          "creation_date_time": {
            "name": "creation_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the application was created"
          },
          "estimated_credit_score": {
            "name": "estimated_credit_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Estimated credit score of primary applicant"
          },
          "estimated_property_value": {
            "name": "estimated_property_value",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Estimated value of the property"
          },
          "last_updated_date_time": {
            "name": "last_updated_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the application was last modified"
          },
          "loan_officer_id": {
            "name": "loan_officer_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References the loan officer handling the application"
          },
          "loan_purpose": {
            "name": "loan_purpose",
            "type": {
              "scalarType": "mortgage_services_loan_purpose"
            },
            "nullable": "nullable",
            "description": "Purpose of the loan"
          },
          "mortgage_services_application_id": {
            "name": "mortgage_services_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each mortgage application"
          },
          "mortgage_services_loan_product_id": {
            "name": "mortgage_services_loan_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the loan product being applied for"
          },
          "referral_source": {
            "name": "referral_source",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "How the applicant learned about the mortgage product"
          },
          "requested_loan_amount": {
            "name": "requested_loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount of financing requested"
          },
          "requested_loan_term_months": {
            "name": "requested_loan_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Requested duration of the loan in months"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_application_status"
            },
            "nullable": "nonNullable",
            "description": "Current status in the application workflow"
          },
          "submission_channel": {
            "name": "submission_channel",
            "type": {
              "scalarType": "mortgage_services_submission_channel"
            },
            "nullable": "nullable",
            "description": "Channel through which application was submitted"
          },
          "submission_date_time": {
            "name": "submission_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the application was formally submitted"
          }
        },
        "uniquenessConstraints": {
          "applications_pkey": [
            "mortgage_services_application_id"
          ]
        },
        "foreignRelations": {
          "applications_branch_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "buildings",
            "columnMapping": {
              "branch_id": "enterprise_building_id"
            }
          },
          "applications_loan_officer_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "loan_officer_id": "enterprise_associate_id"
            }
          },
          "applications_mortgage_services_loan_product_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "loan_products",
            "columnMapping": {
              "mortgage_services_loan_product_id": "mortgage_services_loan_product_id"
            }
          }
        },
        "description": "Stores mortgage application details and tracks application status. Note that the primary borrower is accessible through the application_borrowers table, not directly from this table."
      },
      "mortgage_services_appraisals": {
        "schemaName": "mortgage_services",
        "tableName": "appraisals",
        "columns": {
          "appraisal_company": {
            "name": "appraisal_company",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Company performing the appraisal"
          },
          "appraisal_fee": {
            "name": "appraisal_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee charged for the appraisal"
          },
          "appraisal_type": {
            "name": "appraisal_type",
            "type": {
              "scalarType": "mortgage_services_appraisal_type"
            },
            "nullable": "nonNullable",
            "description": "Type of appraisal being performed"
          },
          "appraised_value": {
            "name": "appraised_value",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Value determined by the appraisal"
          },
          "appraiser_name": {
            "name": "appraiser_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the assigned appraiser"
          },
          "completion_date": {
            "name": "completion_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When the appraisal was completed"
          },
          "inspection_date": {
            "name": "inspection_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When the property was inspected"
          },
          "mortgage_services_application_id": {
            "name": "mortgage_services_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the application this appraisal is for"
          },
          "mortgage_services_appraisal_id": {
            "name": "mortgage_services_appraisal_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each appraisal"
          },
          "mortgage_services_property_id": {
            "name": "mortgage_services_property_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the property being appraised"
          },
          "ordered_date": {
            "name": "ordered_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the appraisal was ordered"
          },
          "report_path": {
            "name": "report_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Storage location of the appraisal report"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_appraisal_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the appraisal process"
          }
        },
        "uniquenessConstraints": {
          "appraisals_pkey": [
            "mortgage_services_appraisal_id"
          ]
        },
        "foreignRelations": {
          "appraisals_mortgage_services_application_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "applications",
            "columnMapping": {
              "mortgage_services_application_id": "mortgage_services_application_id"
            }
          },
          "appraisals_mortgage_services_property_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "properties",
            "columnMapping": {
              "mortgage_services_property_id": "mortgage_services_property_id"
            }
          }
        },
        "description": "Manages property appraisals for mortgage loans"
      },
      "mortgage_services_borrower_assets": {
        "schemaName": "mortgage_services",
        "tableName": "borrower_assets",
        "columns": {
          "account_number": {
            "name": "account_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Account number for financial assets"
          },
          "asset_type": {
            "name": "asset_type",
            "type": {
              "scalarType": "mortgage_services_asset_type"
            },
            "nullable": "nonNullable",
            "description": "Type of asset (e.g., bank account, property)"
          },
          "current_value": {
            "name": "current_value",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Current estimated value of the asset"
          },
          "institution_name": {
            "name": "institution_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Financial institution holding the asset"
          },
          "mortgage_services_asset_id": {
            "name": "mortgage_services_asset_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each asset record"
          },
          "mortgage_services_borrower_id": {
            "name": "mortgage_services_borrower_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the borrower this asset belongs to"
          },
          "property_address": {
            "name": "property_address",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Full text address for real estate assets"
          },
          "verification_date": {
            "name": "verification_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When the asset was verified"
          },
          "verification_status": {
            "name": "verification_status",
            "type": {
              "scalarType": "mortgage_services_verification_status"
            },
            "nullable": "nonNullable",
            "description": "Status of asset verification process"
          }
        },
        "uniquenessConstraints": {
          "borrower_assets_pkey": [
            "mortgage_services_asset_id"
          ]
        },
        "foreignRelations": {
          "borrower_assets_mortgage_services_borrower_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "borrowers",
            "columnMapping": {
              "mortgage_services_borrower_id": "mortgage_services_borrower_id"
            }
          }
        },
        "description": "Tracks assets owned by borrowers that may be relevant to mortgage qualification"
      },
      "mortgage_services_borrower_employments": {
        "schemaName": "mortgage_services",
        "tableName": "borrower_employments",
        "columns": {
          "employer_name": {
            "name": "employer_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the employer"
          },
          "employment_type": {
            "name": "employment_type",
            "type": {
              "scalarType": "mortgage_services_employment_type"
            },
            "nullable": "nonNullable",
            "description": "Type of employment arrangement"
          },
          "end_date": {
            "name": "end_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When employment ended, if applicable"
          },
          "is_current": {
            "name": "is_current",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Indicates if this is the borrower's current job"
          },
          "monthly_income": {
            "name": "monthly_income",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Gross monthly income from this employment"
          },
          "mortgage_services_borrower_id": {
            "name": "mortgage_services_borrower_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the borrower this employment belongs to"
          },
          "mortgage_services_employment_id": {
            "name": "mortgage_services_employment_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each employment record"
          },
          "phone": {
            "name": "phone",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Employer's phone number"
          },
          "position": {
            "name": "position",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Job title or position"
          },
          "start_date": {
            "name": "start_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When employment began"
          },
          "verification_date": {
            "name": "verification_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When the income was verified"
          },
          "verification_status": {
            "name": "verification_status",
            "type": {
              "scalarType": "mortgage_services_verification_status"
            },
            "nullable": "nonNullable",
            "description": "Status of income verification process"
          },
          "years_in_profession": {
            "name": "years_in_profession",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Total years in this profession, even at different employers"
          }
        },
        "uniquenessConstraints": {
          "borrower_employments_pkey": [
            "mortgage_services_employment_id"
          ]
        },
        "foreignRelations": {
          "borrower_employments_mortgage_services_borrower_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "borrowers",
            "columnMapping": {
              "mortgage_services_borrower_id": "mortgage_services_borrower_id"
            }
          }
        },
        "description": "Tracks employment history and income sources for mortgage borrowers"
      },
      "mortgage_services_borrower_incomes": {
        "schemaName": "mortgage_services",
        "tableName": "borrower_incomes",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Income amount"
          },
          "frequency": {
            "name": "frequency",
            "type": {
              "scalarType": "mortgage_services_income_frequency"
            },
            "nullable": "nonNullable",
            "description": "How often income is received"
          },
          "income_type": {
            "name": "income_type",
            "type": {
              "scalarType": "mortgage_services_income_type"
            },
            "nullable": "nonNullable",
            "description": "Source or type of income"
          },
          "mortgage_services_borrower_id": {
            "name": "mortgage_services_borrower_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the borrower this income belongs to"
          },
          "mortgage_services_income_id": {
            "name": "mortgage_services_income_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each income record"
          },
          "verification_date": {
            "name": "verification_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When the income was verified"
          },
          "verification_status": {
            "name": "verification_status",
            "type": {
              "scalarType": "mortgage_services_verification_status"
            },
            "nullable": "nonNullable",
            "description": "Status of income verification process"
          }
        },
        "uniquenessConstraints": {
          "borrower_incomes_pkey": [
            "mortgage_services_income_id"
          ]
        },
        "foreignRelations": {
          "borrower_incomes_mortgage_services_borrower_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "borrowers",
            "columnMapping": {
              "mortgage_services_borrower_id": "mortgage_services_borrower_id"
            }
          }
        },
        "description": "Tracks various income sources for mortgage borrowers beyond employment"
      },
      "mortgage_services_borrower_liabilities": {
        "schemaName": "mortgage_services",
        "tableName": "borrower_liabilities",
        "columns": {
          "account_number": {
            "name": "account_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Account number for the liability"
          },
          "creditor_name": {
            "name": "creditor_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of creditor"
          },
          "current_balance": {
            "name": "current_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Current outstanding balance"
          },
          "interest_rate": {
            "name": "interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Current interest rate on the liability"
          },
          "liability_type": {
            "name": "liability_type",
            "type": {
              "scalarType": "mortgage_services_liability_type"
            },
            "nullable": "nonNullable",
            "description": "Type of debt or obligation"
          },
          "maturity_date": {
            "name": "maturity_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When the liability is scheduled to be fully paid"
          },
          "monthly_payment": {
            "name": "monthly_payment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Regular monthly payment amount"
          },
          "mortgage_services_borrower_id": {
            "name": "mortgage_services_borrower_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the borrower this liability belongs to"
          },
          "mortgage_services_liability_id": {
            "name": "mortgage_services_liability_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each liability record"
          },
          "original_amount": {
            "name": "original_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Original amount of the liability"
          },
          "origination_date": {
            "name": "origination_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When the liability was originated"
          },
          "verification_date": {
            "name": "verification_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When the liability was verified"
          },
          "verification_status": {
            "name": "verification_status",
            "type": {
              "scalarType": "mortgage_services_verification_status"
            },
            "nullable": "nonNullable",
            "description": "Status of liability verification process"
          },
          "will_be_paid_off": {
            "name": "will_be_paid_off",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether this liability will be paid off with the mortgage proceeds"
          }
        },
        "uniquenessConstraints": {
          "borrower_liabilities_pkey": [
            "mortgage_services_liability_id"
          ]
        },
        "foreignRelations": {
          "borrower_liabilities_mortgage_services_borrower_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "borrowers",
            "columnMapping": {
              "mortgage_services_borrower_id": "mortgage_services_borrower_id"
            }
          }
        },
        "description": "Tracks debts and financial obligations of mortgage borrowers"
      },
      "mortgage_services_borrowers": {
        "schemaName": "mortgage_services",
        "tableName": "borrowers",
        "columns": {
          "current_address_id": {
            "name": "current_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References borrower's current address"
          },
          "dependent_count": {
            "name": "dependent_count",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of dependents claimed by borrower"
          },
          "enterprise_party_id": {
            "name": "enterprise_party_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to enterprise party record - the source of truth for personal information"
          },
          "mailing_address_id": {
            "name": "mailing_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References borrower's mailing address if different"
          },
          "mortgage_services_borrower_id": {
            "name": "mortgage_services_borrower_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each borrower"
          },
          "previous_address_id": {
            "name": "previous_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References borrower's previous address if relevant"
          },
          "years_in_school": {
            "name": "years_in_school",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Total years of education"
          }
        },
        "uniquenessConstraints": {
          "borrowers_pkey": [
            "mortgage_services_borrower_id"
          ]
        },
        "foreignRelations": {
          "borrowers_current_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "current_address_id": "enterprise_address_id"
            }
          },
          "borrowers_enterprise_party_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "parties",
            "columnMapping": {
              "enterprise_party_id": "enterprise_party_id"
            }
          },
          "borrowers_mailing_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "mailing_address_id": "enterprise_address_id"
            }
          },
          "borrowers_previous_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "previous_address_id": "enterprise_address_id"
            }
          }
        },
        "description": "Stores mortgage-specific information about borrowers, note additional personal information stored in the enterprise parties table"
      },
      "mortgage_services_closed_loans": {
        "schemaName": "mortgage_services",
        "tableName": "closed_loans",
        "columns": {
          "closing_date": {
            "name": "closing_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When loan documents were signed"
          },
          "disbursement_date": {
            "name": "disbursement_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When funds were disbursed to relevant parties"
          },
          "final_cash_to_close": {
            "name": "final_cash_to_close",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Final amount borrower paid at closing"
          },
          "final_interest_rate": {
            "name": "final_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Final interest rate of the loan"
          },
          "final_loan_amount": {
            "name": "final_loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Final principal amount of the loan"
          },
          "final_monthly_payment": {
            "name": "final_monthly_payment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Final principal and interest payment"
          },
          "first_payment_date": {
            "name": "first_payment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When first loan payment is due"
          },
          "funding_date": {
            "name": "funding_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When loan funds were disbursed"
          },
          "maturity_date": {
            "name": "maturity_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When loan is scheduled to be fully paid off"
          },
          "mortgage_services_closed_loan_id": {
            "name": "mortgage_services_closed_loan_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each closed loan record"
          },
          "mortgage_services_loan_id": {
            "name": "mortgage_services_loan_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the loan that was closed"
          },
          "recording_date": {
            "name": "recording_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When mortgage was recorded with government office"
          },
          "settlement_agent": {
            "name": "settlement_agent",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the settlement agent"
          },
          "settlement_company": {
            "name": "settlement_company",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Company handling the settlement"
          }
        },
        "uniquenessConstraints": {
          "closed_loans_pkey": [
            "mortgage_services_closed_loan_id"
          ]
        },
        "foreignRelations": {
          "closed_loans_mortgage_services_loan_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "loans",
            "columnMapping": {
              "mortgage_services_loan_id": "mortgage_services_loan_id"
            }
          }
        },
        "description": "Records final details of closed mortgage loans"
      },
      "mortgage_services_closing_appointments": {
        "schemaName": "mortgage_services",
        "tableName": "closing_appointments",
        "columns": {
          "actual_closing_date": {
            "name": "actual_closing_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the closing actually occurred"
          },
          "closing_agent": {
            "name": "closing_agent",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the closing agent"
          },
          "closing_company": {
            "name": "closing_company",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Company handling the closing"
          },
          "closing_fee": {
            "name": "closing_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee charged for closing services"
          },
          "closing_type": {
            "name": "closing_type",
            "type": {
              "scalarType": "mortgage_services_closing_type"
            },
            "nullable": "nonNullable",
            "description": "Type of closing process being used"
          },
          "location_address_id": {
            "name": "location_address_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References the address where closing will occur"
          },
          "mortgage_services_appointment_id": {
            "name": "mortgage_services_appointment_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each appointment"
          },
          "mortgage_services_loan_id": {
            "name": "mortgage_services_loan_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the loan this closing is for"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional information about the closing"
          },
          "scheduled_date": {
            "name": "scheduled_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the closing is scheduled"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_appointment_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the closing appointment"
          }
        },
        "uniquenessConstraints": {
          "closing_appointments_pkey": [
            "mortgage_services_appointment_id"
          ]
        },
        "foreignRelations": {
          "closing_appointments_location_address_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "addresses",
            "columnMapping": {
              "location_address_id": "enterprise_address_id"
            }
          },
          "closing_appointments_mortgage_services_loan_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "loans",
            "columnMapping": {
              "mortgage_services_loan_id": "mortgage_services_loan_id"
            }
          }
        },
        "description": "Schedules and tracks mortgage closing appointments"
      },
      "mortgage_services_closing_disclosures": {
        "schemaName": "mortgage_services",
        "tableName": "closing_disclosures",
        "columns": {
          "cash_to_close": {
            "name": "cash_to_close",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Cash to close shown on disclosure"
          },
          "created_date": {
            "name": "created_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the disclosure was created"
          },
          "delivery_method": {
            "name": "delivery_method",
            "type": {
              "scalarType": "mortgage_services_delivery_method"
            },
            "nullable": "nonNullable",
            "description": "How disclosure was delivered"
          },
          "disclosure_type": {
            "name": "disclosure_type",
            "type": {
              "scalarType": "mortgage_services_disclosure_type"
            },
            "nullable": "nonNullable",
            "description": "Type of disclosure document"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Storage location of the disclosure document"
          },
          "interest_rate": {
            "name": "interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Interest rate shown on disclosure"
          },
          "loan_amount": {
            "name": "loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Loan amount shown on disclosure"
          },
          "monthly_payment": {
            "name": "monthly_payment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Monthly payment shown on disclosure"
          },
          "mortgage_services_disclosure_id": {
            "name": "mortgage_services_disclosure_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each disclosure"
          },
          "mortgage_services_loan_id": {
            "name": "mortgage_services_loan_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the loan this disclosure is for"
          },
          "received_date": {
            "name": "received_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When signed disclosure was received back"
          },
          "sent_date": {
            "name": "sent_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the disclosure was sent to borrowers"
          },
          "total_closing_costs": {
            "name": "total_closing_costs",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Total closing costs shown on disclosure"
          }
        },
        "uniquenessConstraints": {
          "closing_disclosures_pkey": [
            "mortgage_services_disclosure_id"
          ]
        },
        "foreignRelations": {
          "closing_disclosures_mortgage_services_loan_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "loans",
            "columnMapping": {
              "mortgage_services_loan_id": "mortgage_services_loan_id"
            }
          }
        },
        "description": "Manages closing disclosure documents required by regulations"
      },
      "mortgage_services_conditions": {
        "schemaName": "mortgage_services",
        "tableName": "conditions",
        "columns": {
          "cleared_by_id": {
            "name": "cleared_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References the staff member who cleared the condition"
          },
          "cleared_date": {
            "name": "cleared_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the condition was satisfied or waived"
          },
          "condition_type": {
            "name": "condition_type",
            "type": {
              "scalarType": "mortgage_services_condition_type"
            },
            "nullable": "nonNullable",
            "description": "When the condition must be satisfied"
          },
          "created_by_id": {
            "name": "created_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the staff member who created the condition"
          },
          "created_date": {
            "name": "created_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the condition was created"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "Detailed explanation of what must be provided or resolved"
          },
          "due_date": {
            "name": "due_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Deadline for satisfying the condition"
          },
          "mortgage_services_application_id": {
            "name": "mortgage_services_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the application this condition applies to"
          },
          "mortgage_services_condition_id": {
            "name": "mortgage_services_condition_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each condition"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_condition_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the condition"
          }
        },
        "uniquenessConstraints": {
          "conditions_pkey": [
            "mortgage_services_condition_id"
          ]
        },
        "foreignRelations": {
          "conditions_cleared_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "cleared_by_id": "enterprise_associate_id"
            }
          },
          "conditions_created_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "created_by_id": "enterprise_associate_id"
            }
          },
          "conditions_mortgage_services_application_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "applications",
            "columnMapping": {
              "mortgage_services_application_id": "mortgage_services_application_id"
            }
          }
        },
        "description": "Tracks underwriting conditions that must be cleared for loan approval"
      },
      "mortgage_services_credit_reports": {
        "schemaName": "mortgage_services",
        "tableName": "credit_reports",
        "columns": {
          "bureau_name": {
            "name": "bureau_name",
            "type": {
              "scalarType": "mortgage_services_credit_bureau"
            },
            "nullable": "nullable",
            "description": "Credit bureau providing the report"
          },
          "credit_score": {
            "name": "credit_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Credit score from the report"
          },
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When credit report expires"
          },
          "mortgage_services_application_id": {
            "name": "mortgage_services_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to applications"
          },
          "mortgage_services_borrower_id": {
            "name": "mortgage_services_borrower_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to borrower this credit report is for"
          },
          "mortgage_services_credit_report_id": {
            "name": "mortgage_services_credit_report_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each credit report"
          },
          "report_date": {
            "name": "report_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When credit report was pulled"
          },
          "report_path": {
            "name": "report_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored credit report"
          },
          "report_type": {
            "name": "report_type",
            "type": {
              "scalarType": "mortgage_services_credit_report_type"
            },
            "nullable": "nonNullable",
            "description": "Type of credit report pulled"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_verification_status"
            },
            "nullable": "nonNullable",
            "description": "Status of credit report retrieval"
          }
        },
        "uniquenessConstraints": {
          "credit_reports_pkey": [
            "mortgage_services_credit_report_id"
          ]
        },
        "foreignRelations": {
          "credit_reports_mortgage_services_application_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "applications",
            "columnMapping": {
              "mortgage_services_application_id": "mortgage_services_application_id"
            }
          },
          "credit_reports_mortgage_services_borrower_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "borrowers",
            "columnMapping": {
              "mortgage_services_borrower_id": "mortgage_services_borrower_id"
            }
          }
        },
        "description": "Tracks credit reports pulled for mortgage applications"
      },
      "mortgage_services_customer_communications": {
        "schemaName": "mortgage_services",
        "tableName": "customer_communications",
        "columns": {
          "communication_date": {
            "name": "communication_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the communication occurred"
          },
          "communication_type": {
            "name": "communication_type",
            "type": {
              "scalarType": "mortgage_services_communication_type"
            },
            "nullable": "nonNullable",
            "description": "Method of communication"
          },
          "content": {
            "name": "content",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Content of the communication"
          },
          "direction": {
            "name": "direction",
            "type": {
              "scalarType": "mortgage_services_communication_direction"
            },
            "nullable": "nonNullable",
            "description": "Whether communication was incoming or outgoing"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Storage location for communication document if applicable"
          },
          "mortgage_services_application_id": {
            "name": "mortgage_services_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References the application if communication is about application"
          },
          "mortgage_services_communication_id": {
            "name": "mortgage_services_communication_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each communication record"
          },
          "mortgage_services_servicing_account_id": {
            "name": "mortgage_services_servicing_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References the servicing account if communication is about servicing"
          },
          "recipient": {
            "name": "recipient",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Person or entity that received the communication"
          },
          "related_to": {
            "name": "related_to",
            "type": {
              "scalarType": "mortgage_services_communication_purpose"
            },
            "nullable": "nullable",
            "description": "Purpose or context of the communication"
          },
          "sender": {
            "name": "sender",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Person or system that sent the communication"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_communication_status"
            },
            "nullable": "nonNullable",
            "description": "Delivery status of the communication"
          },
          "subject": {
            "name": "subject",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Subject or topic of communication"
          },
          "template_id": {
            "name": "template_id",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Template used for the communication if applicable"
          }
        },
        "uniquenessConstraints": {
          "customer_communications_pkey": [
            "mortgage_services_communication_id"
          ]
        },
        "foreignRelations": {
          "customer_communications_mortgage_services_application_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "applications",
            "columnMapping": {
              "mortgage_services_application_id": "mortgage_services_application_id"
            }
          },
          "customer_communications_mortgage_services_servicing_accoun_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "servicing_accounts",
            "columnMapping": {
              "mortgage_services_servicing_account_id": "mortgage_services_servicing_account_id"
            }
          }
        },
        "description": "Tracks all communications with customers throughout application and servicing"
      },
      "mortgage_services_documents": {
        "schemaName": "mortgage_services",
        "tableName": "documents",
        "columns": {
          "document_name": {
            "name": "document_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Filename or display name of the document"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Storage location or path to access the document"
          },
          "document_type": {
            "name": "document_type",
            "type": {
              "scalarType": "mortgage_services_document_type"
            },
            "nullable": "nonNullable",
            "description": "Category of document (e.g., W2, Tax Return)"
          },
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When the document expires or needs to be updated"
          },
          "mortgage_services_application_id": {
            "name": "mortgage_services_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the application this document belongs to"
          },
          "mortgage_services_document_id": {
            "name": "mortgage_services_document_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each document"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional information about the document"
          },
          "review_date": {
            "name": "review_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the document was reviewed"
          },
          "reviewer_id": {
            "name": "reviewer_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References the staff member who reviewed the document"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_document_status"
            },
            "nullable": "nonNullable",
            "description": "Current review status of the document"
          },
          "upload_date": {
            "name": "upload_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the document was uploaded"
          }
        },
        "uniquenessConstraints": {
          "documents_pkey": [
            "mortgage_services_document_id"
          ]
        },
        "foreignRelations": {
          "documents_mortgage_services_application_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "applications",
            "columnMapping": {
              "mortgage_services_application_id": "mortgage_services_application_id"
            }
          },
          "documents_reviewer_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "reviewer_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Stores and tracks documents submitted for mortgage applications"
      },
      "mortgage_services_escrow_analyses": {
        "schemaName": "mortgage_services",
        "tableName": "escrow_analyses",
        "columns": {
          "analysis_date": {
            "name": "analysis_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When the analysis was performed"
          },
          "customer_notification_date": {
            "name": "customer_notification_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When the customer was notified of the analysis results"
          },
          "effective_date": {
            "name": "effective_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When the analysis results take effect"
          },
          "escrow_shortage": {
            "name": "escrow_shortage",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount by which the escrow account is short"
          },
          "escrow_surplus": {
            "name": "escrow_surplus",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount by which the escrow account exceeds requirements"
          },
          "mortgage_services_analysis_id": {
            "name": "mortgage_services_analysis_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each analysis"
          },
          "mortgage_services_servicing_account_id": {
            "name": "mortgage_services_servicing_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the servicing account being analyzed"
          },
          "new_monthly_escrow": {
            "name": "new_monthly_escrow",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "New monthly escrow payment amount"
          },
          "previous_monthly_escrow": {
            "name": "previous_monthly_escrow",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Previous monthly escrow payment amount"
          },
          "shortage_spread_months": {
            "name": "shortage_spread_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of months to spread shortage payment"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_escrow_analysis_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the analysis"
          },
          "surplus_refund_amount": {
            "name": "surplus_refund_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of surplus to be refunded"
          }
        },
        "uniquenessConstraints": {
          "escrow_analyses_pkey": [
            "mortgage_services_analysis_id"
          ]
        },
        "foreignRelations": {
          "escrow_analyses_mortgage_services_servicing_account_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "servicing_accounts",
            "columnMapping": {
              "mortgage_services_servicing_account_id": "mortgage_services_servicing_account_id"
            }
          }
        },
        "description": "Records periodic analyses of escrow accounts to determine payment adjustments"
      },
      "mortgage_services_escrow_disbursements": {
        "schemaName": "mortgage_services",
        "tableName": "escrow_disbursements",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount of the disbursement"
          },
          "check_number": {
            "name": "check_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Check number for paper disbursements"
          },
          "coverage_end_date": {
            "name": "coverage_end_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "End of coverage period (for insurance payments)"
          },
          "coverage_start_date": {
            "name": "coverage_start_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Start of coverage period (for insurance payments)"
          },
          "disbursement_date": {
            "name": "disbursement_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "When the disbursement was made"
          },
          "disbursement_type": {
            "name": "disbursement_type",
            "type": {
              "scalarType": "mortgage_services_disbursement_type"
            },
            "nullable": "nonNullable",
            "description": "Type of disbursement (e.g., Property Tax, Insurance, PMI)"
          },
          "due_date": {
            "name": "due_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When the payment was due"
          },
          "mortgage_services_disbursement_id": {
            "name": "mortgage_services_disbursement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each disbursement"
          },
          "mortgage_services_servicing_account_id": {
            "name": "mortgage_services_servicing_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the servicing account for this disbursement"
          },
          "payee_account_number": {
            "name": "payee_account_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Account number for electronic payments"
          },
          "payee_name": {
            "name": "payee_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Entity receiving the disbursement"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_disbursement_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the disbursement"
          }
        },
        "uniquenessConstraints": {
          "escrow_disbursements_pkey": [
            "mortgage_services_disbursement_id"
          ]
        },
        "foreignRelations": {
          "escrow_disbursements_mortgage_services_servicing_account_i_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "servicing_accounts",
            "columnMapping": {
              "mortgage_services_servicing_account_id": "mortgage_services_servicing_account_id"
            }
          }
        },
        "description": "Tracks payments made from escrow accounts for taxes, insurance, etc."
      },
      "mortgage_services_hmda_applicant_demographics": {
        "schemaName": "mortgage_services",
        "tableName": "hmda_applicant_demographics",
        "columns": {
          "age": {
            "name": "age",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Applicant's age in years"
          },
          "age_group": {
            "name": "age_group",
            "type": {
              "scalarType": "mortgage_services_hmda_age_group"
            },
            "nullable": "nullable",
            "description": "Applicant's age group for reporting"
          },
          "applicant_present": {
            "name": "applicant_present",
            "type": {
              "scalarType": "mortgage_services_hmda_applicant_present"
            },
            "nullable": "nullable",
            "description": "Whether applicant was present during application"
          },
          "applicant_type": {
            "name": "applicant_type",
            "type": {
              "scalarType": "mortgage_services_hmda_applicant_type"
            },
            "nullable": "nonNullable",
            "description": "Indicates if record is for primary applicant or co-applicant"
          },
          "created_date": {
            "name": "created_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "When the demographic record was created"
          },
          "debt_to_income_ratio": {
            "name": "debt_to_income_ratio",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Applicant's debt-to-income ratio percentage"
          },
          "ethnicity_1": {
            "name": "ethnicity_1",
            "type": {
              "scalarType": "mortgage_services_hmda_ethnicity"
            },
            "nullable": "nullable",
            "description": "Primary ethnicity selection"
          },
          "ethnicity_2": {
            "name": "ethnicity_2",
            "type": {
              "scalarType": "mortgage_services_hmda_ethnicity_detail"
            },
            "nullable": "nullable",
            "description": "Secondary ethnicity selection if applicable"
          },
          "ethnicity_3": {
            "name": "ethnicity_3",
            "type": {
              "scalarType": "mortgage_services_hmda_ethnicity_detail"
            },
            "nullable": "nullable",
            "description": "Additional ethnicity selection if applicable"
          },
          "ethnicity_4": {
            "name": "ethnicity_4",
            "type": {
              "scalarType": "mortgage_services_hmda_ethnicity_detail"
            },
            "nullable": "nullable",
            "description": "Additional ethnicity selection if applicable"
          },
          "ethnicity_5": {
            "name": "ethnicity_5",
            "type": {
              "scalarType": "mortgage_services_hmda_ethnicity_detail"
            },
            "nullable": "nullable",
            "description": "Additional ethnicity selection if applicable"
          },
          "ethnicity_free_form": {
            "name": "ethnicity_free_form",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Free-form text description of ethnicity"
          },
          "ethnicity_observed": {
            "name": "ethnicity_observed",
            "type": {
              "scalarType": "mortgage_services_hmda_collection_method"
            },
            "nullable": "nullable",
            "description": "How ethnicity was determined if not provided by applicant"
          },
          "income": {
            "name": "income",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Applicant's annual income in thousands of dollars"
          },
          "modified_date": {
            "name": "modified_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the demographic record was last modified"
          },
          "mortgage_services_applicant_demographics_id": {
            "name": "mortgage_services_applicant_demographics_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each demographics record"
          },
          "mortgage_services_hmda_record_id": {
            "name": "mortgage_services_hmda_record_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the associated HMDA record"
          },
          "race_1": {
            "name": "race_1",
            "type": {
              "scalarType": "mortgage_services_hmda_race"
            },
            "nullable": "nullable",
            "description": "Primary race selection"
          },
          "race_2": {
            "name": "race_2",
            "type": {
              "scalarType": "mortgage_services_hmda_race"
            },
            "nullable": "nullable",
            "description": "Secondary race selection if applicable"
          },
          "race_3": {
            "name": "race_3",
            "type": {
              "scalarType": "mortgage_services_hmda_race"
            },
            "nullable": "nullable",
            "description": "Additional race selection if applicable"
          },
          "race_4": {
            "name": "race_4",
            "type": {
              "scalarType": "mortgage_services_hmda_race"
            },
            "nullable": "nullable",
            "description": "Additional race selection if applicable"
          },
          "race_5": {
            "name": "race_5",
            "type": {
              "scalarType": "mortgage_services_hmda_race"
            },
            "nullable": "nullable",
            "description": "Additional race selection if applicable"
          },
          "race_detail_1": {
            "name": "race_detail_1",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Race detail for race_1 if applicable"
          },
          "race_detail_2": {
            "name": "race_detail_2",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Race detail for race_2 if applicable"
          },
          "race_detail_3": {
            "name": "race_detail_3",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Race detail for race_3 if applicable"
          },
          "race_detail_4": {
            "name": "race_detail_4",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Race detail for race_4 if applicable"
          },
          "race_detail_5": {
            "name": "race_detail_5",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Race detail for race_5 if applicable"
          },
          "race_free_form": {
            "name": "race_free_form",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Free-form text description of race"
          },
          "race_observed": {
            "name": "race_observed",
            "type": {
              "scalarType": "mortgage_services_hmda_collection_method"
            },
            "nullable": "nullable",
            "description": "How race was determined if not provided by applicant"
          },
          "sex": {
            "name": "sex",
            "type": {
              "scalarType": "mortgage_services_hmda_sex"
            },
            "nullable": "nullable",
            "description": "Applicant's reported sex"
          },
          "sex_observed": {
            "name": "sex_observed",
            "type": {
              "scalarType": "mortgage_services_hmda_collection_method"
            },
            "nullable": "nullable",
            "description": "How sex was determined if not provided by applicant"
          }
        },
        "uniquenessConstraints": {
          "hmda_applicant_demographics_pkey": [
            "mortgage_services_applicant_demographics_id"
          ]
        },
        "foreignRelations": {
          "hmda_applicant_demographics_mortgage_services_hmda_record__fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "hmda_records",
            "columnMapping": {
              "mortgage_services_hmda_record_id": "mortgage_services_hmda_record_id"
            }
          }
        },
        "description": "Stores demographic information about applicants for HMDA reporting"
      },
      "mortgage_services_hmda_edits": {
        "schemaName": "mortgage_services",
        "tableName": "hmda_edits",
        "columns": {
          "created_date": {
            "name": "created_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the edit was first identified"
          },
          "edit_code": {
            "name": "edit_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Standardized code identifying the specific edit rule"
          },
          "edit_description": {
            "name": "edit_description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "Description of the edit issue"
          },
          "edit_type": {
            "name": "edit_type",
            "type": {
              "scalarType": "mortgage_services_hmda_edit_type"
            },
            "nullable": "nonNullable",
            "description": "Category of edit (SYNTACTICAL, VALIDITY, QUALITY, MACRO)"
          },
          "mortgage_services_edit_id": {
            "name": "mortgage_services_edit_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each edit finding"
          },
          "mortgage_services_hmda_record_id": {
            "name": "mortgage_services_hmda_record_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the HMDA record with the edit issue"
          },
          "resolution_notes": {
            "name": "resolution_notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Notes explaining how the edit was resolved"
          },
          "resolved_by_id": {
            "name": "resolved_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who resolved the edit"
          },
          "resolved_date": {
            "name": "resolved_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the edit was resolved if applicable"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_hmda_edit_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the edit (OPEN, VERIFIED, CORRECTED)"
          }
        },
        "uniquenessConstraints": {
          "hmda_edits_pkey": [
            "mortgage_services_edit_id"
          ]
        },
        "foreignRelations": {
          "hmda_edits_mortgage_services_hmda_record_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "hmda_records",
            "columnMapping": {
              "mortgage_services_hmda_record_id": "mortgage_services_hmda_record_id"
            }
          },
          "hmda_edits_resolved_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "resolved_by_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Tracks validation issues with HMDA data and their resolution"
      },
      "mortgage_services_hmda_records": {
        "schemaName": "mortgage_services",
        "tableName": "hmda_records",
        "columns": {
          "action_taken": {
            "name": "action_taken",
            "type": {
              "scalarType": "mortgage_services_hmda_action_taken"
            },
            "nullable": "nonNullable",
            "description": "Code indicating final disposition"
          },
          "action_taken_date": {
            "name": "action_taken_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date of final action"
          },
          "aus1": {
            "name": "aus1",
            "type": {
              "scalarType": "mortgage_services_hmda_aus"
            },
            "nullable": "nullable",
            "description": "Primary automated underwriting system used"
          },
          "aus2": {
            "name": "aus2",
            "type": {
              "scalarType": "mortgage_services_hmda_aus"
            },
            "nullable": "nullable",
            "description": "Secondary automated underwriting system used if applicable"
          },
          "aus3": {
            "name": "aus3",
            "type": {
              "scalarType": "mortgage_services_hmda_aus"
            },
            "nullable": "nullable",
            "description": "Additional automated underwriting system if applicable"
          },
          "aus4": {
            "name": "aus4",
            "type": {
              "scalarType": "mortgage_services_hmda_aus"
            },
            "nullable": "nullable",
            "description": "Additional automated underwriting system if applicable"
          },
          "aus5": {
            "name": "aus5",
            "type": {
              "scalarType": "mortgage_services_hmda_aus"
            },
            "nullable": "nullable",
            "description": "Additional automated underwriting system if applicable"
          },
          "balloon_payment": {
            "name": "balloon_payment",
            "type": {
              "scalarType": "mortgage_services_hmda_balloon_payment"
            },
            "nullable": "nullable",
            "description": "Whether loan has balloon payment feature"
          },
          "business_or_commercial_purpose": {
            "name": "business_or_commercial_purpose",
            "type": {
              "scalarType": "mortgage_services_hmda_business_or_commercial_purpose"
            },
            "nullable": "nullable",
            "description": "Whether loan is for business purpose"
          },
          "census_tract": {
            "name": "census_tract",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Census tract for property location"
          },
          "construction_method": {
            "name": "construction_method",
            "type": {
              "scalarType": "mortgage_services_hmda_construction_method"
            },
            "nullable": "nonNullable",
            "description": "Code indicating construction method"
          },
          "county": {
            "name": "county",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "County code for property location"
          },
          "credit_score_applicant": {
            "name": "credit_score_applicant",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Credit score of primary applicant"
          },
          "credit_score_co_applicant": {
            "name": "credit_score_co_applicant",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Credit score of co-applicant if applicable"
          },
          "credit_score_model": {
            "name": "credit_score_model",
            "type": {
              "scalarType": "mortgage_services_hmda_credit_score_model"
            },
            "nullable": "nullable",
            "description": "Code indicating credit scoring model used"
          },
          "denial_reason1": {
            "name": "denial_reason1",
            "type": {
              "scalarType": "mortgage_services_hmda_denial_reason"
            },
            "nullable": "nullable",
            "description": "Primary reason for denial if applicable"
          },
          "denial_reason2": {
            "name": "denial_reason2",
            "type": {
              "scalarType": "mortgage_services_hmda_denial_reason"
            },
            "nullable": "nullable",
            "description": "Secondary reason for denial if applicable"
          },
          "denial_reason3": {
            "name": "denial_reason3",
            "type": {
              "scalarType": "mortgage_services_hmda_denial_reason"
            },
            "nullable": "nullable",
            "description": "Additional reason for denial if applicable"
          },
          "denial_reason4": {
            "name": "denial_reason4",
            "type": {
              "scalarType": "mortgage_services_hmda_denial_reason"
            },
            "nullable": "nullable",
            "description": "Additional reason for denial if applicable"
          },
          "discount_points": {
            "name": "discount_points",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Discount points paid by borrower"
          },
          "edit_status": {
            "name": "edit_status",
            "type": {
              "scalarType": "mortgage_services_hmda_record_edit_status"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Status of edit checks for this record"
          },
          "hoepa_status": {
            "name": "hoepa_status",
            "type": {
              "scalarType": "mortgage_services_hmda_hoepa_status"
            },
            "nullable": "nonNullable",
            "description": "Code indicating if loan is subject to HOEPA"
          },
          "initially_payable_to_institution": {
            "name": "initially_payable_to_institution",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether loan was initially payable to reporting institution"
          },
          "interest_only_payment": {
            "name": "interest_only_payment",
            "type": {
              "scalarType": "mortgage_services_hmda_interest_only"
            },
            "nullable": "nullable",
            "description": "Whether loan has interest-only payments"
          },
          "intro_rate_period": {
            "name": "intro_rate_period",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Months until first rate adjustment for ARMs"
          },
          "last_modified_date": {
            "name": "last_modified_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When record was last modified"
          },
          "last_submission_date": {
            "name": "last_submission_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When record was last submitted to regulators"
          },
          "lei": {
            "name": "lei",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Legal Entity Identifier of the reporting institution"
          },
          "lender_credits": {
            "name": "lender_credits",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Credits provided by lender"
          },
          "lien_status": {
            "name": "lien_status",
            "type": {
              "scalarType": "mortgage_services_hmda_lien_status"
            },
            "nullable": "nonNullable",
            "description": "Code indicating lien position"
          },
          "loan_amount": {
            "name": "loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount of the loan or application"
          },
          "loan_purpose": {
            "name": "loan_purpose",
            "type": {
              "scalarType": "mortgage_services_hmda_loan_purpose"
            },
            "nullable": "nonNullable",
            "description": "Code indicating loan purpose"
          },
          "loan_term": {
            "name": "loan_term",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Term of the loan in months"
          },
          "manufactured_home_land_property_interest": {
            "name": "manufactured_home_land_property_interest",
            "type": {
              "scalarType": "mortgage_services_hmda_manufactured_land_property_interest"
            },
            "nullable": "nullable",
            "description": "Code for land ownership with manufactured home"
          },
          "manufactured_home_secured_property_type": {
            "name": "manufactured_home_secured_property_type",
            "type": {
              "scalarType": "mortgage_services_hmda_manufactured_home_type"
            },
            "nullable": "nullable",
            "description": "Code for manufactured home property type"
          },
          "mortgage_services_application_id": {
            "name": "mortgage_services_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the associated mortgage application"
          },
          "mortgage_services_hmda_record_id": {
            "name": "mortgage_services_hmda_record_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each HMDA record"
          },
          "mortgage_services_loan_id": {
            "name": "mortgage_services_loan_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "References the associated loan if originated"
          },
          "mortgage_services_loan_product_id": {
            "name": "mortgage_services_loan_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Type of mortgage loan product"
          },
          "multifamily_affordable_units": {
            "name": "multifamily_affordable_units",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of income-restricted units in multifamily property"
          },
          "negative_amortization": {
            "name": "negative_amortization",
            "type": {
              "scalarType": "mortgage_services_hmda_negative_amortization"
            },
            "nullable": "nullable",
            "description": "Whether loan allows negative amortization"
          },
          "occupancy_type": {
            "name": "occupancy_type",
            "type": {
              "scalarType": "mortgage_services_hmda_occupancy_type"
            },
            "nullable": "nonNullable",
            "description": "Code indicating intended property use"
          },
          "open_end_line_of_credit": {
            "name": "open_end_line_of_credit",
            "type": {
              "scalarType": "mortgage_services_hmda_open_end_line_of_credit"
            },
            "nullable": "nullable",
            "description": "Whether loan is an open-end line of credit"
          },
          "origination_charges": {
            "name": "origination_charges",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Total origination charges"
          },
          "other_non_amortizing_features": {
            "name": "other_non_amortizing_features",
            "type": {
              "scalarType": "mortgage_services_hmda_other_non_amortizing"
            },
            "nullable": "nullable",
            "description": "Whether loan has other non-amortizing features"
          },
          "preapproval": {
            "name": "preapproval",
            "type": {
              "scalarType": "mortgage_services_hmda_preapproval"
            },
            "nullable": "nonNullable",
            "description": "Code indicating if preapproval was requested"
          },
          "property_value": {
            "name": "property_value",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Value of the property securing the loan"
          },
          "rate_spread": {
            "name": "rate_spread",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Difference between APR and average prime offer rate"
          },
          "reporting_year": {
            "name": "reporting_year",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Calendar year for HMDA reporting"
          },
          "reverse_mortgage": {
            "name": "reverse_mortgage",
            "type": {
              "scalarType": "mortgage_services_hmda_reverse_mortgage"
            },
            "nullable": "nullable",
            "description": "Whether loan is a reverse mortgage"
          },
          "state": {
            "name": "state",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Two-letter state code for property location"
          },
          "submission_of_application": {
            "name": "submission_of_application",
            "type": {
              "scalarType": "mortgage_services_hmda_submission_method"
            },
            "nullable": "nullable",
            "description": "How application was submitted"
          },
          "submission_status": {
            "name": "submission_status",
            "type": {
              "scalarType": "mortgage_services_hmda_submission_status"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Status of HMDA submission for this record"
          },
          "total_loan_costs": {
            "name": "total_loan_costs",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Total loan costs as disclosed"
          },
          "total_points_and_fees": {
            "name": "total_points_and_fees",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Total points and fees charged"
          },
          "total_units": {
            "name": "total_units",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Number of dwelling units in the property"
          }
        },
        "uniquenessConstraints": {
          "hmda_records_pkey": [
            "mortgage_services_hmda_record_id"
          ]
        },
        "foreignRelations": {
          "hmda_records_mortgage_services_application_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "applications",
            "columnMapping": {
              "mortgage_services_application_id": "mortgage_services_application_id"
            }
          },
          "hmda_records_mortgage_services_loan_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "loans",
            "columnMapping": {
              "mortgage_services_loan_id": "mortgage_services_loan_id"
            }
          },
          "hmda_records_mortgage_services_loan_product_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "loan_products",
            "columnMapping": {
              "mortgage_services_loan_product_id": "mortgage_services_loan_product_id"
            }
          }
        },
        "description": "Stores data required for Home Mortgage Disclosure Act (HMDA) regulatory reporting"
      },
      "mortgage_services_hmda_submissions": {
        "schemaName": "mortgage_services",
        "tableName": "hmda_submissions",
        "columns": {
          "completion_date": {
            "name": "completion_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the submission was accepted as complete"
          },
          "confirmation_number": {
            "name": "confirmation_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Confirmation number provided by the regulatory agency"
          },
          "error_count": {
            "name": "error_count",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of errors found in the submission"
          },
          "file_name": {
            "name": "file_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the submitted file"
          },
          "file_size": {
            "name": "file_size",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Size of the submitted file in bytes"
          },
          "institution_lei": {
            "name": "institution_lei",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Legal Entity Identifier of the reporting institution"
          },
          "mortgage_services_submission_id": {
            "name": "mortgage_services_submission_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each submission"
          },
          "record_count": {
            "name": "record_count",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of records in the submission"
          },
          "reporting_period": {
            "name": "reporting_period",
            "type": {
              "scalarType": "mortgage_services_reporting_period"
            },
            "nullable": "nonNullable",
            "description": "Reporting period (ANNUAL, QUARTERLY_Q1, etc.)"
          },
          "reporting_year": {
            "name": "reporting_year",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Calendar year for this submission"
          },
          "submission_date": {
            "name": "submission_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the submission was made"
          },
          "submission_notes": {
            "name": "submission_notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional notes about the submission"
          },
          "submission_status": {
            "name": "submission_status",
            "type": {
              "scalarType": "mortgage_services_submission_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the submission process"
          },
          "submitted_by_id": {
            "name": "submitted_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who made the submission"
          },
          "warning_count": {
            "name": "warning_count",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of warnings found in the submission"
          }
        },
        "uniquenessConstraints": {
          "hmda_submissions_pkey": [
            "mortgage_services_submission_id"
          ]
        },
        "foreignRelations": {
          "hmda_submissions_submitted_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "submitted_by_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Tracks submissions of HMDA data to regulatory agencies"
      },
      "mortgage_services_insurance_policies": {
        "schemaName": "mortgage_services",
        "tableName": "insurance_policies",
        "columns": {
          "agent_name": {
            "name": "agent_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Insurance agent's name"
          },
          "agent_phone": {
            "name": "agent_phone",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Insurance agent's contact number"
          },
          "annual_premium": {
            "name": "annual_premium",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Annual cost of the insurance policy"
          },
          "carrier_name": {
            "name": "carrier_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Insurance company providing coverage"
          },
          "coverage_amount": {
            "name": "coverage_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Amount of insurance coverage"
          },
          "effective_date": {
            "name": "effective_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Start date of policy coverage"
          },
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "End date of policy coverage"
          },
          "insurance_type": {
            "name": "insurance_type",
            "type": {
              "scalarType": "mortgage_services_insurance_type"
            },
            "nullable": "nonNullable",
            "description": "Type of insurance coverage"
          },
          "mortgage_services_policy_id": {
            "name": "mortgage_services_policy_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each policy"
          },
          "mortgage_services_servicing_account_id": {
            "name": "mortgage_services_servicing_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the servicing account this policy protects"
          },
          "paid_through_escrow": {
            "name": "paid_through_escrow",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether premium is paid from escrow account"
          },
          "policy_number": {
            "name": "policy_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Insurance policy identifier"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_insurance_policy_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the policy"
          }
        },
        "uniquenessConstraints": {
          "insurance_policies_pkey": [
            "mortgage_services_policy_id"
          ]
        },
        "foreignRelations": {
          "insurance_policies_mortgage_services_servicing_account_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "servicing_accounts",
            "columnMapping": {
              "mortgage_services_servicing_account_id": "mortgage_services_servicing_account_id"
            }
          }
        },
        "description": "Tracks insurance policies protecting mortgaged properties"
      },
      "mortgage_services_loan_modifications": {
        "schemaName": "mortgage_services",
        "tableName": "loan_modifications",
        "columns": {
          "approval_date": {
            "name": "approval_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date modification was approved"
          },
          "approved_by_id": {
            "name": "approved_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who approved modification"
          },
          "capitalized_amount": {
            "name": "capitalized_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of interest or fees capitalized"
          },
          "document_path": {
            "name": "document_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to modification agreement document"
          },
          "effective_date": {
            "name": "effective_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date modification takes effect"
          },
          "hardship_reason": {
            "name": "hardship_reason",
            "type": {
              "scalarType": "mortgage_services_hardship_reason"
            },
            "nullable": "nonNullable",
            "description": "Customer's reason for hardship"
          },
          "loan_account_id": {
            "name": "loan_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to loan account"
          },
          "modification_type": {
            "name": "modification_type",
            "type": {
              "scalarType": "mortgage_services_loan_modification_type"
            },
            "nullable": "nonNullable",
            "description": "Type of loan modification"
          },
          "mortgage_services_modification_id": {
            "name": "mortgage_services_modification_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for loan modification"
          },
          "new_principal_balance": {
            "name": "new_principal_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Principal balance after modification"
          },
          "new_rate": {
            "name": "new_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Interest rate after modification"
          },
          "new_term_months": {
            "name": "new_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Loan term after modification"
          },
          "original_principal_balance": {
            "name": "original_principal_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Principal balance before modification"
          },
          "original_rate": {
            "name": "original_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Interest rate before modification"
          },
          "original_term_months": {
            "name": "original_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Loan term before modification"
          },
          "request_date": {
            "name": "request_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date modification was requested"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_loan_modification_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the modification"
          }
        },
        "uniquenessConstraints": {
          "loan_modifications_pkey": [
            "mortgage_services_modification_id"
          ]
        },
        "foreignRelations": {
          "loan_modifications_approved_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "approved_by_id": "enterprise_associate_id"
            }
          },
          "loan_modifications_loan_account_id_fkey": {
            "foreignSchema": "consumer_lending",
            "foreignTable": "loan_accounts",
            "columnMapping": {
              "loan_account_id": "consumer_lending_loan_account_id"
            }
          }
        },
        "description": "Tracks modifications made to existing loan accounts, such as changes to interest rates, terms, or principal balance."
      },
      "mortgage_services_loan_products": {
        "schemaName": "mortgage_services",
        "tableName": "loan_products",
        "columns": {
          "base_interest_rate": {
            "name": "base_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Starting interest rate for this product"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Detailed description of the loan product and its features"
          },
          "discontinue_date": {
            "name": "discontinue_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when product was discontinued if applicable"
          },
          "interest_rate_type": {
            "name": "interest_rate_type",
            "type": {
              "scalarType": "mortgage_services_interest_rate_type"
            },
            "nullable": "nonNullable",
            "description": "Type of interest rate structure"
          },
          "is_active": {
            "name": "is_active",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether this product is currently offered"
          },
          "launch_date": {
            "name": "launch_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when product was launched"
          },
          "loan_type": {
            "name": "loan_type",
            "type": {
              "scalarType": "mortgage_services_loan_type"
            },
            "nullable": "nonNullable",
            "description": "Type of loan product"
          },
          "max_loan_amount": {
            "name": "max_loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Maximum principal amount for this product"
          },
          "max_term_months": {
            "name": "max_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Maximum loan duration in months"
          },
          "min_credit_score": {
            "name": "min_credit_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Minimum credit score typically required"
          },
          "min_down_payment_percentage": {
            "name": "min_down_payment_percentage",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Minimum down payment as percentage of purchase price"
          },
          "min_loan_amount": {
            "name": "min_loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Minimum principal amount for this product"
          },
          "min_term_months": {
            "name": "min_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Minimum loan duration in months"
          },
          "mortgage_services_loan_product_id": {
            "name": "mortgage_services_loan_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each loan product"
          },
          "product_code": {
            "name": "product_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Internal code identifying the loan product"
          },
          "product_name": {
            "name": "product_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Marketing name of the loan product"
          },
          "requires_pmi": {
            "name": "requires_pmi",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether private mortgage insurance is required"
          }
        },
        "uniquenessConstraints": {
          "loan_products_pkey": [
            "mortgage_services_loan_product_id"
          ]
        },
        "foreignRelations": {},
        "description": "Defines mortgage loan products available to applicants"
      },
      "mortgage_services_loan_rate_locks": {
        "schemaName": "mortgage_services",
        "tableName": "loan_rate_locks",
        "columns": {
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the rate lock expires"
          },
          "extension_date": {
            "name": "extension_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "Date the lock was extended, if applicable"
          },
          "extension_fee": {
            "name": "extension_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee charged for extending the lock, if any"
          },
          "lock_date": {
            "name": "lock_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the interest rate was locked"
          },
          "lock_fee": {
            "name": "lock_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee charged for the rate lock, if any"
          },
          "lock_period_days": {
            "name": "lock_period_days",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Duration of the lock in days"
          },
          "locked_interest_rate": {
            "name": "locked_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "The interest rate secured by this lock"
          },
          "mortgage_services_loan_id": {
            "name": "mortgage_services_loan_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the loan this rate lock applies to"
          },
          "mortgage_services_rate_lock_id": {
            "name": "mortgage_services_rate_lock_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each rate lock"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_loan_rate_lock_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the rate lock"
          }
        },
        "uniquenessConstraints": {
          "loan_rate_locks_pkey": [
            "mortgage_services_rate_lock_id"
          ]
        },
        "foreignRelations": {
          "loan_rate_locks_mortgage_services_loan_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "loans",
            "columnMapping": {
              "mortgage_services_loan_id": "mortgage_services_loan_id"
            }
          }
        },
        "description": "Tracks interest rate locks for mortgage loans"
      },
      "mortgage_services_loans": {
        "schemaName": "mortgage_services",
        "tableName": "loans",
        "columns": {
          "closing_costs": {
            "name": "closing_costs",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Actual fees and costs paid at closing"
          },
          "down_payment": {
            "name": "down_payment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Final amount paid upfront by the borrower"
          },
          "down_payment_percentage": {
            "name": "down_payment_percentage",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Final down payment as a percentage of purchase price"
          },
          "enterprise_account_id": {
            "name": "enterprise_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the enterprise account for this loan"
          },
          "escrow_amount": {
            "name": "escrow_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Actual monthly amount collected for taxes and insurance"
          },
          "first_payment_date": {
            "name": "first_payment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Due date of the first loan payment"
          },
          "interest_rate": {
            "name": "interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Final annual percentage rate for the loan"
          },
          "loan_amount": {
            "name": "loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Final principal amount of the loan"
          },
          "loan_term_months": {
            "name": "loan_term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Final duration of the loan in months"
          },
          "maturity_date": {
            "name": "maturity_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When the loan will be fully paid off"
          },
          "monthly_payment": {
            "name": "monthly_payment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Actual monthly payment including principal and interest"
          },
          "mortgage_services_application_id": {
            "name": "mortgage_services_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the mortgage application this loan is associated with"
          },
          "mortgage_services_loan_id": {
            "name": "mortgage_services_loan_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each loan"
          },
          "origination_date": {
            "name": "origination_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When the loan was originated"
          },
          "pmi_rate": {
            "name": "pmi_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Actual PMI rate applied to this loan"
          },
          "private_mortgage_insurance": {
            "name": "private_mortgage_insurance",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether PMI is required for this loan"
          }
        },
        "uniquenessConstraints": {
          "loans_pkey": [
            "mortgage_services_loan_id"
          ]
        },
        "foreignRelations": {
          "loans_enterprise_account_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "accounts",
            "columnMapping": {
              "enterprise_account_id": "enterprise_account_id"
            }
          },
          "loans_mortgage_services_application_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "applications",
            "columnMapping": {
              "mortgage_services_application_id": "mortgage_services_application_id"
            }
          }
        },
        "description": "Stores final, actual loan details after closing. Now includes reference to enterprise account."
      },
      "mortgage_services_payments": {
        "schemaName": "mortgage_services",
        "tableName": "payments",
        "columns": {
          "confirmation_number": {
            "name": "confirmation_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Confirmation number provided to customer"
          },
          "escrow_amount": {
            "name": "escrow_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Portion of payment applied to escrow"
          },
          "interest_amount": {
            "name": "interest_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Portion of payment applied to interest"
          },
          "late_fee_amount": {
            "name": "late_fee_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Portion of payment applied to late fees"
          },
          "mortgage_services_payment_id": {
            "name": "mortgage_services_payment_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each payment"
          },
          "mortgage_services_servicing_account_id": {
            "name": "mortgage_services_servicing_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the servicing account receiving the payment"
          },
          "other_fee_amount": {
            "name": "other_fee_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Portion of payment applied to other fees"
          },
          "payment_amount": {
            "name": "payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Total amount of the payment"
          },
          "payment_date": {
            "name": "payment_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the payment was made"
          },
          "payment_method": {
            "name": "payment_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Method used to make payment (e.g., ACH, Check, Online)"
          },
          "payment_type": {
            "name": "payment_type",
            "type": {
              "scalarType": "mortgage_services_payment_type"
            },
            "nullable": "nonNullable",
            "description": "Type of payment (e.g., Regular, Extra Principal, Escrow Only)"
          },
          "principal_amount": {
            "name": "principal_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Portion of payment applied to principal"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Current status of the payment (e.g., Pending, Completed)"
          },
          "transaction_id": {
            "name": "transaction_id",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Financial transaction identifier"
          }
        },
        "uniquenessConstraints": {
          "payments_pkey": [
            "mortgage_services_payment_id"
          ]
        },
        "foreignRelations": {
          "payments_mortgage_services_servicing_account_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "servicing_accounts",
            "columnMapping": {
              "mortgage_services_servicing_account_id": "mortgage_services_servicing_account_id"
            }
          }
        },
        "description": "Tracks mortgage loan payments made by borrowers"
      },
      "mortgage_services_properties": {
        "schemaName": "mortgage_services",
        "tableName": "properties",
        "columns": {
          "address": {
            "name": "address",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "References the complete property address"
          },
          "bathrooms": {
            "name": "bathrooms",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Number of bathrooms (allows for half baths)"
          },
          "bedrooms": {
            "name": "bedrooms",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of bedrooms"
          },
          "construction_completion_date": {
            "name": "construction_completion_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Expected completion date for new construction"
          },
          "hoa_dues": {
            "name": "hoa_dues",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Monthly homeowners association fees if applicable"
          },
          "is_new_construction": {
            "name": "is_new_construction",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Indicates if the property is newly constructed"
          },
          "lot_size": {
            "name": "lot_size",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Size of the property lot"
          },
          "mortgage_services_application_id": {
            "name": "mortgage_services_application_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the mortgage application this property is associated with"
          },
          "mortgage_services_property_id": {
            "name": "mortgage_services_property_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auto-incrementing identifier for each property record"
          },
          "occupancy_type": {
            "name": "occupancy_type",
            "type": {
              "scalarType": "mortgage_services_occupancy_type"
            },
            "nullable": "nonNullable",
            "description": "How the property will be used by the borrower"
          },
          "property_type": {
            "name": "property_type",
            "type": {
              "scalarType": "mortgage_services_property_type"
            },
            "nullable": "nonNullable",
            "description": "Type of property"
          },
          "square_feet": {
            "name": "square_feet",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Total living area in square feet"
          },
          "year_built": {
            "name": "year_built",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Year the property was constructed"
          }
        },
        "uniquenessConstraints": {
          "properties_pkey": [
            "mortgage_services_property_id"
          ]
        },
        "foreignRelations": {
          "properties_mortgage_services_application_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "applications",
            "columnMapping": {
              "mortgage_services_application_id": "mortgage_services_application_id"
            }
          }
        },
        "description": "Stores information about properties being purchased or refinanced"
      },
      "mortgage_services_servicing_accounts": {
        "schemaName": "mortgage_services",
        "tableName": "servicing_accounts",
        "columns": {
          "current_interest_rate": {
            "name": "current_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Current applicable interest rate"
          },
          "current_principal_balance": {
            "name": "current_principal_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Current remaining principal balance"
          },
          "escrow_balance": {
            "name": "escrow_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Current balance in escrow account"
          },
          "escrow_paid_ytd": {
            "name": "escrow_paid_ytd",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Escrow paid year-to-date"
          },
          "homeowners_insurance_due_date": {
            "name": "homeowners_insurance_due_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When next insurance payment is due"
          },
          "interest_paid_ytd": {
            "name": "interest_paid_ytd",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Interest paid year-to-date"
          },
          "last_payment_amount": {
            "name": "last_payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount of last payment received"
          },
          "last_payment_date": {
            "name": "last_payment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When last payment was received"
          },
          "mortgage_services_loan_id": {
            "name": "mortgage_services_loan_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the originated loan"
          },
          "mortgage_services_servicing_account_id": {
            "name": "mortgage_services_servicing_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each servicing account"
          },
          "next_payment_amount": {
            "name": "next_payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Amount due for next payment"
          },
          "next_payment_due_date": {
            "name": "next_payment_due_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When next payment is due"
          },
          "original_principal_balance": {
            "name": "original_principal_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Original loan amount at closing"
          },
          "principal_paid_ytd": {
            "name": "principal_paid_ytd",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Principal paid year-to-date"
          },
          "property_tax_due_date": {
            "name": "property_tax_due_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When next property tax payment is due"
          },
          "servicing_transferred_date": {
            "name": "servicing_transferred_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "When servicing was transferred to current servicer"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "mortgage_services_servicing_account_status"
            },
            "nullable": "nonNullable",
            "description": "Current status of the loan being serviced"
          }
        },
        "uniquenessConstraints": {
          "servicing_accounts_pkey": [
            "mortgage_services_servicing_account_id"
          ]
        },
        "foreignRelations": {
          "servicing_accounts_mortgage_services_loan_id_fkey": {
            "foreignSchema": "mortgage_services",
            "foreignTable": "loans",
            "columnMapping": {
              "mortgage_services_loan_id": "mortgage_services_loan_id"
            }
          }
        },
        "description": "Manages ongoing servicing of closed mortgage loans"
      },
      "security_accounts": {
        "schemaName": "security",
        "tableName": "accounts",
        "columns": {
          "account_id_string": {
            "name": "account_id_string",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "String representation of the account ID."
          },
          "created": {
            "name": "created",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the account was created."
          },
          "disabled": {
            "name": "disabled",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Indicates if the account is disabled."
          },
          "locked": {
            "name": "locked",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Indicates if the account is locked."
          },
          "manually_correlated": {
            "name": "manually_correlated",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Indicates if the account was manually correlated."
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the account."
          },
          "password_last_set": {
            "name": "password_last_set",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the account password was last set."
          },
          "privileged": {
            "name": "privileged",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Indicates if the account has privileged access."
          },
          "security_account_id": {
            "name": "security_account_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the account."
          },
          "security_identity_id": {
            "name": "security_identity_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Identifier of the associated identity."
          },
          "security_source_id": {
            "name": "security_source_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Identifier of the source system for the account."
          },
          "status_update_date_time": {
            "name": "status_update_date_time",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the account status was last updated"
          }
        },
        "uniquenessConstraints": {
          "accounts_pkey": [
            "security_account_id"
          ]
        },
        "foreignRelations": {
          "accounts_security_identity_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "identities",
            "columnMapping": {
              "security_identity_id": "security_identity_id"
            }
          },
          "accounts_security_source_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "applications",
            "columnMapping": {
              "security_source_id": "app_mgmt_application_id"
            }
          }
        },
        "description": "Table storing information about user accounts across various systems."
      },
      "security_cpe": {
        "schemaName": "security",
        "tableName": "cpe",
        "columns": {
          "cpe23uri": {
            "name": "cpe23uri",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "CPE 2.3 URI string."
          },
          "cve": {
            "name": "cve",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Common Vulnerabilities and Exposures identifier. Foreign key referencing cvss.cve."
          },
          "vulnerable": {
            "name": "vulnerable",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Indicates if the CPE is vulnerable to the CVE."
          }
        },
        "uniquenessConstraints": {},
        "foreignRelations": {
          "cpe_cve_fkey": {
            "foreignSchema": "security",
            "foreignTable": "cvss",
            "columnMapping": {
              "cve": "cve"
            }
          }
        },
        "description": "Stores Common Platform Enumeration (CPE) information associated with CVEs."
      },
      "security_cve_problem": {
        "schemaName": "security",
        "tableName": "cve_problem",
        "columns": {
          "cve": {
            "name": "cve",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Common Vulnerabilities and Exposures identifier. Foreign key referencing cvss.cve."
          },
          "cwe_id": {
            "name": "cwe_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "A reference to the related Common Weakness Enumeration, if it exists"
          },
          "problem": {
            "name": "problem",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Problem description related to the CVE."
          }
        },
        "uniquenessConstraints": {},
        "foreignRelations": {
          "cve_problem_cve_fkey": {
            "foreignSchema": "security",
            "foreignTable": "cvss",
            "columnMapping": {
              "cve": "cve"
            }
          },
          "cve_problem_cwe_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "cwe",
            "columnMapping": {
              "cwe_id": "cwe_id"
            }
          }
        },
        "description": "Stores problem descriptions associated with CVEs."
      },
      "security_cvss": {
        "schemaName": "security",
        "tableName": "cvss",
        "columns": {
          "access_complexity": {
            "name": "access_complexity",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Access Complexity metric."
          },
          "access_vector": {
            "name": "access_vector",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Access Vector metric."
          },
          "attack_complexity_3": {
            "name": "attack_complexity_3",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v3 Attack Complexity metric."
          },
          "attack_vector_3": {
            "name": "attack_vector_3",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v3 Attack Vector metric."
          },
          "authentication": {
            "name": "authentication",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Authentication metric."
          },
          "availability_impact": {
            "name": "availability_impact",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Availability Impact metric."
          },
          "availability_impact_3": {
            "name": "availability_impact_3",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v3 Availability Impact metric."
          },
          "base_score": {
            "name": "base_score",
            "type": {
              "scalarType": "float4"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Base Score."
          },
          "base_score_3": {
            "name": "base_score_3",
            "type": {
              "scalarType": "float4"
            },
            "nullable": "nullable",
            "description": "CVSS v3 Base Score."
          },
          "base_severity_3": {
            "name": "base_severity_3",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v3 Base Severity."
          },
          "confidentiality_impact": {
            "name": "confidentiality_impact",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Confidentiality Impact metric."
          },
          "confidentiality_impact_3": {
            "name": "confidentiality_impact_3",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v3 Confidentiality Impact metric."
          },
          "cve": {
            "name": "cve",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Common Vulnerabilities and Exposures identifier. Primary key."
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "CVE description."
          },
          "exploitability_score": {
            "name": "exploitability_score",
            "type": {
              "scalarType": "float4"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Exploitability Score."
          },
          "exploitability_score_3": {
            "name": "exploitability_score_3",
            "type": {
              "scalarType": "float4"
            },
            "nullable": "nullable",
            "description": "CVSS v3 Exploitability Score."
          },
          "impact_score": {
            "name": "impact_score",
            "type": {
              "scalarType": "float4"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Impact Score."
          },
          "impact_score_3": {
            "name": "impact_score_3",
            "type": {
              "scalarType": "float4"
            },
            "nullable": "nullable",
            "description": "CVSS v3 Impact Score."
          },
          "integrity_impact": {
            "name": "integrity_impact",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Integrity Impact metric."
          },
          "integrity_impact_3": {
            "name": "integrity_impact_3",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v3 Integrity Impact metric."
          },
          "last_modified_date": {
            "name": "last_modified_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "CVE last modified date."
          },
          "obtain_all_privileges": {
            "name": "obtain_all_privileges",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Obtain All Privileges metric."
          },
          "obtain_other_privileges": {
            "name": "obtain_other_privileges",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Obtain Other Privileges metric."
          },
          "obtain_user_privileges": {
            "name": "obtain_user_privileges",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Obtain User Privileges metric."
          },
          "privileges_required_3": {
            "name": "privileges_required_3",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v3 Privileges Required metric."
          },
          "published_date": {
            "name": "published_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "CVE publication date."
          },
          "scope_3": {
            "name": "scope_3",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v3 Scope metric."
          },
          "severity": {
            "name": "severity",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Severity."
          },
          "user_interaction_3": {
            "name": "user_interaction_3",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v3 User Interaction metric."
          },
          "user_interaction_required": {
            "name": "user_interaction_required",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "CVSS v2 User Interaction Required metric."
          },
          "vector_string": {
            "name": "vector_string",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v2 Vector String."
          },
          "vector_string_3": {
            "name": "vector_string_3",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "CVSS v3 Vector String."
          }
        },
        "uniquenessConstraints": {
          "cvss_pkey": [
            "cve"
          ]
        },
        "foreignRelations": {},
        "description": "Stores Common Vulnerability Scoring System (CVSS) metrics for CVEs, including both CVSS v2 and v3."
      },
      "security_cwe": {
        "schemaName": "security",
        "tableName": "cwe",
        "columns": {
          "common_consequences": {
            "name": "common_consequences",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Common consequences of the CWE."
          },
          "cwe_id": {
            "name": "cwe_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Common Weakness Enumeration identifier. Primary key."
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "CWE description."
          },
          "extended_description": {
            "name": "extended_description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Extended CWE description."
          },
          "modes_of_introduction": {
            "name": "modes_of_introduction",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Modes of introduction for the CWE."
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "CWE name."
          },
          "potential_mitigations": {
            "name": "potential_mitigations",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Potential mitigations for the CWE."
          }
        },
        "uniquenessConstraints": {
          "cwe_pkey": [
            "cwe_id"
          ]
        },
        "foreignRelations": {},
        "description": "Stores Common Weakness Enumeration (CWE) information."
      },
      "security_devices": {
        "schemaName": "security",
        "tableName": "devices",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "The timestamp when the device record was created."
          },
          "device_type": {
            "name": "device_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "The type of the device (e.g., router, server, workstation)."
          },
          "hostname": {
            "name": "hostname",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "The hostname of the device."
          },
          "security_device_id": {
            "name": "security_device_id",
            "type": {
              "scalarType": "inet"
            },
            "nullable": "nonNullable",
            "description": "The unique IP address of the device. Serves as the primary key."
          },
          "subnet": {
            "name": "subnet",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "The subnet the device belongs to."
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "The timestamp when the device record was last updated."
          }
        },
        "uniquenessConstraints": {
          "devices_pkey": [
            "security_device_id"
          ]
        },
        "foreignRelations": {},
        "description": "Table storing information about network devices."
      },
      "security_enhanced_entitlements": {
        "schemaName": "security",
        "tableName": "enhanced_entitlements",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "When the entitlement was created"
          },
          "created_by_id": {
            "name": "created_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Who created the entitlement"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of what the entitlement grants access to"
          },
          "display_name": {
            "name": "display_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "User-friendly name for the entitlement"
          },
          "entitlement_name": {
            "name": "entitlement_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Internal name for the entitlement"
          },
          "managing_application_id": {
            "name": "managing_application_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Application that manages this entitlement"
          },
          "security_entitlement_id": {
            "name": "security_entitlement_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the entitlement"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "security_entitlement_status"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current status of the entitlement"
          }
        },
        "uniquenessConstraints": {
          "enhanced_entitlements_pkey": [
            "security_entitlement_id"
          ]
        },
        "foreignRelations": {
          "enhanced_entitlements_created_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "created_by_id": "enterprise_associate_id"
            }
          },
          "enhanced_entitlements_managing_application_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "applications",
            "columnMapping": {
              "managing_application_id": "app_mgmt_application_id"
            }
          }
        },
        "description": "Defines granular entitlements that can be granted to roles"
      },
      "security_entitlement_resources": {
        "schemaName": "security",
        "tableName": "entitlement_resources",
        "columns": {
          "context_conditions": {
            "name": "context_conditions",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Context conditions that restrict when this entitlement is applicable"
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "When the relationship was created"
          },
          "created_by_id": {
            "name": "created_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Who created the relationship"
          },
          "permission_type": {
            "name": "permission_type",
            "type": {
              "scalarType": "security_permission_type"
            },
            "nullable": "nonNullable",
            "description": "Type of permission granted on the resource"
          },
          "resource_details": {
            "name": "resource_details",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Resource-specific details like column filters, row filters, access parameters"
          },
          "security_entitlement_id": {
            "name": "security_entitlement_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Reference to the entitlement"
          },
          "security_entitlement_resource_id": {
            "name": "security_entitlement_resource_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for this entitlement-resource relationship"
          },
          "security_resource_id": {
            "name": "security_resource_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Reference to the resource"
          }
        },
        "uniquenessConstraints": {
          "entitlement_resources_pkey": [
            "security_entitlement_resource_id"
          ]
        },
        "foreignRelations": {
          "entitlement_resources_created_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "created_by_id": "enterprise_associate_id"
            }
          },
          "entitlement_resources_security_entitlement_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "enhanced_entitlements",
            "columnMapping": {
              "security_entitlement_id": "security_entitlement_id"
            }
          },
          "entitlement_resources_security_resource_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "resource_definitions",
            "columnMapping": {
              "security_resource_id": "security_resource_id"
            }
          }
        },
        "description": "Maps entitlements to resources with specific permission types and contexts"
      },
      "security_file_accesses": {
        "schemaName": "security",
        "tableName": "file_accesses",
        "columns": {
          "access_time": {
            "name": "access_time",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the file access occurred."
          },
          "access_type": {
            "name": "access_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Type of file access (e.g., read, write, execute)."
          },
          "security_file_access_id": {
            "name": "security_file_access_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the file access event."
          },
          "security_file_id": {
            "name": "security_file_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the accessed file."
          },
          "security_process_execution_id": {
            "name": "security_process_execution_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the process execution that initiated the file access."
          },
          "security_system_id": {
            "name": "security_system_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the system where the file access occurred."
          }
        },
        "uniquenessConstraints": {
          "file_accesses_pkey": [
            "security_file_access_id"
          ]
        },
        "foreignRelations": {
          "file_accesses_security_file_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "files",
            "columnMapping": {
              "security_file_id": "security_file_id"
            }
          },
          "file_accesses_security_process_execution_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "process_executions",
            "columnMapping": {
              "security_process_execution_id": "security_process_execution_id"
            }
          },
          "file_accesses_security_system_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "hosts",
            "columnMapping": {
              "security_system_id": "security_host_id"
            }
          }
        },
        "description": "Table storing information about file access events, tracking file usage and access patterns."
      },
      "security_file_threats": {
        "schemaName": "security",
        "tableName": "file_threats",
        "columns": {
          "security_file_threat_hash": {
            "name": "security_file_threat_hash",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Hash of the file, used to identify threats."
          },
          "threat_description": {
            "name": "threat_description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of the threat associated with the file."
          },
          "threat_level": {
            "name": "threat_level",
            "type": {
              "scalarType": "security_threat_level_type"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Level of threat associated with the file."
          }
        },
        "uniquenessConstraints": {
          "file_threats_pkey": [
            "security_file_threat_hash"
          ]
        },
        "foreignRelations": {},
        "description": "Table storing information about file threats, linking file hashes to threat levels and descriptions."
      },
      "security_files": {
        "schemaName": "security",
        "tableName": "files",
        "columns": {
          "file_hash": {
            "name": "file_hash",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Hash of the file, used for integrity checks."
          },
          "file_path": {
            "name": "file_path",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Path to the file on the system."
          },
          "file_size": {
            "name": "file_size",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nullable",
            "description": "Size of the file in bytes."
          },
          "last_modified": {
            "name": "last_modified",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the file was last modified."
          },
          "security_file_id": {
            "name": "security_file_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the file."
          },
          "security_host_id": {
            "name": "security_host_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the system where the file is located."
          }
        },
        "uniquenessConstraints": {
          "files_pkey": [
            "security_file_id"
          ]
        },
        "foreignRelations": {
          "files_security_host_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "hosts",
            "columnMapping": {
              "security_host_id": "security_host_id"
            }
          }
        },
        "description": "Table storing information about files on systems, including file paths, hashes, and sizes."
      },
      "security_governance_groups": {
        "schemaName": "security",
        "tableName": "governance_groups",
        "columns": {
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the governance group."
          },
          "owner_id": {
            "name": "owner_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Identifier of the owner of the governance group."
          },
          "security_governance_group_id": {
            "name": "security_governance_group_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the governance group."
          }
        },
        "uniquenessConstraints": {
          "governance_groups_pkey": [
            "security_governance_group_id"
          ]
        },
        "foreignRelations": {
          "governance_groups_owner_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "owner_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Table storing information about governance groups, used for managing access and permissions."
      },
      "security_hosts": {
        "schemaName": "security",
        "tableName": "hosts",
        "columns": {
          "agent_identifier": {
            "name": "agent_identifier",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Identifier of the agent installed on the system."
          },
          "agent_status": {
            "name": "agent_status",
            "type": {
              "scalarType": "security_agent_status"
            },
            "nullable": "nullable",
            "description": "Status of the agent installed on the system."
          },
          "agent_version": {
            "name": "agent_version",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Version of the agent installed on the system."
          },
          "asset_owner_email": {
            "name": "asset_owner_email",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Email of the asset owner."
          },
          "asset_owner_name": {
            "name": "asset_owner_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the asset owner."
          },
          "checked_out_date": {
            "name": "checked_out_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when the system was checked out."
          },
          "compliance": {
            "name": "compliance",
            "type": {
              "scalarType": "security_compliance_status"
            },
            "nullable": "nullable",
            "description": "Compliance status of the system."
          },
          "hostname": {
            "name": "hostname",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Hostname of the system."
          },
          "ip_address_external": {
            "name": "ip_address_external",
            "type": {
              "scalarType": "inet"
            },
            "nullable": "nullable",
            "description": "External IP address of the system."
          },
          "ip_address_internal": {
            "name": "ip_address_internal",
            "type": {
              "scalarType": "inet"
            },
            "nullable": "nullable",
            "description": "Internal IP address of the system."
          },
          "last_patched": {
            "name": "last_patched",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the system was last patched."
          },
          "last_seen": {
            "name": "last_seen",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the system was last seen."
          },
          "mac_address": {
            "name": "mac_address",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "MAC address of the system."
          },
          "os": {
            "name": "os",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Operating system of the system."
          },
          "os_version": {
            "name": "os_version",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Operating system version."
          },
          "patch_level": {
            "name": "patch_level",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Patch level of the system."
          },
          "patch_status": {
            "name": "patch_status",
            "type": {
              "scalarType": "security_patch_status"
            },
            "nullable": "nullable",
            "description": "Status of system patches."
          },
          "patch_update_available": {
            "name": "patch_update_available",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Indicates if patch updates are available."
          },
          "security_host_id": {
            "name": "security_host_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the system."
          },
          "system_type": {
            "name": "system_type",
            "type": {
              "scalarType": "security_system_type"
            },
            "nullable": "nullable",
            "description": "Type of the system (e.g., server, workstation)."
          }
        },
        "uniquenessConstraints": {
          "hosts_pkey": [
            "security_host_id"
          ]
        },
        "foreignRelations": {},
        "description": "Table storing information about systems, including hardware, software, and status details."
      },
      "security_iam_logins": {
        "schemaName": "security",
        "tableName": "iam_logins",
        "columns": {
          "login_method": {
            "name": "login_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Method used for the login."
          },
          "login_time": {
            "name": "login_time",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nonNullable",
            "description": "Timestamp when the login occurred."
          },
          "logout_time": {
            "name": "logout_time",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the logout occurred."
          },
          "security_account_id": {
            "name": "security_account_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the account used for the login."
          },
          "security_login_id": {
            "name": "security_login_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the IAM login."
          },
          "user_name": {
            "name": "user_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Username used for the login."
          }
        },
        "uniquenessConstraints": {
          "iam_logins_pkey": [
            "security_login_id"
          ]
        },
        "foreignRelations": {
          "iam_logins_security_account_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "accounts",
            "columnMapping": {
              "security_account_id": "security_account_id"
            }
          }
        },
        "description": "Table storing information about IAM logins, tracking user access via accounts."
      },
      "security_identities": {
        "schemaName": "security",
        "tableName": "identities",
        "columns": {
          "created": {
            "name": "created",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the identity was created."
          },
          "display_name": {
            "name": "display_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "User-friendly name of the identity."
          },
          "environment": {
            "name": "environment",
            "type": {
              "scalarType": "security_environment"
            },
            "nullable": "nullable",
            "description": "Identifies access to an environment e.g production, development, etc."
          },
          "inactive": {
            "name": "inactive",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Indicates if the identity is inactive."
          },
          "is_fallback_approver": {
            "name": "is_fallback_approver",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Indicates if the identity is a fallback approver."
          },
          "modified": {
            "name": "modified",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the identity was last modified."
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Internal name of the identity."
          },
          "owner_id": {
            "name": "owner_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": null
          },
          "security_identity_id": {
            "name": "security_identity_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the identity."
          },
          "security_identity_profile_id": {
            "name": "security_identity_profile_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Identifier of the identity profile associated with the identity."
          },
          "service_account": {
            "name": "service_account",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "If false than access is considered to be on behalf of the owner, otherwise this is service account used for system to system automation"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Status of the identity."
          },
          "synced": {
            "name": "synced",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the identity was last synced."
          }
        },
        "uniquenessConstraints": {
          "identities_pkey": [
            "security_identity_id"
          ]
        },
        "foreignRelations": {
          "identities_owner_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "owner_id": "enterprise_associate_id"
            }
          },
          "identities_security_identity_profile_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "identity_profiles",
            "columnMapping": {
              "security_identity_profile_id": "security_identity_profile_id"
            }
          }
        },
        "description": "Table storing information about user identities, representing individuals or entities."
      },
      "security_identity_profiles": {
        "schemaName": "security",
        "tableName": "identity_profiles",
        "columns": {
          "access_review_frequency_days": {
            "name": "access_review_frequency_days",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "How often accounts with this profile should be reviewed, in days."
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "When the profile was created."
          },
          "default_session_timeout_minutes": {
            "name": "default_session_timeout_minutes",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Default session timeout in minutes for identities with this profile."
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Detailed description of the profile and its purpose."
          },
          "max_inactive_days": {
            "name": "max_inactive_days",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Maximum number of days an identity can be inactive before automatic disablement."
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the identity profile."
          },
          "password_expiry_days": {
            "name": "password_expiry_days",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of days before password expiration for this profile type."
          },
          "requires_mfa": {
            "name": "requires_mfa",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "Whether multi-factor authentication is required for identities with this profile."
          },
          "risk_level": {
            "name": "risk_level",
            "type": {
              "scalarType": "security_risk_level"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Risk classification level for this profile type."
          },
          "security_identity_profile_id": {
            "name": "security_identity_profile_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the identity profile."
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "When the profile was last updated."
          }
        },
        "uniquenessConstraints": {
          "identity_profiles_pkey": [
            "security_identity_profile_id"
          ]
        },
        "foreignRelations": {},
        "description": "Table storing information about identity profiles, defining sets of attributes and rules for identities."
      },
      "security_identity_roles": {
        "schemaName": "security",
        "tableName": "identity_roles",
        "columns": {
          "active": {
            "name": "active",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether this assignment is currently active"
          },
          "assigned_by_id": {
            "name": "assigned_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Who assigned the role"
          },
          "end_date": {
            "name": "end_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the role was no longer effective"
          },
          "security_identity_id": {
            "name": "security_identity_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Reference to the identity"
          },
          "security_identity_role_id": {
            "name": "security_identity_role_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Reference to the identity role assignment"
          },
          "security_role_id": {
            "name": "security_role_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Reference to the role"
          },
          "start_date": {
            "name": "start_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "When the role became effective"
          }
        },
        "uniquenessConstraints": {
          "identity_roles_pkey": [
            "security_identity_role_id"
          ]
        },
        "foreignRelations": {
          "identity_roles_assigned_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "assigned_by_id": "enterprise_associate_id"
            }
          },
          "identity_roles_security_identity_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "identities",
            "columnMapping": {
              "security_identity_id": "security_identity_id"
            }
          },
          "identity_roles_security_role_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "roles",
            "columnMapping": {
              "security_role_id": "security_role_id"
            }
          }
        },
        "description": "Associates identities with roles"
      },
      "security_installed_applications": {
        "schemaName": "security",
        "tableName": "installed_applications",
        "columns": {
          "app_mgmt_application_id": {
            "name": "app_mgmt_application_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Reference to the application definition."
          },
          "application_version": {
            "name": "application_version",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Version of the installed application."
          },
          "installation_date": {
            "name": "installation_date",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the application was installed."
          },
          "security_host_id": {
            "name": "security_host_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the system where the application is installed."
          }
        },
        "uniquenessConstraints": {
          "installed_applications_pkey": [
            "app_mgmt_application_id",
            "security_host_id"
          ]
        },
        "foreignRelations": {
          "installed_applications_app_mgmt_application_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "applications",
            "columnMapping": {
              "app_mgmt_application_id": "app_mgmt_application_id"
            }
          },
          "installed_applications_security_host_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "hosts",
            "columnMapping": {
              "security_host_id": "security_host_id"
            }
          }
        },
        "description": "Table storing information about installed applications on servers, tracking software installations."
      },
      "security_network_connections": {
        "schemaName": "security",
        "tableName": "network_connections",
        "columns": {
          "connection_type": {
            "name": "connection_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Type of network connection (e.g., TCP, UDP)."
          },
          "end_time": {
            "name": "end_time",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the connection ended."
          },
          "local_ip": {
            "name": "local_ip",
            "type": {
              "scalarType": "inet"
            },
            "nullable": "nullable",
            "description": "Local IP address of the connection."
          },
          "local_port": {
            "name": "local_port",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Local port number of the connection."
          },
          "protocol": {
            "name": "protocol",
            "type": {
              "scalarType": "security_network_protocols"
            },
            "nullable": "nullable",
            "description": "Network protocol used for the connection."
          },
          "remote_ip": {
            "name": "remote_ip",
            "type": {
              "scalarType": "inet"
            },
            "nullable": "nullable",
            "description": "Remote IP address of the connection."
          },
          "remote_port": {
            "name": "remote_port",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Remote port number of the connection."
          },
          "security_host_id": {
            "name": "security_host_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the system where the connection originated."
          },
          "security_network_connection_id": {
            "name": "security_network_connection_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the network connection."
          },
          "security_process_execution_id": {
            "name": "security_process_execution_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the process execution that initiated the connection."
          },
          "start_time": {
            "name": "start_time",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the connection started."
          }
        },
        "uniquenessConstraints": {
          "network_connections_pkey": [
            "security_network_connection_id"
          ]
        },
        "foreignRelations": {
          "network_connections_security_host_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "hosts",
            "columnMapping": {
              "security_host_id": "security_host_id"
            }
          },
          "network_connections_security_process_execution_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "process_executions",
            "columnMapping": {
              "security_process_execution_id": "security_process_execution_id"
            }
          }
        },
        "description": "Table storing information about network connections, tracking network traffic and activity."
      },
      "security_network_events": {
        "schemaName": "security",
        "tableName": "network_events",
        "columns": {
          "ack": {
            "name": "ack",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nullable",
            "description": "TCP acknowledgment number, if applicable."
          },
          "bytes_received": {
            "name": "bytes_received",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Number of bytes received during the event."
          },
          "bytes_sent": {
            "name": "bytes_sent",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Number of bytes sent during the event."
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the event record was created."
          },
          "dest_ip": {
            "name": "dest_ip",
            "type": {
              "scalarType": "inet"
            },
            "nullable": "nonNullable",
            "description": "Destination IP address of the network event."
          },
          "dest_port": {
            "name": "dest_port",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Destination port of the network event."
          },
          "length": {
            "name": "length",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Length of the data packet in bytes."
          },
          "log_message": {
            "name": "log_message",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Detailed log message associated with the network event."
          },
          "protocol": {
            "name": "protocol",
            "type": {
              "scalarType": "security_network_protocols"
            },
            "nullable": "nonNullable",
            "description": "Network protocol used (e.g., TCP, UDP, ICMP)."
          },
          "security_device_id": {
            "name": "security_device_id",
            "type": {
              "scalarType": "inet"
            },
            "nullable": "nonNullable",
            "description": "IP address of the device involved in the event (likely the device that logged the event)"
          },
          "security_network_event_id": {
            "name": "security_network_event_id",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for the network event. Automatically incrementing."
          },
          "sequence": {
            "name": "sequence",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nullable",
            "description": "TCP sequence number, if applicable."
          },
          "source_ip": {
            "name": "source_ip",
            "type": {
              "scalarType": "inet"
            },
            "nullable": "nonNullable",
            "description": "Source IP address of the network event."
          },
          "source_port": {
            "name": "source_port",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Source port of the network event."
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Status of the network event (e.g., success, failure, blocked)."
          },
          "tcp_flag": {
            "name": "tcp_flag",
            "type": {
              "scalarType": "security_tcp_flag_type"
            },
            "nullable": "nullable",
            "description": "TCP flags associated with the event, if applicable."
          },
          "timestamp": {
            "name": "timestamp",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nonNullable",
            "description": "Timestamp when the network event occurred."
          },
          "window_size": {
            "name": "window_size",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "TCP window size, if applicable."
          }
        },
        "uniquenessConstraints": {
          "network_events_pkey": [
            "security_network_event_id"
          ]
        },
        "foreignRelations": {
          "network_events_security_device_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "devices",
            "columnMapping": {
              "security_device_id": "security_device_id"
            }
          }
        },
        "description": "Table storing detailed information about network events for security monitoring and analysis."
      },
      "security_open_ports": {
        "schemaName": "security",
        "tableName": "open_ports",
        "columns": {
          "port_number": {
            "name": "port_number",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Port number that is open."
          },
          "protocol": {
            "name": "protocol",
            "type": {
              "scalarType": "security_network_protocols"
            },
            "nullable": "nonNullable",
            "description": "Network protocol associated with the open port."
          },
          "security_host_id": {
            "name": "security_host_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the system with the open port."
          }
        },
        "uniquenessConstraints": {
          "open_ports_pkey": [
            "port_number",
            "protocol",
            "security_host_id"
          ]
        },
        "foreignRelations": {
          "open_ports_security_host_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "hosts",
            "columnMapping": {
              "security_host_id": "security_host_id"
            }
          }
        },
        "description": "Table storing information about open ports on systems, tracking network services and potential vulnerabilities."
      },
      "security_policies": {
        "schemaName": "security",
        "tableName": "policies",
        "columns": {
          "active": {
            "name": "active",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "Indicates whether the policy is currently active."
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "Timestamp when the policy was created."
          },
          "created_by_id": {
            "name": "created_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Who created the policy"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "Detailed description of the policy."
          },
          "ended_at": {
            "name": "ended_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the policy was no longer effective."
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the policy. Must be unique."
          },
          "security_policy_id": {
            "name": "security_policy_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the policy."
          },
          "started_at": {
            "name": "started_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nonNullable",
            "description": "Timestamp when the policy became effective."
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "Timestamp when the policy was last updated."
          },
          "updated_by_id": {
            "name": "updated_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Who updated the policy"
          }
        },
        "uniquenessConstraints": {
          "policies_name_key": [
            "name"
          ],
          "policies_pkey": [
            "security_policy_id"
          ]
        },
        "foreignRelations": {
          "policies_created_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "created_by_id": "enterprise_associate_id"
            }
          },
          "policies_updated_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "updated_by_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Table storing security policies and their details."
      },
      "security_policy_attributes": {
        "schemaName": "security",
        "tableName": "policy_attributes",
        "columns": {
          "attribute_name": {
            "name": "attribute_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the policy attribute."
          },
          "attribute_value": {
            "name": "attribute_value",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Value of the policy attribute."
          },
          "security_policy_id": {
            "name": "security_policy_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Foreign key referencing the policy_id in the policies table."
          }
        },
        "uniquenessConstraints": {},
        "foreignRelations": {
          "policy_attributes_security_policy_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "policies",
            "columnMapping": {
              "security_policy_id": "security_policy_id"
            }
          }
        },
        "description": "Table storing attributes associated with security policies. Allows for flexible policy configuration."
      },
      "security_policy_rules": {
        "schemaName": "security",
        "tableName": "policy_rules",
        "columns": {
          "rule_description": {
            "name": "rule_description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "Detailed description of the policy rule."
          },
          "rule_name": {
            "name": "rule_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the policy rule."
          },
          "security_policy_id": {
            "name": "security_policy_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Foreign key referencing the policy_id in the policies table."
          },
          "security_policy_rule_id": {
            "name": "security_policy_rule_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the policy rule."
          }
        },
        "uniquenessConstraints": {
          "policy_rules_pkey": [
            "security_policy_rule_id"
          ]
        },
        "foreignRelations": {
          "policy_rules_security_policy_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "policies",
            "columnMapping": {
              "security_policy_id": "security_policy_id"
            }
          }
        },
        "description": "Table storing specific rules associated with security policies."
      },
      "security_process_executions": {
        "schemaName": "security",
        "tableName": "process_executions",
        "columns": {
          "command_line": {
            "name": "command_line",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Command line used to execute the process."
          },
          "end_time": {
            "name": "end_time",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the process execution ended."
          },
          "parent_process_id": {
            "name": "parent_process_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Process ID of the parent process."
          },
          "process_id": {
            "name": "process_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Process ID of the executed process."
          },
          "process_name": {
            "name": "process_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the executed process."
          },
          "security_host_id": {
            "name": "security_host_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the system where the process was executed."
          },
          "security_process_execution_id": {
            "name": "security_process_execution_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the process execution."
          },
          "start_time": {
            "name": "start_time",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the process execution started."
          },
          "user_name": {
            "name": "user_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Username of the user who executed the process."
          }
        },
        "uniquenessConstraints": {
          "process_executions_pkey": [
            "security_process_execution_id"
          ]
        },
        "foreignRelations": {
          "process_executions_security_host_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "hosts",
            "columnMapping": {
              "security_host_id": "security_host_id"
            }
          }
        },
        "description": "Table storing information about process executions, tracking application activity and system behavior."
      },
      "security_resource_definitions": {
        "schemaName": "security",
        "tableName": "resource_definitions",
        "columns": {
          "application_id": {
            "name": "application_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Owner application that manages this resource (for APPLICATION and DATA types)"
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "When the resource definition was created"
          },
          "created_by_id": {
            "name": "created_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Who created the resource definition"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of the resource"
          },
          "host_id": {
            "name": "host_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Host where the resource is located (for HOST types)"
          },
          "network_device_id": {
            "name": "network_device_id",
            "type": {
              "scalarType": "inet"
            },
            "nullable": "nullable",
            "description": "Network device where the resource is located (for NETWORK_DEVICE types)"
          },
          "resource_identifier": {
            "name": "resource_identifier",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the resource (table name, API endpoint, hostname, IP address, etc.)"
          },
          "resource_name": {
            "name": "resource_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the resource"
          },
          "resource_type": {
            "name": "resource_type",
            "type": {
              "scalarType": "security_resource_type"
            },
            "nullable": "nonNullable",
            "description": "Type of resource (DATA, APPLICATION, HOST, NETWORK_DEVICE)"
          },
          "security_resource_id": {
            "name": "security_resource_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the resource"
          }
        },
        "uniquenessConstraints": {
          "resource_definitions_pkey": [
            "security_resource_id"
          ]
        },
        "foreignRelations": {
          "resource_definitions_application_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "applications",
            "columnMapping": {
              "application_id": "app_mgmt_application_id"
            }
          },
          "resource_definitions_created_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "created_by_id": "enterprise_associate_id"
            }
          },
          "resource_definitions_host_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "hosts",
            "columnMapping": {
              "host_id": "security_host_id"
            }
          },
          "resource_definitions_network_device_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "devices",
            "columnMapping": {
              "network_device_id": "security_device_id"
            }
          }
        },
        "description": "Defines resources that can be secured through entitlements"
      },
      "security_role_entitlements": {
        "schemaName": "security",
        "tableName": "role_entitlements",
        "columns": {
          "active": {
            "name": "active",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Incicates that the entitlement is effective at this moment"
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the entitlement was added to the role"
          },
          "created_by_id": {
            "name": "created_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Who added the entitlement to the role"
          },
          "ended_at": {
            "name": "ended_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "When the entitlement was no longer effective"
          },
          "security_entitlement_id": {
            "name": "security_entitlement_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Reference to the entitlement"
          },
          "security_role_entitlement_id": {
            "name": "security_role_entitlement_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Reference to the role entitlement pair"
          },
          "security_role_id": {
            "name": "security_role_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Reference to the role"
          },
          "started_at": {
            "name": "started_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the entitlement became effective"
          },
          "updated_by_id": {
            "name": "updated_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Who added the entitlement to the role"
          }
        },
        "uniquenessConstraints": {
          "role_entitlements_pkey": [
            "security_role_entitlement_id"
          ]
        },
        "foreignRelations": {
          "role_entitlements_created_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "created_by_id": "enterprise_associate_id"
            }
          },
          "role_entitlements_security_entitlement_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "enhanced_entitlements",
            "columnMapping": {
              "security_entitlement_id": "security_entitlement_id"
            }
          },
          "role_entitlements_security_role_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "roles",
            "columnMapping": {
              "security_role_id": "security_role_id"
            }
          },
          "role_entitlements_updated_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "updated_by_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Maps roles to their constituent entitlements"
      },
      "security_roles": {
        "schemaName": "security",
        "tableName": "roles",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": "When the role was created"
          },
          "created_by_id": {
            "name": "created_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Who created the role"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of the role's purpose and scope"
          },
          "display_name": {
            "name": "display_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "User-friendly name for the role"
          },
          "managing_application_id": {
            "name": "managing_application_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Application that manages this role"
          },
          "owner_id": {
            "name": "owner_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Who owns/manages this role"
          },
          "role_name": {
            "name": "role_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Internal name for the role"
          },
          "security_role_id": {
            "name": "security_role_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the role"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "security_role_status"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current status of the role"
          }
        },
        "uniquenessConstraints": {
          "roles_pkey": [
            "security_role_id"
          ]
        },
        "foreignRelations": {
          "roles_created_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "created_by_id": "enterprise_associate_id"
            }
          },
          "roles_managing_application_id_fkey": {
            "foreignSchema": "app_mgmt",
            "foreignTable": "applications",
            "columnMapping": {
              "managing_application_id": "app_mgmt_application_id"
            }
          },
          "roles_owner_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "owner_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Defines roles that can be assigned to identities"
      },
      "security_running_services": {
        "schemaName": "security",
        "tableName": "running_services",
        "columns": {
          "running_service_name": {
            "name": "running_service_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the running service."
          },
          "security_host_id": {
            "name": "security_host_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the system with the running service."
          },
          "start_time": {
            "name": "start_time",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the service started running."
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Status of the running service (e.g., running, stopped)."
          }
        },
        "uniquenessConstraints": {
          "running_services_pkey": [
            "running_service_name",
            "security_host_id"
          ]
        },
        "foreignRelations": {
          "running_services_security_host_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "hosts",
            "columnMapping": {
              "security_host_id": "security_host_id"
            }
          }
        },
        "description": "Table storing information about running services on systems, tracking system services and their states."
      },
      "security_system_stats": {
        "schemaName": "security",
        "tableName": "system_stats",
        "columns": {
          "cpu_usage_percent": {
            "name": "cpu_usage_percent",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "CPU usage percentage."
          },
          "disk_free_gb": {
            "name": "disk_free_gb",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Free disk space in gigabytes."
          },
          "disk_total_gb": {
            "name": "disk_total_gb",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Total disk space in gigabytes."
          },
          "memory_total_gb": {
            "name": "memory_total_gb",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Total memory in gigabytes."
          },
          "memory_usage_gb": {
            "name": "memory_usage_gb",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Memory usage in gigabytes."
          },
          "security_host_id": {
            "name": "security_host_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the system for which statistics are recorded."
          },
          "security_system_stat_id": {
            "name": "security_system_stat_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the system statistics record."
          },
          "timestamp": {
            "name": "timestamp",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the statistics were recorded."
          }
        },
        "uniquenessConstraints": {
          "system_stats_pkey": [
            "security_system_stat_id"
          ]
        },
        "foreignRelations": {
          "system_stats_security_host_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "hosts",
            "columnMapping": {
              "security_host_id": "security_host_id"
            }
          }
        },
        "description": "Table storing system statistics, tracking resource usage and performance metrics."
      },
      "security_usb_device_usage": {
        "schemaName": "security",
        "tableName": "usb_device_usage",
        "columns": {
          "connection_time": {
            "name": "connection_time",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the USB device was connected."
          },
          "device_name": {
            "name": "device_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of the USB device."
          },
          "device_type": {
            "name": "device_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Type of the USB device."
          },
          "disconnection_time": {
            "name": "disconnection_time",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": "Timestamp when the USB device was disconnected."
          },
          "security_system_id": {
            "name": "security_system_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Identifier of the system where the USB device was used."
          },
          "security_usb_device_usage_id": {
            "name": "security_usb_device_usage_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": "Unique identifier for the USB device usage record."
          }
        },
        "uniquenessConstraints": {
          "usb_device_usage_pkey": [
            "security_usb_device_usage_id"
          ]
        },
        "foreignRelations": {
          "usb_device_usage_security_system_id_fkey": {
            "foreignSchema": "security",
            "foreignTable": "hosts",
            "columnMapping": {
              "security_system_id": "security_host_id"
            }
          }
        },
        "description": "Table storing information about USB device usage, tracking connection and disconnection times."
      },
      "small_business_banking_account_signatories": {
        "schemaName": "small_business_banking",
        "tableName": "account_signatories",
        "columns": {
          "daily_limit": {
            "name": "daily_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Maximum daily transaction limit for this signatory"
          },
          "end_date": {
            "name": "end_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when the signing authority expires (if applicable)"
          },
          "enterprise_party_id": {
            "name": "enterprise_party_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the enterprise party who has signing authority"
          },
          "is_active": {
            "name": "is_active",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Indicates if the signing authority is currently active"
          },
          "signatory_level": {
            "name": "signatory_level",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Level of signing authority (primary, secondary, view-only)"
          },
          "small_business_banking_account_id": {
            "name": "small_business_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the account"
          },
          "small_business_banking_account_signatory_id": {
            "name": "small_business_banking_account_signatory_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each account signatory record"
          },
          "start_date": {
            "name": "start_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date when the signing authority begins"
          }
        },
        "uniquenessConstraints": {
          "account_signatories_pkey": [
            "small_business_banking_account_signatory_id"
          ]
        },
        "foreignRelations": {
          "account_signatories_enterprise_party_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "parties",
            "columnMapping": {
              "enterprise_party_id": "enterprise_party_id"
            }
          },
          "account_signatories_small_business_banking_account_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "small_business_banking_account_id": "small_business_banking_account_id"
            }
          }
        },
        "description": "Identifies individuals who have authority to sign on or manage a business account"
      },
      "small_business_banking_accounts": {
        "schemaName": "small_business_banking",
        "tableName": "accounts",
        "columns": {
          "account_number": {
            "name": "account_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Unique account number visible to customers"
          },
          "account_type": {
            "name": "account_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of account (checking, savings, money market, etc.)"
          },
          "available_balance": {
            "name": "available_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Available balance after holds and pending transactions"
          },
          "balance": {
            "name": "balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current balance of the account"
          },
          "currency": {
            "name": "currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "ISO currency code for the account"
          },
          "enterprise_account_id": {
            "name": "enterprise_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "References the main account"
          },
          "interest_rate": {
            "name": "interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Current interest rate applied to the account (if applicable)"
          },
          "last_statement_date": {
            "name": "last_statement_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when the last statement was generated"
          },
          "opened_date": {
            "name": "opened_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date when the account was opened"
          },
          "overdraft_limit": {
            "name": "overdraft_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Maximum allowed overdraft amount"
          },
          "small_business_banking_account_id": {
            "name": "small_business_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each business account"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business that owns this account"
          },
          "small_business_banking_product_id": {
            "name": "small_business_banking_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the product this account is based on"
          },
          "statement_day": {
            "name": "statement_day",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Day of month/week when statements are generated"
          },
          "statement_frequency": {
            "name": "statement_frequency",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Frequency of account statements (daily, weekly, monthly)"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current status of the account (active, inactive, frozen, closed)"
          },
          "status_update_date_time": {
            "name": "status_update_date_time",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "When the status was last updated"
          }
        },
        "uniquenessConstraints": {
          "accounts_pkey": [
            "small_business_banking_account_id"
          ]
        },
        "foreignRelations": {
          "accounts_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "currency": "code"
            }
          },
          "accounts_enterprise_account_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "accounts",
            "columnMapping": {
              "enterprise_account_id": "enterprise_account_id"
            }
          },
          "accounts_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          },
          "accounts_small_business_banking_product_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "products",
            "columnMapping": {
              "small_business_banking_product_id": "small_business_banking_product_id"
            }
          }
        },
        "description": "Stores the business deposit and transaction accounts managed by the bank"
      },
      "small_business_banking_adverse_action_notices": {
        "schemaName": "small_business_banking",
        "tableName": "adverse_action_notices",
        "columns": {
          "credit_score": {
            "name": "credit_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Credit score disclosed (if applicable)"
          },
          "credit_score_disclosed": {
            "name": "credit_score_disclosed",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether credit score was disclosed"
          },
          "delivery_address": {
            "name": "delivery_address",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Address or email where notice was sent"
          },
          "delivery_date": {
            "name": "delivery_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date the notice was delivered"
          },
          "delivery_method": {
            "name": "delivery_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Method of delivery (mail, email, etc.)"
          },
          "ecoa_notice_included": {
            "name": "ecoa_notice_included",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether ECOA notice was included"
          },
          "fcra_notice_included": {
            "name": "fcra_notice_included",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether FCRA notice was included"
          },
          "generated_by_id": {
            "name": "generated_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Person or system that generated the notice"
          },
          "notice_date": {
            "name": "notice_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date the notice was generated"
          },
          "notice_file_path": {
            "name": "notice_file_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored copy of the notice"
          },
          "primary_reason": {
            "name": "primary_reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Primary reason for adverse action"
          },
          "right_to_appraisal_notice": {
            "name": "right_to_appraisal_notice",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether right to appraisal notice was included"
          },
          "score_factors": {
            "name": "score_factors",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Factors affecting the credit score"
          },
          "score_range_high": {
            "name": "score_range_high",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "High end of score range"
          },
          "score_range_low": {
            "name": "score_range_low",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Low end of score range"
          },
          "secondary_reasons": {
            "name": "secondary_reasons",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Secondary reasons for adverse action"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business"
          },
          "small_business_banking_decision_id": {
            "name": "small_business_banking_decision_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the credit decision"
          },
          "small_business_banking_notice_id": {
            "name": "small_business_banking_notice_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each adverse action notice"
          },
          "template_version": {
            "name": "template_version",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Version of the notice template used"
          }
        },
        "uniquenessConstraints": {
          "adverse_action_notices_pkey": [
            "small_business_banking_notice_id"
          ]
        },
        "foreignRelations": {
          "adverse_action_notices_generated_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "generated_by_id": "enterprise_associate_id"
            }
          },
          "adverse_action_notices_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          },
          "adverse_action_notices_small_business_banking_decision_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "credit_decisions",
            "columnMapping": {
              "small_business_banking_decision_id": "small_business_banking_decision_id"
            }
          }
        },
        "description": "Tracks adverse action notices sent to declined applicants"
      },
      "small_business_banking_beneficial_owner_verification": {
        "schemaName": "small_business_banking",
        "tableName": "beneficial_owner_verification",
        "columns": {
          "address_verified": {
            "name": "address_verified",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether address was verified"
          },
          "adverse_media_found": {
            "name": "adverse_media_found",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether adverse media was found"
          },
          "certification_date": {
            "name": "certification_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date of certification"
          },
          "certification_received": {
            "name": "certification_received",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether certification of beneficial ownership was received"
          },
          "exception_reason": {
            "name": "exception_reason",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Reason for exception (if applicable)"
          },
          "id_expiration_date": {
            "name": "id_expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Expiration date of the ID"
          },
          "id_issuing_country": {
            "name": "id_issuing_country",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Country that issued the ID"
          },
          "id_number": {
            "name": "id_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "ID number (masked for security)"
          },
          "id_type": {
            "name": "id_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Type of ID provided (driver's license, passport, etc.)"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional notes about the verification"
          },
          "ownership_percentage_verified": {
            "name": "ownership_percentage_verified",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether ownership percentage was verified"
          },
          "pep_status": {
            "name": "pep_status",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether person is a politically exposed person"
          },
          "performed_by_id": {
            "name": "performed_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Person who performed the verification"
          },
          "recertification_due_date": {
            "name": "recertification_due_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when recertification is due"
          },
          "sanctions_hit": {
            "name": "sanctions_hit",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether person appears on sanctions lists"
          },
          "screening_conducted": {
            "name": "screening_conducted",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether screening was conducted"
          },
          "screening_date": {
            "name": "screening_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date of screening"
          },
          "screening_results": {
            "name": "screening_results",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Results of screening"
          },
          "screening_system": {
            "name": "screening_system",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "System used for screening"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business"
          },
          "small_business_banking_business_owner_id": {
            "name": "small_business_banking_business_owner_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business owner"
          },
          "small_business_banking_verification_id": {
            "name": "small_business_banking_verification_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each verification record"
          },
          "ssn_verified": {
            "name": "ssn_verified",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether SSN was verified (for US persons)"
          },
          "tin_verified": {
            "name": "tin_verified",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether TIN was verified (for non-US persons)"
          },
          "verification_date": {
            "name": "verification_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date the verification was performed"
          },
          "verification_method": {
            "name": "verification_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Method used to verify beneficial ownership"
          },
          "verification_status": {
            "name": "verification_status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Status of verification (pending, completed, exception)"
          }
        },
        "uniquenessConstraints": {
          "beneficial_owner_verification_pkey": [
            "small_business_banking_verification_id"
          ]
        },
        "foreignRelations": {
          "beneficial_owner_verificatio_small_business_banking_busin_fkey1": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "business_owners",
            "columnMapping": {
              "small_business_banking_business_owner_id": "small_business_banking_business_owner_id"
            }
          },
          "beneficial_owner_verification_performed_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "performed_by_id": "enterprise_associate_id"
            }
          },
          "beneficial_owner_verification_small_business_banking_busin_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          }
        },
        "description": "Tracks verification of beneficial owners as required by FinCEN"
      },
      "small_business_banking_business_card_accounts": {
        "schemaName": "small_business_banking",
        "tableName": "business_card_accounts",
        "columns": {
          "account_type": {
            "name": "account_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Categorization of the account (business, corporate, etc.)"
          },
          "annual_review_date": {
            "name": "annual_review_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when account should be reviewed annually"
          },
          "business_structure": {
            "name": "business_structure",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Legal structure of the business for credit purposes"
          },
          "card_account_id": {
            "name": "card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the primary credit card account in the credit_cards schema"
          },
          "credit_cards_product_id": {
            "name": "credit_cards_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the card product in credit_cards schema"
          },
          "expense_category_setup": {
            "name": "expense_category_setup",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Type of expense categorization setup (standard, custom)"
          },
          "liability_type": {
            "name": "liability_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Liability arrangement (business liability, joint liability, etc.)"
          },
          "linked_deposit_account_id": {
            "name": "linked_deposit_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to deposit account for automatic payments"
          },
          "ownership_type": {
            "name": "ownership_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of ownership for this card account (sole proprietor, partnership, corporation)"
          },
          "relationship_manager_id": {
            "name": "relationship_manager_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to the relationship manager for this business"
          },
          "small_business_banking_business_card_account_id": {
            "name": "small_business_banking_business_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each business credit card account"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business that owns the credit card account"
          },
          "tax_id_reporting": {
            "name": "tax_id_reporting",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Tax ID used for reporting purposes"
          }
        },
        "uniquenessConstraints": {
          "business_card_accounts_pkey": [
            "small_business_banking_business_card_account_id"
          ]
        },
        "foreignRelations": {
          "business_card_accounts_card_account_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_accounts",
            "columnMapping": {
              "card_account_id": "credit_cards_card_account_id"
            }
          },
          "business_card_accounts_credit_cards_product_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "card_products",
            "columnMapping": {
              "credit_cards_product_id": "credit_cards_product_id"
            }
          },
          "business_card_accounts_linked_deposit_account_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "linked_deposit_account_id": "small_business_banking_account_id"
            }
          },
          "business_card_accounts_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          }
        },
        "description": "Links businesses to credit card accounts and stores business-specific attributes"
      },
      "small_business_banking_business_card_users": {
        "schemaName": "small_business_banking",
        "tableName": "business_card_users",
        "columns": {
          "can_manage_all_cards": {
            "name": "can_manage_all_cards",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether user can manage all company cards"
          },
          "can_view_all_transactions": {
            "name": "can_view_all_transactions",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether user can view all company transactions"
          },
          "credit_cards_card_id": {
            "name": "credit_cards_card_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the specific card in the credit_cards schema"
          },
          "department": {
            "name": "department",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Department or cost center for this cardholder"
          },
          "employee_id": {
            "name": "employee_id",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Employee ID within the business if applicable"
          },
          "enterprise_party_id": {
            "name": "enterprise_party_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the enterprise party who is issued a card"
          },
          "merchant_category_restrictions": {
            "name": "merchant_category_restrictions",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "JSON object describing merchant category restrictions"
          },
          "role": {
            "name": "role",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Role of user in the business (owner, employee, accountant, etc.)"
          },
          "small_business_banking_business_card_account_id": {
            "name": "small_business_banking_business_card_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business card account"
          },
          "small_business_banking_business_card_user_id": {
            "name": "small_business_banking_business_card_user_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each business card user"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business"
          },
          "spending_limit": {
            "name": "spending_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Monthly spending limit for this cardholder"
          },
          "transaction_approval_required": {
            "name": "transaction_approval_required",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether transactions require approval"
          }
        },
        "uniquenessConstraints": {
          "business_card_users_pkey": [
            "small_business_banking_business_card_user_id"
          ]
        },
        "foreignRelations": {
          "business_card_users_credit_cards_card_id_fkey": {
            "foreignSchema": "credit_cards",
            "foreignTable": "cards",
            "columnMapping": {
              "credit_cards_card_id": "credit_cards_card_id"
            }
          },
          "business_card_users_enterprise_party_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "parties",
            "columnMapping": {
              "enterprise_party_id": "enterprise_party_id"
            }
          },
          "business_card_users_small_business_banking_business_card_a_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "business_card_accounts",
            "columnMapping": {
              "small_business_banking_business_card_account_id": "small_business_banking_business_card_account_id"
            }
          },
          "business_card_users_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          }
        },
        "description": "Manages employee and owner cards issued under a business credit card account"
      },
      "small_business_banking_business_due_diligence": {
        "schemaName": "small_business_banking",
        "tableName": "business_due_diligence",
        "columns": {
          "actual_activity_consistent": {
            "name": "actual_activity_consistent",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether actual activity is consistent with expected"
          },
          "address_verified": {
            "name": "address_verified",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether business address was verified"
          },
          "approval_date": {
            "name": "approval_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date of approval"
          },
          "approval_status": {
            "name": "approval_status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Status of approval (pending, approved, rejected)"
          },
          "approved_by_id": {
            "name": "approved_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Person who approved the due diligence"
          },
          "business_documents_reviewed": {
            "name": "business_documents_reviewed",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "List of business documents reviewed"
          },
          "business_verified": {
            "name": "business_verified",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether business identity was verified"
          },
          "diligence_date": {
            "name": "diligence_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date the due diligence was performed"
          },
          "diligence_type": {
            "name": "diligence_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of due diligence (initial, ongoing, enhanced)"
          },
          "expected_activity": {
            "name": "expected_activity",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of expected account activity"
          },
          "high_risk_factors": {
            "name": "high_risk_factors",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "High-risk factors identified during diligence"
          },
          "legal_structure_verified": {
            "name": "legal_structure_verified",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether legal structure was verified"
          },
          "next_review_date": {
            "name": "next_review_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date when next review is due"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional notes about the due diligence"
          },
          "performed_by_id": {
            "name": "performed_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Person who performed the due diligence"
          },
          "review_frequency": {
            "name": "review_frequency",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Frequency of ongoing reviews (monthly, quarterly, annual)"
          },
          "risk_rating": {
            "name": "risk_rating",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Risk rating assigned (low, medium, high)"
          },
          "screening_results": {
            "name": "screening_results",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Results of screening against watchlists, PEPs, etc."
          },
          "site_visit_conducted": {
            "name": "site_visit_conducted",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether a site visit was conducted"
          },
          "site_visit_date": {
            "name": "site_visit_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date of site visit (if applicable)"
          },
          "site_visit_notes": {
            "name": "site_visit_notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Notes from site visit"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business"
          },
          "small_business_banking_due_diligence_id": {
            "name": "small_business_banking_due_diligence_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each due diligence record"
          },
          "tin_verified": {
            "name": "tin_verified",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "description": "Whether tax ID was verified"
          },
          "verification_method": {
            "name": "verification_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Method used to verify business (documents, database, etc.)"
          }
        },
        "uniquenessConstraints": {
          "business_due_diligence_pkey": [
            "small_business_banking_due_diligence_id"
          ]
        },
        "foreignRelations": {
          "business_due_diligence_approved_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "approved_by_id": "enterprise_associate_id"
            }
          },
          "business_due_diligence_performed_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "performed_by_id": "enterprise_associate_id"
            }
          },
          "business_due_diligence_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          }
        },
        "description": "Documents the due diligence process for business customers"
      },
      "small_business_banking_business_expense_categories": {
        "schemaName": "small_business_banking",
        "tableName": "business_expense_categories",
        "columns": {
          "budget_amount": {
            "name": "budget_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Monthly budget amount for this category"
          },
          "category_description": {
            "name": "category_description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of what expenses belong in this category"
          },
          "category_name": {
            "name": "category_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the expense category"
          },
          "gl_account_code": {
            "name": "gl_account_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "General ledger account code for accounting integration"
          },
          "is_tax_deductible": {
            "name": "is_tax_deductible",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether expenses in this category are typically tax deductible"
          },
          "parent_category_id": {
            "name": "parent_category_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to parent category for hierarchical categorization"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business"
          },
          "small_business_banking_category_id": {
            "name": "small_business_banking_category_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each expense category"
          }
        },
        "uniquenessConstraints": {
          "business_expense_categories_pkey": [
            "small_business_banking_category_id"
          ]
        },
        "foreignRelations": {
          "business_expense_categories_parent_category_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "business_expense_categories",
            "columnMapping": {
              "parent_category_id": "small_business_banking_category_id"
            }
          },
          "business_expense_categories_small_business_banking_busines_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          }
        },
        "description": "Defines custom expense categories for business card transactions"
      },
      "small_business_banking_business_owners": {
        "schemaName": "small_business_banking",
        "tableName": "business_owners",
        "columns": {
          "enterprise_party_id": {
            "name": "enterprise_party_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the enterprise party record representing this individual"
          },
          "is_guarantor": {
            "name": "is_guarantor",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Indicates if this owner serves as a loan guarantor"
          },
          "ownership_percentage": {
            "name": "ownership_percentage",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Percentage of business ownership (0-100)"
          },
          "role": {
            "name": "role",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Role in the business (e.g., CEO, CFO, Managing Partner)"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business the person owns or controls"
          },
          "small_business_banking_business_owner_id": {
            "name": "small_business_banking_business_owner_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each business owner record"
          }
        },
        "uniquenessConstraints": {
          "business_owners_pkey": [
            "small_business_banking_business_owner_id"
          ]
        },
        "foreignRelations": {
          "business_owners_enterprise_party_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "parties",
            "columnMapping": {
              "enterprise_party_id": "enterprise_party_id"
            }
          },
          "business_owners_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          }
        },
        "description": "Identifies individuals who own or have significant control over a business entity"
      },
      "small_business_banking_business_risk_assessments": {
        "schemaName": "small_business_banking",
        "tableName": "business_risk_assessments",
        "columns": {
          "assessment_date": {
            "name": "assessment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date of the risk assessment"
          },
          "assessment_type": {
            "name": "assessment_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of assessment (AML, credit, operational, etc.)"
          },
          "conducted_by_id": {
            "name": "conducted_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Person or team that conducted the assessment"
          },
          "customer_risk_score": {
            "name": "customer_risk_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Risk score based on customer attributes (1-5 scale)"
          },
          "geographic_risk_score": {
            "name": "geographic_risk_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Risk score based on geographic location (1-5 scale)"
          },
          "industry_risk_score": {
            "name": "industry_risk_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Risk score based on industry (1-5 scale)"
          },
          "methodology": {
            "name": "methodology",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "Methodology used for the assessment"
          },
          "mitigating_factors": {
            "name": "mitigating_factors",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Factors that mitigate the identified risks"
          },
          "next_review_date": {
            "name": "next_review_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date when the next assessment should be conducted"
          },
          "overall_risk_score": {
            "name": "overall_risk_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Combined overall risk score (1-5 scale)"
          },
          "product_risk_score": {
            "name": "product_risk_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Risk score based on products used (1-5 scale)"
          },
          "rationale": {
            "name": "rationale",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "Rationale for the risk scores and rating"
          },
          "recommended_actions": {
            "name": "recommended_actions",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Actions recommended to address risks"
          },
          "risk_rating": {
            "name": "risk_rating",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Overall risk rating (low, medium, high)"
          },
          "small_business_banking_assessment_id": {
            "name": "small_business_banking_assessment_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each risk assessment"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business being assessed"
          },
          "transaction_risk_score": {
            "name": "transaction_risk_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Risk score based on transaction patterns (1-5 scale)"
          }
        },
        "uniquenessConstraints": {
          "business_risk_assessments_pkey": [
            "small_business_banking_assessment_id"
          ]
        },
        "foreignRelations": {
          "business_risk_assessments_conducted_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "conducted_by_id": "enterprise_associate_id"
            }
          },
          "business_risk_assessments_small_business_banking_business__fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          }
        },
        "description": "Stores risk assessments performed on small business customers"
      },
      "small_business_banking_business_transaction_categories": {
        "schemaName": "small_business_banking",
        "tableName": "business_transaction_categories",
        "columns": {
          "created_by_id": {
            "name": "created_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User who created this categorization"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional notes about this transaction categorization"
          },
          "receipt_image_path": {
            "name": "receipt_image_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored receipt image"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business"
          },
          "small_business_banking_category_id": {
            "name": "small_business_banking_category_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business expense category"
          },
          "small_business_banking_transaction_category_id": {
            "name": "small_business_banking_transaction_category_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each transaction categorization"
          },
          "tax_relevant": {
            "name": "tax_relevant",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Flag indicating transaction is relevant for tax purposes"
          },
          "transaction_id": {
            "name": "transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the transaction in credit_cards schema"
          }
        },
        "uniquenessConstraints": {
          "business_transaction_categories_pkey": [
            "small_business_banking_transaction_category_id"
          ]
        },
        "foreignRelations": {
          "business_transaction_categori_small_business_banking_busin_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          },
          "business_transaction_categori_small_business_banking_categ_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "business_expense_categories",
            "columnMapping": {
              "small_business_banking_category_id": "small_business_banking_category_id"
            }
          },
          "business_transaction_categories_created_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "created_by_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Maps credit card transactions to business expense categories"
      },
      "small_business_banking_businesses": {
        "schemaName": "small_business_banking",
        "tableName": "businesses",
        "columns": {
          "annual_revenue": {
            "name": "annual_revenue",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Annual revenue amount for the business"
          },
          "business_name": {
            "name": "business_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Operating name of the business"
          },
          "business_type": {
            "name": "business_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of business entity (e.g., LLC, Corporation, Sole Proprietorship)"
          },
          "employee_count": {
            "name": "employee_count",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of employees in the business"
          },
          "enterprise_party_id": {
            "name": "enterprise_party_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the enterprise party record representing this business"
          },
          "establishment_date": {
            "name": "establishment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date the business was established"
          },
          "industry_code": {
            "name": "industry_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Standard industry classification code for the business"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each business entity"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current status of the business (active, inactive, suspended, etc.)"
          },
          "tax_id": {
            "name": "tax_id",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Tax identification number for the business (e.g., EIN)"
          },
          "website": {
            "name": "website",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Business website URL"
          }
        },
        "uniquenessConstraints": {
          "businesses_pkey": [
            "small_business_banking_business_id"
          ]
        },
        "foreignRelations": {
          "businesses_enterprise_party_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "parties",
            "columnMapping": {
              "enterprise_party_id": "enterprise_party_id"
            }
          }
        },
        "description": "Stores core information about small businesses that are customers of the bank"
      },
      "small_business_banking_collateral": {
        "schemaName": "small_business_banking",
        "tableName": "collateral",
        "columns": {
          "collateral_type": {
            "name": "collateral_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of collateral (real estate, equipment, vehicle, inventory, etc.)"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "Detailed description of the collateral"
          },
          "identification_number": {
            "name": "identification_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Serial number, VIN, or other identifier for the collateral"
          },
          "insurance_expiry_date": {
            "name": "insurance_expiry_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Expiration date of the insurance policy"
          },
          "insurance_policy_number": {
            "name": "insurance_policy_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Insurance policy number for this collateral"
          },
          "insurance_provider": {
            "name": "insurance_provider",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of insurance company covering this collateral"
          },
          "lien_filing_number": {
            "name": "lien_filing_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reference number for the lien filing"
          },
          "lien_position": {
            "name": "lien_position",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Position of the bank's lien on this collateral (1st, 2nd, etc.)"
          },
          "location": {
            "name": "location",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Physical location of the collateral item"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business that owns the collateral"
          },
          "small_business_banking_collateral_id": {
            "name": "small_business_banking_collateral_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each collateral item"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current status of the collateral (active, sold, repossessed)"
          },
          "valuation_date": {
            "name": "valuation_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date when the value was determined"
          },
          "valuation_type": {
            "name": "valuation_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Method of valuation (appraisal, estimate, purchase price)"
          },
          "value": {
            "name": "value",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Estimated or appraised value of the collateral"
          }
        },
        "uniquenessConstraints": {
          "collateral_pkey": [
            "small_business_banking_collateral_id"
          ]
        },
        "foreignRelations": {
          "collateral_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          }
        },
        "description": "Tracks assets pledged as security for loans and credit facilities"
      },
      "small_business_banking_compliance_cases": {
        "schemaName": "small_business_banking",
        "tableName": "compliance_cases",
        "columns": {
          "assigned_to": {
            "name": "assigned_to",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Person or team assigned to the case"
          },
          "case_type": {
            "name": "case_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of compliance case (AML, KYC, fraud, fair lending, etc.)"
          },
          "closed_date": {
            "name": "closed_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date the case was closed"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "Description of the compliance case"
          },
          "escalated": {
            "name": "escalated",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether the case was escalated"
          },
          "escalation_date": {
            "name": "escalation_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date of escalation if applicable"
          },
          "escalation_reason": {
            "name": "escalation_reason",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Reason for escalation"
          },
          "opened_date": {
            "name": "opened_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date the case was opened"
          },
          "priority": {
            "name": "priority",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Priority level (high, medium, low)"
          },
          "resolution": {
            "name": "resolution",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of the resolution"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business"
          },
          "small_business_banking_case_id": {
            "name": "small_business_banking_case_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each compliance case"
          },
          "source": {
            "name": "source",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Source that initiated the case (system alert, manual review, exam)"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Status of the case (open, in review, closed)"
          }
        },
        "uniquenessConstraints": {
          "compliance_cases_pkey": [
            "small_business_banking_case_id"
          ]
        },
        "foreignRelations": {
          "compliance_cases_assigned_to_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "assigned_to": "enterprise_associate_id"
            }
          },
          "compliance_cases_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          }
        },
        "description": "Tracks compliance cases related to small business accounts"
      },
      "small_business_banking_compliance_requirements": {
        "schemaName": "small_business_banking",
        "tableName": "compliance_requirements",
        "columns": {
          "business_impact": {
            "name": "business_impact",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "How the requirement impacts business banking"
          },
          "control_measures": {
            "name": "control_measures",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Measures in place to ensure compliance"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "Detailed description of the requirement"
          },
          "effective_date": {
            "name": "effective_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date when the requirement became effective"
          },
          "end_date": {
            "name": "end_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when the requirement expires (if applicable)"
          },
          "is_active": {
            "name": "is_active",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether this requirement is currently active"
          },
          "regulation": {
            "name": "regulation",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Associated regulation or law"
          },
          "regulatory_authority": {
            "name": "regulatory_authority",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Authority that enforces the requirement"
          },
          "requirement_name": {
            "name": "requirement_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of the compliance requirement"
          },
          "requirement_owner": {
            "name": "requirement_owner",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Department or role responsible for compliance"
          },
          "small_business_banking_requirement_id": {
            "name": "small_business_banking_requirement_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each compliance requirement"
          },
          "verification_frequency": {
            "name": "verification_frequency",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "How often compliance is verified (daily, monthly, quarterly, annual)"
          },
          "verification_procedure": {
            "name": "verification_procedure",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of the verification procedure"
          }
        },
        "uniquenessConstraints": {
          "compliance_requirements_pkey": [
            "small_business_banking_requirement_id"
          ]
        },
        "foreignRelations": {
          "compliance_requirements_requirement_owner_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "requirement_owner": "enterprise_associate_id"
            }
          }
        },
        "description": "Catalogs compliance requirements affecting small business banking"
      },
      "small_business_banking_credit_decisions": {
        "schemaName": "small_business_banking",
        "tableName": "credit_decisions",
        "columns": {
          "annual_revenue": {
            "name": "annual_revenue",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Annual revenue considered in decision"
          },
          "application_id": {
            "name": "application_id",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Application identifier"
          },
          "collateral_value": {
            "name": "collateral_value",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Value of collateral (if applicable)"
          },
          "credit_score": {
            "name": "credit_score",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Credit score used in decision"
          },
          "credit_score_model": {
            "name": "credit_score_model",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Model used for credit score"
          },
          "debt_service_coverage_ratio": {
            "name": "debt_service_coverage_ratio",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Debt service coverage ratio calculated"
          },
          "decision_date": {
            "name": "decision_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date and time of the decision"
          },
          "decision_factors": {
            "name": "decision_factors",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Factors that influenced the decision"
          },
          "decision_made_by_id": {
            "name": "decision_made_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Person or system that made the decision"
          },
          "decision_notes": {
            "name": "decision_notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional notes about the decision"
          },
          "decision_outcome": {
            "name": "decision_outcome",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Outcome of the decision (approved, declined, counter-offer)"
          },
          "decision_type": {
            "name": "decision_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of decision (automated, manual, hybrid)"
          },
          "exception_approver": {
            "name": "exception_approver",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Person who approved the exception"
          },
          "exception_made": {
            "name": "exception_made",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether an exception to policy was made"
          },
          "exception_reason": {
            "name": "exception_reason",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Reason for the exception (if applicable)"
          },
          "loan_to_value_ratio": {
            "name": "loan_to_value_ratio",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Loan to value ratio (if applicable)"
          },
          "product_type": {
            "name": "product_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of credit product (loan, line of credit, card)"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business"
          },
          "small_business_banking_decision_id": {
            "name": "small_business_banking_decision_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each credit decision"
          },
          "time_in_business": {
            "name": "time_in_business",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Time in business (months) considered in decision"
          }
        },
        "uniquenessConstraints": {
          "credit_decisions_pkey": [
            "small_business_banking_decision_id"
          ]
        },
        "foreignRelations": {
          "credit_decisions_decision_made_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "decision_made_by_id": "enterprise_associate_id"
            }
          },
          "credit_decisions_exception_approver_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "exception_approver": "enterprise_associate_id"
            }
          },
          "credit_decisions_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          }
        },
        "description": "Documents credit decisions for regulatory review and fair lending analysis"
      },
      "small_business_banking_credit_lines": {
        "schemaName": "small_business_banking",
        "tableName": "credit_lines",
        "columns": {
          "annual_fee": {
            "name": "annual_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Annual fee charged for maintaining the credit line"
          },
          "available_credit": {
            "name": "available_credit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Current amount available to be drawn"
          },
          "credit_limit": {
            "name": "credit_limit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Maximum amount that can be borrowed"
          },
          "credit_line_number": {
            "name": "credit_line_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Unique credit line number visible to customers"
          },
          "draw_period_months": {
            "name": "draw_period_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Duration in months of the draw period"
          },
          "interest_rate": {
            "name": "interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Annual interest rate for the credit line"
          },
          "interest_type": {
            "name": "interest_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of interest rate (fixed, variable)"
          },
          "minimum_payment_amount": {
            "name": "minimum_payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Minimum fixed amount required as monthly payment"
          },
          "minimum_payment_percentage": {
            "name": "minimum_payment_percentage",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Minimum percentage of outstanding balance required as monthly payment"
          },
          "outstanding_balance": {
            "name": "outstanding_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current balance owed on the credit line"
          },
          "rate_spread": {
            "name": "rate_spread",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Spread over the reference rate for variable rate credit lines"
          },
          "reference_rate": {
            "name": "reference_rate",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reference rate for variable rate credit lines (e.g., PRIME, SOFR)"
          },
          "renewal_date": {
            "name": "renewal_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when the credit line is up for renewal"
          },
          "repayment_period_months": {
            "name": "repayment_period_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Duration in months of the repayment period"
          },
          "small_business_banking_account_id": {
            "name": "small_business_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the associated account for fund disbursement and payments"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business that has the credit line"
          },
          "small_business_banking_credit_line_id": {
            "name": "small_business_banking_credit_line_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each credit line"
          },
          "small_business_banking_product_id": {
            "name": "small_business_banking_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the credit line product"
          },
          "start_date": {
            "name": "start_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date when the credit line becomes available"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current status of the credit line (active, inactive, frozen, closed)"
          }
        },
        "uniquenessConstraints": {
          "credit_lines_pkey": [
            "small_business_banking_credit_line_id"
          ]
        },
        "foreignRelations": {
          "credit_lines_small_business_banking_account_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "small_business_banking_account_id": "small_business_banking_account_id"
            }
          },
          "credit_lines_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          },
          "credit_lines_small_business_banking_product_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "products",
            "columnMapping": {
              "small_business_banking_product_id": "small_business_banking_product_id"
            }
          }
        },
        "description": "Manages revolving credit facilities provided to small businesses"
      },
      "small_business_banking_documents": {
        "schemaName": "small_business_banking",
        "tableName": "documents",
        "columns": {
          "created_by_id": {
            "name": "created_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User that created the document record"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Description of the document"
          },
          "document_date": {
            "name": "document_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date associated with the document content"
          },
          "document_type": {
            "name": "document_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of document (tax return, financial statement, business license, etc.)"
          },
          "expiration_date": {
            "name": "expiration_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when the document expires (if applicable)"
          },
          "file_name": {
            "name": "file_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Original file name of the document"
          },
          "file_path": {
            "name": "file_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Path to the stored document file"
          },
          "file_size": {
            "name": "file_size",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Size of the file in bytes"
          },
          "file_type": {
            "name": "file_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "MIME type or format of the document"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business the document belongs to"
          },
          "small_business_banking_document_id": {
            "name": "small_business_banking_document_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each document record"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Status of the document (active, archived, expired)"
          },
          "upload_date": {
            "name": "upload_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date the document was uploaded"
          }
        },
        "uniquenessConstraints": {
          "documents_pkey": [
            "small_business_banking_document_id"
          ]
        },
        "foreignRelations": {
          "documents_created_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "created_by_id": "enterprise_associate_id"
            }
          },
          "documents_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          }
        },
        "description": "Stores metadata about business documents with references to their file locations"
      },
      "small_business_banking_loan_collateral": {
        "schemaName": "small_business_banking",
        "tableName": "loan_collateral",
        "columns": {
          "collateral_percentage": {
            "name": "collateral_percentage",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Percentage of the collateral's value assigned to this loan"
          },
          "small_business_banking_collateral_id": {
            "name": "small_business_banking_collateral_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the collateral item"
          },
          "small_business_banking_loan_collateral_id": {
            "name": "small_business_banking_loan_collateral_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each loan-collateral association"
          },
          "small_business_banking_loan_id": {
            "name": "small_business_banking_loan_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the loan secured by the collateral"
          }
        },
        "uniquenessConstraints": {
          "loan_collateral_pkey": [
            "small_business_banking_loan_collateral_id"
          ]
        },
        "foreignRelations": {
          "loan_collateral_small_business_banking_collateral_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "collateral",
            "columnMapping": {
              "small_business_banking_collateral_id": "small_business_banking_collateral_id"
            }
          },
          "loan_collateral_small_business_banking_loan_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "loans",
            "columnMapping": {
              "small_business_banking_loan_id": "small_business_banking_loan_id"
            }
          }
        },
        "description": "Junction table linking collateral items to specific loans they secure"
      },
      "small_business_banking_loan_fair_lending": {
        "schemaName": "small_business_banking",
        "tableName": "loan_fair_lending",
        "columns": {
          "action_taken": {
            "name": "action_taken",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Action taken (approved, denied, withdrawn, etc.)"
          },
          "amount_approved": {
            "name": "amount_approved",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Approved loan amount (if applicable)"
          },
          "application_date": {
            "name": "application_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date the loan application was received"
          },
          "census_tract": {
            "name": "census_tract",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Census tract of the business location"
          },
          "decision_date": {
            "name": "decision_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date of the credit decision"
          },
          "denial_reason_1": {
            "name": "denial_reason_1",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Primary reason for denial (if applicable)"
          },
          "denial_reason_2": {
            "name": "denial_reason_2",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Secondary reason for denial (if applicable)"
          },
          "denial_reason_3": {
            "name": "denial_reason_3",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Tertiary reason for denial (if applicable)"
          },
          "denial_reason_4": {
            "name": "denial_reason_4",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Quaternary reason for denial (if applicable)"
          },
          "exemption_claimed": {
            "name": "exemption_claimed",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether an exemption from reporting was claimed"
          },
          "exemption_reason": {
            "name": "exemption_reason",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reason for reporting exemption (if applicable)"
          },
          "lgbtq_owned": {
            "name": "lgbtq_owned",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether business is LGBTQ-owned"
          },
          "loan_amount": {
            "name": "loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Requested loan amount"
          },
          "loan_purpose": {
            "name": "loan_purpose",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Purpose of the loan"
          },
          "loan_type": {
            "name": "loan_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of loan (term loan, line of credit, etc.)"
          },
          "minority_owned": {
            "name": "minority_owned",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether business is minority-owned"
          },
          "msa_md": {
            "name": "msa_md",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Metropolitan Statistical Area/Metropolitan Division code"
          },
          "naics_code": {
            "name": "naics_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "North American Industry Classification System code"
          },
          "number_of_employees": {
            "name": "number_of_employees",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of business employees"
          },
          "rate_spread": {
            "name": "rate_spread",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Difference between APR and average prime offer rate"
          },
          "reported_revenue": {
            "name": "reported_revenue",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Gross annual revenue of the business as reported"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business"
          },
          "small_business_banking_lending_record_id": {
            "name": "small_business_banking_lending_record_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each fair lending record"
          },
          "small_business_banking_loan_id": {
            "name": "small_business_banking_loan_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the loan"
          },
          "veteran_owned": {
            "name": "veteran_owned",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether business is veteran-owned"
          },
          "women_owned": {
            "name": "women_owned",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": "Whether business is women-owned"
          }
        },
        "uniquenessConstraints": {
          "loan_fair_lending_pkey": [
            "small_business_banking_lending_record_id"
          ]
        },
        "foreignRelations": {
          "loan_fair_lending_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          },
          "loan_fair_lending_small_business_banking_loan_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "loans",
            "columnMapping": {
              "small_business_banking_loan_id": "small_business_banking_loan_id"
            }
          }
        },
        "description": "Captures data required for small business lending fair lending analysis and reporting"
      },
      "small_business_banking_loans": {
        "schemaName": "small_business_banking",
        "tableName": "loans",
        "columns": {
          "balloon_payment": {
            "name": "balloon_payment",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Final balloon payment amount (if applicable)"
          },
          "disbursal_date": {
            "name": "disbursal_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when loan funds were disbursed"
          },
          "first_payment_date": {
            "name": "first_payment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when the first payment is due"
          },
          "interest_rate": {
            "name": "interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Annual interest rate for the loan"
          },
          "interest_type": {
            "name": "interest_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of interest rate (fixed, variable, etc.)"
          },
          "loan_amount": {
            "name": "loan_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Original principal amount of the loan"
          },
          "loan_number": {
            "name": "loan_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Unique loan number visible to customers"
          },
          "maturity_date": {
            "name": "maturity_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when the loan is scheduled to be fully paid"
          },
          "outstanding_balance": {
            "name": "outstanding_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Current balance remaining on the loan"
          },
          "payment_amount": {
            "name": "payment_amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Regular payment amount"
          },
          "payment_frequency": {
            "name": "payment_frequency",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Frequency of payments (weekly, monthly, quarterly)"
          },
          "purpose": {
            "name": "purpose",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Stated purpose of the loan"
          },
          "rate_spread": {
            "name": "rate_spread",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Spread over the reference rate for variable rate loans"
          },
          "reference_rate": {
            "name": "reference_rate",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reference rate for variable rate loans (e.g., PRIME, SOFR)"
          },
          "small_business_banking_account_id": {
            "name": "small_business_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the associated account for fund disbursement and payments"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the business receiving the loan"
          },
          "small_business_banking_loan_id": {
            "name": "small_business_banking_loan_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each loan"
          },
          "small_business_banking_product_id": {
            "name": "small_business_banking_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the loan product"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Current status of the loan (pending, active, paid, defaulted)"
          },
          "term_months": {
            "name": "term_months",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Duration of the loan in months"
          }
        },
        "uniquenessConstraints": {
          "loans_pkey": [
            "small_business_banking_loan_id"
          ]
        },
        "foreignRelations": {
          "loans_small_business_banking_account_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "small_business_banking_account_id": "small_business_banking_account_id"
            }
          },
          "loans_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          },
          "loans_small_business_banking_product_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "products",
            "columnMapping": {
              "small_business_banking_product_id": "small_business_banking_product_id"
            }
          }
        },
        "description": "Stores information about term loans issued to small businesses"
      },
      "small_business_banking_payments": {
        "schemaName": "small_business_banking",
        "tableName": "payments",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Payment amount"
          },
          "credit_card_id": {
            "name": "credit_card_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to the credit card being paid (for card payments)"
          },
          "destination_account_id": {
            "name": "destination_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to the account funds are deposited to (for internal transfers)"
          },
          "effective_date": {
            "name": "effective_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date the payment is applied to the account"
          },
          "external_reference": {
            "name": "external_reference",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "External reference number for the payment"
          },
          "fees_portion": {
            "name": "fees_portion",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Portion of payment applied to fees"
          },
          "interest_portion": {
            "name": "interest_portion",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Portion of payment applied to interest"
          },
          "memo": {
            "name": "memo",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Additional payment information or notes"
          },
          "payment_date": {
            "name": "payment_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date the payment was made or scheduled"
          },
          "payment_method": {
            "name": "payment_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Method of payment (ACH, wire, internal transfer, check)"
          },
          "payment_type": {
            "name": "payment_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of payment (principal, interest, fees, or combination)"
          },
          "principal_portion": {
            "name": "principal_portion",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Portion of payment applied to principal"
          },
          "small_business_banking_credit_line_id": {
            "name": "small_business_banking_credit_line_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to the credit line being paid (for credit line payments)"
          },
          "small_business_banking_loan_id": {
            "name": "small_business_banking_loan_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to the loan being paid (for loan payments)"
          },
          "small_business_banking_payment_id": {
            "name": "small_business_banking_payment_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each payment"
          },
          "source_account_id": {
            "name": "source_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to the account funds are drawn from (for internal transfers)"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Status of the payment (pending, processed, failed)"
          }
        },
        "uniquenessConstraints": {
          "payments_pkey": [
            "small_business_banking_payment_id"
          ]
        },
        "foreignRelations": {
          "payments_credit_card_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "business_card_accounts",
            "columnMapping": {
              "credit_card_id": "small_business_banking_business_card_account_id"
            }
          },
          "payments_destination_account_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "destination_account_id": "small_business_banking_account_id"
            }
          },
          "payments_small_business_banking_credit_line_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "credit_lines",
            "columnMapping": {
              "small_business_banking_credit_line_id": "small_business_banking_credit_line_id"
            }
          },
          "payments_small_business_banking_loan_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "loans",
            "columnMapping": {
              "small_business_banking_loan_id": "small_business_banking_loan_id"
            }
          },
          "payments_source_account_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "source_account_id": "small_business_banking_account_id"
            }
          }
        },
        "description": "Tracks payments made against loans, credit lines, credit cards, and between accounts"
      },
      "small_business_banking_products": {
        "schemaName": "small_business_banking",
        "tableName": "products",
        "columns": {
          "base_interest_rate": {
            "name": "base_interest_rate",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Standard interest rate for the product (if applicable)"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Detailed product description"
          },
          "is_active": {
            "name": "is_active",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Indicates if the product is currently offered"
          },
          "is_interest_bearing": {
            "name": "is_interest_bearing",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Indicates if the product earns interest"
          },
          "min_balance": {
            "name": "min_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Minimum balance to avoid fees"
          },
          "min_opening_deposit": {
            "name": "min_opening_deposit",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Minimum amount required to open an account of this product type"
          },
          "monthly_fee": {
            "name": "monthly_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Standard monthly maintenance fee"
          },
          "product_code": {
            "name": "product_code",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Internal code for the product"
          },
          "product_name": {
            "name": "product_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Display name for the product"
          },
          "product_type": {
            "name": "product_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of product (checking, savings, loan, credit line, credit card)"
          },
          "small_business_banking_product_id": {
            "name": "small_business_banking_product_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each product"
          },
          "term_length": {
            "name": "term_length",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Term in months (for term products)"
          },
          "transaction_fee": {
            "name": "transaction_fee",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Fee charged per transaction beyond the limit"
          },
          "transaction_limit": {
            "name": "transaction_limit",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Number of free transactions per statement period"
          }
        },
        "uniquenessConstraints": {
          "products_pkey": [
            "small_business_banking_product_id"
          ]
        },
        "foreignRelations": {},
        "description": "Defines the financial products offered to small business customers"
      },
      "small_business_banking_regulatory_findings": {
        "schemaName": "small_business_banking",
        "tableName": "regulatory_findings",
        "columns": {
          "corrective_action_description": {
            "name": "corrective_action_description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of required corrective action"
          },
          "corrective_action_required": {
            "name": "corrective_action_required",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether corrective action is required"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "Detailed description of the finding"
          },
          "due_date": {
            "name": "due_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Deadline for corrective action"
          },
          "finding_date": {
            "name": "finding_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date the finding was identified or received"
          },
          "finding_type": {
            "name": "finding_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of finding (violation, concern, observation)"
          },
          "regulation_reference": {
            "name": "regulation_reference",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Reference to specific regulation or law"
          },
          "resolution_date": {
            "name": "resolution_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when the finding was resolved"
          },
          "resolution_description": {
            "name": "resolution_description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of how the finding was resolved"
          },
          "responsible_party": {
            "name": "responsible_party",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Department or individual responsible for resolution"
          },
          "severity": {
            "name": "severity",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Severity level (high, medium, low)"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Associated business if finding is related to a specific customer"
          },
          "small_business_banking_finding_id": {
            "name": "small_business_banking_finding_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each regulatory finding"
          },
          "small_business_banking_report_id": {
            "name": "small_business_banking_report_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Associated regulatory report if applicable"
          },
          "source": {
            "name": "source",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Source of the finding (exam, self-assessment, regulator, etc.)"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Status of the finding (open, in progress, resolved, validated)"
          }
        },
        "uniquenessConstraints": {
          "regulatory_findings_pkey": [
            "small_business_banking_finding_id"
          ]
        },
        "foreignRelations": {
          "regulatory_findings_responsible_party_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "responsible_party": "enterprise_associate_id"
            }
          },
          "regulatory_findings_small_business_banking_business_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          },
          "regulatory_findings_small_business_banking_report_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "regulatory_reports",
            "columnMapping": {
              "small_business_banking_report_id": "small_business_banking_report_id"
            }
          }
        },
        "description": "Tracks regulatory findings, violations, and corrective actions"
      },
      "small_business_banking_regulatory_reports": {
        "schemaName": "small_business_banking",
        "tableName": "regulatory_reports",
        "columns": {
          "due_date": {
            "name": "due_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date when the report is due to be submitted"
          },
          "file_specification_version": {
            "name": "file_specification_version",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Version of the regulatory reporting specification"
          },
          "notes": {
            "name": "notes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Additional information about the report"
          },
          "period_end_date": {
            "name": "period_end_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "End date of the reporting period"
          },
          "period_start_date": {
            "name": "period_start_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Start date of the reporting period"
          },
          "regulatory_agency": {
            "name": "regulatory_agency",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Agency the report is submitted to (FDIC, Federal Reserve, CFPB, etc.)"
          },
          "report_owner": {
            "name": "report_owner",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Department or individual responsible for the report"
          },
          "report_type": {
            "name": "report_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of regulatory report (CRA, HMDA, BSA, etc.)"
          },
          "small_business_banking_report_id": {
            "name": "small_business_banking_report_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each regulatory report"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Status of the report (pending, in progress, submitted, accepted, rejected)"
          }
        },
        "uniquenessConstraints": {
          "regulatory_reports_pkey": [
            "small_business_banking_report_id"
          ]
        },
        "foreignRelations": {
          "regulatory_reports_report_owner_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "report_owner": "enterprise_associate_id"
            }
          }
        },
        "description": "Tracks required regulatory reports related to small business banking"
      },
      "small_business_banking_report_submissions": {
        "schemaName": "small_business_banking",
        "tableName": "report_submissions",
        "columns": {
          "confirmation_number": {
            "name": "confirmation_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Confirmation number received upon submission"
          },
          "response_date": {
            "name": "response_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "Date and time of regulator response"
          },
          "response_details": {
            "name": "response_details",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Details of the regulator's response"
          },
          "response_status": {
            "name": "response_status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Status of the regulator's response (accepted, rejected, need more info)"
          },
          "small_business_banking_report_id": {
            "name": "small_business_banking_report_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the regulatory report"
          },
          "small_business_banking_submission_id": {
            "name": "small_business_banking_submission_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each report submission"
          },
          "submission_date": {
            "name": "submission_date",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": "Date and time of submission"
          },
          "submission_file_path": {
            "name": "submission_file_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to the submitted file"
          },
          "submission_method": {
            "name": "submission_method",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Method of submission (portal, API, mail, etc.)"
          },
          "submitted_by_id": {
            "name": "submitted_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Person who submitted the report"
          }
        },
        "uniquenessConstraints": {
          "report_submissions_pkey": [
            "small_business_banking_submission_id"
          ]
        },
        "foreignRelations": {
          "report_submissions_small_business_banking_report_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "regulatory_reports",
            "columnMapping": {
              "small_business_banking_report_id": "small_business_banking_report_id"
            }
          },
          "report_submissions_submitted_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "submitted_by_id": "enterprise_associate_id"
            }
          }
        },
        "description": "Records submissions of regulatory reports to authorities"
      },
      "small_business_banking_suspicious_activity_reports": {
        "schemaName": "small_business_banking",
        "tableName": "suspicious_activity_reports",
        "columns": {
          "account_closed": {
            "name": "account_closed",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether account was closed"
          },
          "account_closing_date": {
            "name": "account_closing_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date account was closed (if applicable)"
          },
          "activity_end_date": {
            "name": "activity_end_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date when suspicious activity ended"
          },
          "activity_start_date": {
            "name": "activity_start_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date when suspicious activity began"
          },
          "amount_involved": {
            "name": "amount_involved",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Total amount involved in suspicious activity"
          },
          "approved_by_id": {
            "name": "approved_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Person who approved the SAR"
          },
          "bsa_officer_signature": {
            "name": "bsa_officer_signature",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Signature of BSA officer"
          },
          "filing_date": {
            "name": "filing_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date the SAR was filed"
          },
          "filing_institution": {
            "name": "filing_institution",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Name of filing institution"
          },
          "fincen_acknowledgment": {
            "name": "fincen_acknowledgment",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Acknowledgment received from FinCEN"
          },
          "fraud_involved": {
            "name": "fraud_involved",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether fraud was involved"
          },
          "insider_abuse_involved": {
            "name": "insider_abuse_involved",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether insider abuse was involved"
          },
          "law_enforcement_agency": {
            "name": "law_enforcement_agency",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Agency contacted (if applicable)"
          },
          "law_enforcement_contact_date": {
            "name": "law_enforcement_contact_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date of law enforcement contact"
          },
          "law_enforcement_contact_name": {
            "name": "law_enforcement_contact_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Name of law enforcement contact"
          },
          "law_enforcement_contacted": {
            "name": "law_enforcement_contacted",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether law enforcement was contacted"
          },
          "money_laundering_involved": {
            "name": "money_laundering_involved",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether money laundering was involved"
          },
          "other_description": {
            "name": "other_description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Description of other suspicious activity"
          },
          "other_involved": {
            "name": "other_involved",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether other suspicious activity was involved"
          },
          "prepared_by_id": {
            "name": "prepared_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Person who prepared the SAR"
          },
          "sar_file_path": {
            "name": "sar_file_path",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Path to stored copy of the SAR"
          },
          "small_business_banking_business_id": {
            "name": "small_business_banking_business_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "Reference to the business if applicable"
          },
          "small_business_banking_sar_id": {
            "name": "small_business_banking_sar_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each SAR"
          },
          "structuring_involved": {
            "name": "structuring_involved",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether structuring was involved"
          },
          "supporting_documentation": {
            "name": "supporting_documentation",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "List of supporting documentation"
          },
          "suspicious_activity_description": {
            "name": "suspicious_activity_description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": "Detailed description of suspicious activity"
          },
          "suspicious_activity_type": {
            "name": "suspicious_activity_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of suspicious activity"
          },
          "terrorist_financing_involved": {
            "name": "terrorist_financing_involved",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Whether terrorist financing was involved"
          }
        },
        "uniquenessConstraints": {
          "suspicious_activity_reports_pkey": [
            "small_business_banking_sar_id"
          ]
        },
        "foreignRelations": {
          "suspicious_activity_reports_approved_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "approved_by_id": "enterprise_associate_id"
            }
          },
          "suspicious_activity_reports_bsa_officer_signature_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "bsa_officer_signature": "enterprise_associate_id"
            }
          },
          "suspicious_activity_reports_prepared_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "prepared_by_id": "enterprise_associate_id"
            }
          },
          "suspicious_activity_reports_small_business_banking_busines_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "businesses",
            "columnMapping": {
              "small_business_banking_business_id": "small_business_banking_business_id"
            }
          }
        },
        "description": "Tracks Suspicious Activity Reports filed with FinCEN"
      },
      "small_business_banking_transactions": {
        "schemaName": "small_business_banking",
        "tableName": "transactions",
        "columns": {
          "amount": {
            "name": "amount",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nonNullable",
            "description": "Transaction amount"
          },
          "created_by_id": {
            "name": "created_by_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": "User that created the transaction"
          },
          "currency": {
            "name": "currency",
            "type": {
              "scalarType": "enterprise_currency_code"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Currency of the transaction"
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "Transaction description"
          },
          "post_date": {
            "name": "post_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nullable",
            "description": "Date when the transaction was posted to the account"
          },
          "reference_number": {
            "name": "reference_number",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": "External reference for the transaction"
          },
          "running_balance": {
            "name": "running_balance",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": "Account balance after this transaction"
          },
          "small_business_banking_account_id": {
            "name": "small_business_banking_account_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": "Reference to the account where the transaction occurred"
          },
          "small_business_banking_transaction_id": {
            "name": "small_business_banking_transaction_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Unique identifier for each transaction"
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Status of the transaction (pending, completed, failed, reversed)"
          },
          "transaction_date": {
            "name": "transaction_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": "Date of the transaction"
          },
          "transaction_type": {
            "name": "transaction_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": "Type of transaction (deposit, withdrawal, payment, fee, etc.)"
          }
        },
        "uniquenessConstraints": {
          "transactions_pkey": [
            "small_business_banking_transaction_id"
          ]
        },
        "foreignRelations": {
          "transactions_created_by_id_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "associates",
            "columnMapping": {
              "created_by_id": "enterprise_associate_id"
            }
          },
          "transactions_currency_fkey": {
            "foreignSchema": "enterprise",
            "foreignTable": "currency",
            "columnMapping": {
              "currency": "code"
            }
          },
          "transactions_small_business_banking_account_id_fkey": {
            "foreignSchema": "small_business_banking",
            "foreignTable": "accounts",
            "columnMapping": {
              "small_business_banking_account_id": "small_business_banking_account_id"
            }
          }
        },
        "description": "Records all financial transactions across business accounts"
      }
    },
    "types": {
      "scalar": {
        "app_mgmt_application_lifecycle_status": {
          "typeName": "application_lifecycle_status",
          "schemaName": "app_mgmt",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "app_mgmt_application_lifecycle_status"
            },
            "min": {
              "returnType": "app_mgmt_application_lifecycle_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "app_mgmt_application_lifecycle_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_application_lifecycle_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_application_lifecycle_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "app_mgmt_application_lifecycle_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_application_lifecycle_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_application_lifecycle_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_application_lifecycle_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "DEVELOPMENT",
              "PILOT",
              "PRODUCTION",
              "DEPRECATED",
              "DATA_MAINTENANCE",
              "DECOMMISSIONED",
              "ARCHIVED"
            ]
          }
        },
        "app_mgmt_application_types": {
          "typeName": "application_types",
          "schemaName": "app_mgmt",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "app_mgmt_application_types"
            },
            "min": {
              "returnType": "app_mgmt_application_types"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "app_mgmt_application_types",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_application_types",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_application_types",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "app_mgmt_application_types",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_application_types",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_application_types",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_application_types",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "WEB",
              "MOBILE",
              "DESKTOP",
              "API",
              "BATCH",
              "MICROSERVICE",
              "LEGACY",
              "SAAS",
              "DATABASE",
              "MIDDLEWARE",
              "EMBEDDED"
            ]
          }
        },
        "app_mgmt_component_types": {
          "typeName": "component_types",
          "schemaName": "app_mgmt",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "app_mgmt_component_types"
            },
            "min": {
              "returnType": "app_mgmt_component_types"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "app_mgmt_component_types",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_component_types",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_component_types",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "app_mgmt_component_types",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_component_types",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_component_types",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_component_types",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "JAVA_LIBRARY",
              "NPM_PACKAGE",
              "NUGET_PACKAGE",
              "PYTHON_MODULE",
              "RUBY_GEM",
              "FRAMEWORK",
              "API",
              "DOTNET_ASSEMBLY",
              "DOCKER_IMAGE",
              "GRADLE_PLUGIN",
              "MAVEN_PLUGIN"
            ]
          }
        },
        "app_mgmt_criticality_levels": {
          "typeName": "criticality_levels",
          "schemaName": "app_mgmt",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "app_mgmt_criticality_levels"
            },
            "min": {
              "returnType": "app_mgmt_criticality_levels"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "app_mgmt_criticality_levels",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_criticality_levels",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_criticality_levels",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "app_mgmt_criticality_levels",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_criticality_levels",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_criticality_levels",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_criticality_levels",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "NONE",
              "MINIMAL",
              "MINOR",
              "MODERATE",
              "SIGNIFICANT",
              "CRITICAL"
            ]
          }
        },
        "app_mgmt_dependency_types": {
          "typeName": "dependency_types",
          "schemaName": "app_mgmt",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "app_mgmt_dependency_types"
            },
            "min": {
              "returnType": "app_mgmt_dependency_types"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "app_mgmt_dependency_types",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_dependency_types",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_dependency_types",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "app_mgmt_dependency_types",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_dependency_types",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_dependency_types",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_dependency_types",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "RUNTIME",
              "BUILD",
              "TEST",
              "DEVELOPMENT",
              "OPTIONAL",
              "PROVIDED",
              "SYSTEM",
              "IMPORT",
              "COMPILE",
              "ANNOTATION_PROCESSOR"
            ]
          }
        },
        "app_mgmt_deployment_environments": {
          "typeName": "deployment_environments",
          "schemaName": "app_mgmt",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "app_mgmt_deployment_environments"
            },
            "min": {
              "returnType": "app_mgmt_deployment_environments"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "app_mgmt_deployment_environments",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_deployment_environments",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_deployment_environments",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "app_mgmt_deployment_environments",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_deployment_environments",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_deployment_environments",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_deployment_environments",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ON_PREMISES",
              "CLOUD_PUBLIC",
              "CLOUD_PRIVATE",
              "CLOUD_HYBRID",
              "CONTAINERIZED",
              "SERVERLESS",
              "EDGE"
            ]
          }
        },
        "app_mgmt_license_types": {
          "typeName": "license_types",
          "schemaName": "app_mgmt",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "app_mgmt_license_types"
            },
            "min": {
              "returnType": "app_mgmt_license_types"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "app_mgmt_license_types",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_license_types",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_license_types",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "app_mgmt_license_types",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_license_types",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_license_types",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_license_types",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "MIT",
              "APACHE_2_0",
              "BSD_2_CLAUSE",
              "BSD_3_CLAUSE",
              "ISC",
              "GPL_2_0",
              "GPL_3_0",
              "LGPL_2_1",
              "LGPL_3_0",
              "AGPL_3_0",
              "PROPRIETARY",
              "CC_BY_4_0",
              "CC_BY_SA_4_0",
              "CC_BY_NC_4_0",
              "CC_BY_NC_SA_4_0",
              "CC_BY_ND_4_0",
              "CC_BY_NC_ND_4_0",
              "MPL_2_0",
              "EPL_2_0",
              "CDDL_1_1",
              "CPL_1_0",
              "APPL_2_0"
            ]
          }
        },
        "app_mgmt_relationship_types": {
          "typeName": "relationship_types",
          "schemaName": "app_mgmt",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "app_mgmt_relationship_types"
            },
            "min": {
              "returnType": "app_mgmt_relationship_types"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "app_mgmt_relationship_types",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_relationship_types",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_relationship_types",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "app_mgmt_relationship_types",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_relationship_types",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_relationship_types",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "app_mgmt_relationship_types",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "AUTHORIZATION",
              "AUTHENTICATION",
              "DATA_ACCESS",
              "SERVICE_DEPENDENCY",
              "API_INTEGRATION",
              "CONFIGURATION_PROVIDER",
              "LOGGING_SERVICE",
              "MONITORING_SERVICE",
              "CACHING_SERVICE",
              "MESSAGING_QUEUE",
              "REPORTING_SERVICE",
              "DATA_PROCESSING",
              "UI_EMBEDDING",
              "WORKFLOW_TRIGGER",
              "EVENT_SUBSCRIPTION",
              "NOTIFICATION_SERVICE",
              "IDENTITY_MANAGEMENT",
              "PAYMENT_PROCESSING",
              "STORAGE_SERVICE",
              "SEARCH_SERVICE",
              "SECURITY_SCANNING",
              "AUDIT_LOGGING",
              "RESOURCE_MANAGEMENT",
              "TASK_SCHEDULING",
              "CONTENT_DELIVERY"
            ]
          }
        },
        "bool": {
          "typeName": "bool",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "bool_and": {
              "returnType": "bool"
            },
            "bool_or": {
              "returnType": "bool"
            },
            "every": {
              "returnType": "bool"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "bool",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "bool",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "bool",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "bool",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "bool",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "bool",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "bool",
              "isInfix": true
            }
          },
          "typeRepresentation": "boolean"
        },
        "consumer_banking_account_fee_schedule": {
          "typeName": "account_fee_schedule",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_account_fee_schedule"
            },
            "min": {
              "returnType": "consumer_banking_account_fee_schedule"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_account_fee_schedule",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_account_fee_schedule",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_account_fee_schedule",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_account_fee_schedule",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_account_fee_schedule",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_account_fee_schedule",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_account_fee_schedule",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "STANDARD",
              "REDUCED",
              "WAIVED_WITH_MINIMUM_BALANCE",
              "WAIVED_WITH_DIRECT_DEPOSIT",
              "WAIVED_WITH_RELATIONSHIP",
              "NO_FEE",
              "ACTIVITY_BASED",
              "TIERED"
            ]
          }
        },
        "consumer_banking_account_status": {
          "typeName": "account_status",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_account_status"
            },
            "min": {
              "returnType": "consumer_banking_account_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_account_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_account_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_account_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_account_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_account_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_account_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_account_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "PENDING",
              "INACTIVE",
              "SUSPENDED",
              "DORMANT",
              "FROZEN",
              "CLOSED",
              "ARCHIVED"
            ]
          }
        },
        "consumer_banking_amount_sub_type": {
          "typeName": "amount_sub_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_amount_sub_type"
            },
            "min": {
              "returnType": "consumer_banking_amount_sub_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_amount_sub_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_amount_sub_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_amount_sub_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_amount_sub_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_amount_sub_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_amount_sub_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_amount_sub_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PRINCIPAL",
              "INTEREST",
              "FEES",
              "PENALTIES",
              "REWARDS",
              "PROMOTIONAL",
              "TEMPORARY",
              "ESTIMATED",
              "ADJUSTED",
              "CORRECTED",
              "NONE"
            ]
          }
        },
        "consumer_banking_amount_type": {
          "typeName": "amount_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_amount_type"
            },
            "min": {
              "returnType": "consumer_banking_amount_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_amount_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_amount_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_amount_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_amount_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_amount_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_amount_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_amount_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "OPENING_BALANCE",
              "CLOSING_BALANCE",
              "PAYMENTS",
              "DEPOSITS",
              "WITHDRAWALS",
              "INTEREST_EARNED",
              "INTEREST_CHARGED",
              "FEES",
              "CREDITS",
              "DEBITS",
              "TRANSFERS_IN",
              "TRANSFERS_OUT",
              "MINIMUM_PAYMENT_DUE",
              "AVAILABLE_CREDIT",
              "AVAILABLE_BALANCE",
              "CURRENT_BALANCE",
              "PENDING_BALANCE",
              "OVERDRAFT_LIMIT",
              "OVERDRAFT_USED",
              "OTHER"
            ]
          }
        },
        "consumer_banking_authorization_type": {
          "typeName": "authorization_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_authorization_type"
            },
            "min": {
              "returnType": "consumer_banking_authorization_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_authorization_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_authorization_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_authorization_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_authorization_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_authorization_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_authorization_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_authorization_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PIN",
              "SIGNATURE",
              "PIN_AND_SIGNATURE",
              "ONLINE",
              "CONTACTLESS",
              "CHIP",
              "MAGNETIC_STRIPE",
              "TOKENIZED",
              "BIOMETRIC",
              "RECURRING",
              "MANUAL_ENTRY",
              "OTHER"
            ]
          }
        },
        "consumer_banking_balance_sub_type": {
          "typeName": "balance_sub_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_balance_sub_type"
            },
            "min": {
              "returnType": "consumer_banking_balance_sub_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_balance_sub_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_balance_sub_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_balance_sub_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_balance_sub_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_balance_sub_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_balance_sub_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_balance_sub_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "INTRA_DAY",
              "OPENING",
              "INTERIM",
              "FORWARD",
              "EXPECTED",
              "AUTHORISED",
              "PREVIOUS_DAY",
              "THRESHOLD",
              "SWEEP",
              "LIMIT",
              "CREDIT_LINE",
              "CUSHION",
              "VALUE_DATED",
              "NET",
              "NONE"
            ]
          }
        },
        "consumer_banking_balance_type": {
          "typeName": "balance_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_balance_type"
            },
            "min": {
              "returnType": "consumer_banking_balance_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_balance_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_balance_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_balance_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_balance_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_balance_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_balance_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_balance_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "AVAILABLE",
              "CURRENT",
              "CLOSING",
              "PENDING",
              "BLOCKED",
              "RESERVED",
              "OVERDRAFT",
              "HOLD",
              "INTEREST_BEARING",
              "MINIMUM_REQUIRED",
              "PROJECTED",
              "LEDGER",
              "OTHER"
            ]
          }
        },
        "consumer_banking_beneficiary_type": {
          "typeName": "beneficiary_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_beneficiary_type"
            },
            "min": {
              "returnType": "consumer_banking_beneficiary_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_beneficiary_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_beneficiary_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_beneficiary_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_beneficiary_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_beneficiary_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_beneficiary_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_beneficiary_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "INDIVIDUAL",
              "ORGANIZATION",
              "GOVERNMENT",
              "TRUST",
              "ESTATE",
              "CHARITY",
              "FINANCIAL_INSTITUTION",
              "MERCHANT",
              "UTILITY",
              "EDUCATIONAL",
              "HEALTHCARE",
              "SELF",
              "OTHER"
            ]
          }
        },
        "consumer_banking_benefit_type": {
          "typeName": "benefit_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_benefit_type"
            },
            "min": {
              "returnType": "consumer_banking_benefit_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_benefit_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_benefit_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_benefit_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_benefit_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_benefit_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_benefit_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_benefit_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CASHBACK",
              "POINTS",
              "MILES",
              "INTEREST",
              "DISCOUNT",
              "INSURANCE",
              "FEE_WAIVER",
              "PROMOTIONAL",
              "LOYALTY",
              "REFERRAL",
              "ANNIVERSARY",
              "OTHER"
            ]
          }
        },
        "consumer_banking_card_scheme_name": {
          "typeName": "card_scheme_name",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_card_scheme_name"
            },
            "min": {
              "returnType": "consumer_banking_card_scheme_name"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_card_scheme_name",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_card_scheme_name",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_card_scheme_name",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_card_scheme_name",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_card_scheme_name",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_card_scheme_name",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_card_scheme_name",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "VISA",
              "MASTERCARD",
              "AMEX",
              "DISCOVER",
              "DINERS",
              "JCB",
              "UNIONPAY",
              "MAESTRO",
              "INTERAC",
              "ELO",
              "MIR",
              "RUPAY",
              "OTHER"
            ]
          }
        },
        "consumer_banking_communication_method": {
          "typeName": "communication_method",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_communication_method"
            },
            "min": {
              "returnType": "consumer_banking_communication_method"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_communication_method",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_communication_method",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_communication_method",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_communication_method",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_communication_method",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_communication_method",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_communication_method",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "EMAIL",
              "MAIL",
              "PORTAL",
              "MOBILE_APP",
              "SMS_NOTIFICATION",
              "BRANCH_PICKUP",
              "MULTIPLE"
            ]
          }
        },
        "consumer_banking_consent_status": {
          "typeName": "consent_status",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_consent_status"
            },
            "min": {
              "returnType": "consumer_banking_consent_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_consent_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_consent_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_consent_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_consent_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_consent_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_consent_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_consent_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PENDING",
              "AUTHORIZED",
              "ACTIVE",
              "SUSPENDED",
              "EXPIRED",
              "REVOKED",
              "TERMINATED",
              "SUPERSEDED",
              "REJECTED",
              "ERROR"
            ]
          }
        },
        "consumer_banking_direct_debit_category": {
          "typeName": "direct_debit_category",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_direct_debit_category"
            },
            "min": {
              "returnType": "consumer_banking_direct_debit_category"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_direct_debit_category",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_category",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_category",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_direct_debit_category",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_category",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_category",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_category",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ELECTRICITY",
              "GAS",
              "WATER",
              "INTERNET",
              "PHONE",
              "TV",
              "RENT",
              "MORTGAGE",
              "INSURANCE_HOME",
              "INSURANCE_HEALTH",
              "INSURANCE_LIFE",
              "INSURANCE_AUTO",
              "SUBSCRIPTION_MEDIA",
              "SUBSCRIPTION_SOFTWARE",
              "SUBSCRIPTION_MEMBERSHIP",
              "LOAN_PAYMENT",
              "CREDIT_CARD",
              "CHARITY",
              "TAX_PAYMENT",
              "PENSION",
              "INVESTMENT",
              "EDUCATION",
              "OTHER"
            ]
          }
        },
        "consumer_banking_direct_debit_classification": {
          "typeName": "direct_debit_classification",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_direct_debit_classification"
            },
            "min": {
              "returnType": "consumer_banking_direct_debit_classification"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_direct_debit_classification",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_classification",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_classification",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_direct_debit_classification",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_classification",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_classification",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_classification",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PERSONAL",
              "BUSINESS",
              "CHARITY",
              "HOUSEHOLD",
              "SUBSCRIPTION",
              "UTILITY",
              "INSURANCE",
              "MORTGAGE",
              "LOAN",
              "TAX",
              "OTHER"
            ]
          }
        },
        "consumer_banking_direct_debit_status_code": {
          "typeName": "direct_debit_status_code",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_direct_debit_status_code"
            },
            "min": {
              "returnType": "consumer_banking_direct_debit_status_code"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_direct_debit_status_code",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_status_code",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_status_code",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_direct_debit_status_code",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_status_code",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_status_code",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_direct_debit_status_code",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "PENDING",
              "CANCELED",
              "SUSPENDED",
              "REJECTED",
              "EXPIRED",
              "COMPLETED",
              "FAILED",
              "ON_HOLD",
              "AMENDED",
              "OTHER"
            ]
          }
        },
        "consumer_banking_fee_frequency": {
          "typeName": "fee_frequency",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_fee_frequency"
            },
            "min": {
              "returnType": "consumer_banking_fee_frequency"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_fee_frequency",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_fee_frequency",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_fee_frequency",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_fee_frequency",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_fee_frequency",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_fee_frequency",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_fee_frequency",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ONE_TIME",
              "MONTHLY",
              "QUARTERLY",
              "ANNUALLY",
              "PER_TRANSACTION",
              "CONDITIONAL",
              "OTHER"
            ]
          }
        },
        "consumer_banking_fee_type": {
          "typeName": "fee_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_fee_type"
            },
            "min": {
              "returnType": "consumer_banking_fee_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_fee_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_fee_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_fee_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_fee_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_fee_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_fee_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_fee_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SERVICE",
              "TRANSACTION",
              "OVERDRAFT",
              "ATM",
              "WIRE_TRANSFER",
              "FOREIGN_TRANSACTION",
              "PAPER_STATEMENT",
              "STOP_PAYMENT",
              "REPLACEMENT_CARD",
              "EARLY_WITHDRAWAL",
              "INSUFFICIENT_FUNDS",
              "DORMANT_ACCOUNT",
              "RESEARCH",
              "SPECIAL_STATEMENT",
              "LATE_PAYMENT",
              "OTHER"
            ]
          }
        },
        "consumer_banking_interaction_channel": {
          "typeName": "interaction_channel",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_interaction_channel"
            },
            "min": {
              "returnType": "consumer_banking_interaction_channel"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_interaction_channel",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_channel",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_channel",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_interaction_channel",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_channel",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_channel",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_channel",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PHONE",
              "EMAIL",
              "WEB",
              "BRANCH",
              "MOBILE_APP",
              "ATM",
              "MAIL",
              "SOCIAL_MEDIA",
              "VIDEO",
              "SMS",
              "THIRD_PARTY"
            ]
          }
        },
        "consumer_banking_interaction_priority": {
          "typeName": "interaction_priority",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_interaction_priority"
            },
            "min": {
              "returnType": "consumer_banking_interaction_priority"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_interaction_priority",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_priority",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_priority",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_interaction_priority",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_priority",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_priority",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_priority",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CRITICAL",
              "HIGH",
              "MEDIUM",
              "LOW",
              "ROUTINE"
            ]
          }
        },
        "consumer_banking_interaction_status": {
          "typeName": "interaction_status",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_interaction_status"
            },
            "min": {
              "returnType": "consumer_banking_interaction_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_interaction_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_interaction_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "OPEN",
              "PENDING",
              "IN_PROGRESS",
              "RESOLVED",
              "ESCALATED",
              "TRANSFERRED",
              "CLOSED",
              "FOLLOW_UP",
              "REOPENED"
            ]
          }
        },
        "consumer_banking_interaction_type": {
          "typeName": "interaction_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_interaction_type"
            },
            "min": {
              "returnType": "consumer_banking_interaction_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_interaction_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_interaction_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interaction_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PHONE_CALL",
              "EMAIL",
              "CHAT",
              "IN_PERSON",
              "VIDEO_CALL",
              "ONLINE_FORM",
              "SOCIAL_MEDIA",
              "ATM_INTERACTION",
              "MOBILE_APP",
              "MAIL",
              "SMS",
              "FAX"
            ]
          }
        },
        "consumer_banking_interest_calculation_method": {
          "typeName": "interest_calculation_method",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_interest_calculation_method"
            },
            "min": {
              "returnType": "consumer_banking_interest_calculation_method"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_interest_calculation_method",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interest_calculation_method",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interest_calculation_method",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_interest_calculation_method",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interest_calculation_method",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interest_calculation_method",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interest_calculation_method",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "DAILY_BALANCE",
              "AVERAGE_DAILY_BALANCE",
              "MINIMUM_BALANCE",
              "TIERED_RATE",
              "BLENDED_RATE",
              "STEPPED_RATE"
            ]
          }
        },
        "consumer_banking_interest_type": {
          "typeName": "interest_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_interest_type"
            },
            "min": {
              "returnType": "consumer_banking_interest_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_interest_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interest_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interest_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_interest_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interest_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interest_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_interest_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "DEPOSIT",
              "SAVINGS",
              "CERTIFICATE",
              "MONEY_MARKET",
              "CHECKING",
              "BONUS",
              "PROMOTIONAL",
              "PENALTY",
              "LOAN",
              "CREDIT_CARD",
              "OVERDRAFT",
              "LINE_OF_CREDIT",
              "ADJUSTMENT",
              "OTHER"
            ]
          }
        },
        "consumer_banking_offer_type": {
          "typeName": "offer_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_offer_type"
            },
            "min": {
              "returnType": "consumer_banking_offer_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_offer_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_offer_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_offer_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_offer_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_offer_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_offer_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_offer_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "LOAN",
              "BALANCE_TRANSFER",
              "CREDIT_LIMIT_INCREASE",
              "INTEREST_RATE_REDUCTION",
              "OVERDRAFT",
              "INVESTMENT",
              "SAVINGS",
              "INSURANCE",
              "CASHBACK",
              "REWARDS",
              "PREMIUM_ACCOUNT",
              "FEE_WAIVER",
              "BUNDLE",
              "PREAPPROVAL",
              "PROMOTIONAL",
              "OTHER"
            ]
          }
        },
        "consumer_banking_payment_method": {
          "typeName": "payment_method",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_payment_method"
            },
            "min": {
              "returnType": "consumer_banking_payment_method"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_payment_method",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_payment_method",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_payment_method",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_payment_method",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_payment_method",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_payment_method",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_payment_method",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACH",
              "WIRE",
              "INTERNAL",
              "CHECK",
              "CARD",
              "DIGITAL_WALLET",
              "OTHER"
            ]
          }
        },
        "consumer_banking_product_status": {
          "typeName": "product_status",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_product_status"
            },
            "min": {
              "returnType": "consumer_banking_product_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_product_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_product_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_product_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_product_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_product_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_product_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_product_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "GRANDFATHERED",
              "PROMOTIONAL",
              "DISCONTINUED",
              "ARCHIVED",
              "PILOT",
              "SEASONAL"
            ]
          }
        },
        "consumer_banking_product_type": {
          "typeName": "product_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_product_type"
            },
            "min": {
              "returnType": "consumer_banking_product_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_product_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_product_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_product_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_product_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_product_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_product_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_product_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CHECKING",
              "SAVINGS",
              "MONEY_MARKET",
              "CERTIFICATE_OF_DEPOSIT",
              "IRA",
              "HSA",
              "STUDENT",
              "YOUTH",
              "SENIOR",
              "BUSINESS_CHECKING",
              "BUSINESS_SAVINGS",
              "PREMIUM",
              "FOREIGN_CURRENCY",
              "SPECIALIZED"
            ]
          }
        },
        "consumer_banking_rate_type": {
          "typeName": "rate_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_rate_type"
            },
            "min": {
              "returnType": "consumer_banking_rate_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_rate_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_rate_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_rate_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_rate_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_rate_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_rate_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_rate_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "FIXED",
              "VARIABLE",
              "TIERED",
              "PROMOTIONAL",
              "PENALTY",
              "STANDARD",
              "DISCOUNTED",
              "OTHER"
            ]
          }
        },
        "consumer_banking_scheduled_payment_status": {
          "typeName": "scheduled_payment_status",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_scheduled_payment_status"
            },
            "min": {
              "returnType": "consumer_banking_scheduled_payment_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_scheduled_payment_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_scheduled_payment_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_scheduled_payment_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_scheduled_payment_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_scheduled_payment_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_scheduled_payment_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_scheduled_payment_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PENDING",
              "PROCESSING",
              "COMPLETED",
              "FAILED",
              "CANCELED",
              "EXPIRED",
              "RECURRENCE_ENDED",
              "ON_HOLD"
            ]
          }
        },
        "consumer_banking_scheduled_payment_type": {
          "typeName": "scheduled_payment_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_scheduled_payment_type"
            },
            "min": {
              "returnType": "consumer_banking_scheduled_payment_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_scheduled_payment_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_scheduled_payment_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_scheduled_payment_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_scheduled_payment_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_scheduled_payment_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_scheduled_payment_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_scheduled_payment_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SINGLE",
              "RECURRING",
              "INSTALLMENT",
              "CONDITIONAL",
              "VARIABLE"
            ]
          }
        },
        "consumer_banking_standing_order_category": {
          "typeName": "standing_order_category",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_standing_order_category"
            },
            "min": {
              "returnType": "consumer_banking_standing_order_category"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_standing_order_category",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_category",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_category",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_standing_order_category",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_category",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_category",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_category",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "BILL_PAYMENT",
              "SAVINGS",
              "INVESTMENT",
              "LOAN_PAYMENT",
              "SUBSCRIPTION",
              "CHARITY",
              "FAMILY_SUPPORT",
              "RENT",
              "BUSINESS_EXPENSE",
              "OTHER"
            ]
          }
        },
        "consumer_banking_standing_order_status_code": {
          "typeName": "standing_order_status_code",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_standing_order_status_code"
            },
            "min": {
              "returnType": "consumer_banking_standing_order_status_code"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_standing_order_status_code",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_status_code",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_status_code",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_standing_order_status_code",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_status_code",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_status_code",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_status_code",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "PENDING",
              "CANCELLED",
              "SUSPENDED",
              "COMPLETED",
              "FAILED",
              "ON_HOLD",
              "EXPIRED",
              "OTHER"
            ]
          }
        },
        "consumer_banking_standing_order_type": {
          "typeName": "standing_order_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_standing_order_type"
            },
            "min": {
              "returnType": "consumer_banking_standing_order_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_standing_order_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_standing_order_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_standing_order_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "FIXED_AMOUNT",
              "VARIABLE_AMOUNT",
              "BALANCE_SWEEP",
              "FULL_BALANCE",
              "PERCENTAGE",
              "INTEREST_ONLY",
              "OTHER"
            ]
          }
        },
        "consumer_banking_statement_date_type": {
          "typeName": "statement_date_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_statement_date_type"
            },
            "min": {
              "returnType": "consumer_banking_statement_date_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_statement_date_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_date_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_date_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_statement_date_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_date_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_date_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_date_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "STATEMENT_DATE",
              "DUE_DATE",
              "PAYMENT_CUTOFF_DATE",
              "CLOSE_DATE",
              "NEXT_STATEMENT_DATE",
              "MINIMUM_PAYMENT_DATE",
              "GRACE_PERIOD_END",
              "LATE_FEE_DATE",
              "CYCLE_START_DATE",
              "LAST_PAYMENT_DATE",
              "OTHER"
            ]
          }
        },
        "consumer_banking_statement_format": {
          "typeName": "statement_format",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_statement_format"
            },
            "min": {
              "returnType": "consumer_banking_statement_format"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_statement_format",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_format",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_format",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_statement_format",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_format",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_format",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_format",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PDF",
              "HTML",
              "TEXT",
              "CSV",
              "XML",
              "JSON"
            ]
          }
        },
        "consumer_banking_statement_rate_type": {
          "typeName": "statement_rate_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_statement_rate_type"
            },
            "min": {
              "returnType": "consumer_banking_statement_rate_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_statement_rate_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_rate_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_rate_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_statement_rate_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_rate_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_rate_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_rate_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "APR",
              "CASH_ADVANCE_APR",
              "BALANCE_TRANSFER_APR",
              "PENALTY_APR",
              "PROMOTIONAL_APR",
              "SAVINGS_RATE",
              "CD_RATE",
              "EXCHANGE_RATE",
              "INTRODUCTORY_RATE",
              "VARIABLE_RATE_INDEX",
              "MARGIN",
              "DEFAULT_RATE",
              "REWARD_RATE",
              "EFFECTIVE_RATE",
              "OTHER"
            ]
          }
        },
        "consumer_banking_statement_type": {
          "typeName": "statement_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_statement_type"
            },
            "min": {
              "returnType": "consumer_banking_statement_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_statement_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_statement_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "REGULAR",
              "INTERIM",
              "FINAL",
              "ANNUAL",
              "SUPPLEMENTARY",
              "TAX",
              "CORRECTED",
              "RECONCILIATION",
              "CONSOLIDATED",
              "OTHER"
            ]
          }
        },
        "consumer_banking_statement_value_type": {
          "typeName": "statement_value_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_statement_value_type"
            },
            "min": {
              "returnType": "consumer_banking_statement_value_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_statement_value_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_value_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_value_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_statement_value_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_value_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_value_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_statement_value_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "LOYALTY_POINTS",
              "REWARD_BALANCE",
              "CASH_BACK_EARNED",
              "POINTS_EARNED",
              "POINTS_REDEEMED",
              "TIER_LEVEL",
              "CREDIT_SCORE",
              "CARBON_FOOTPRINT",
              "SPENDING_CATEGORY",
              "MILES_EARNED",
              "MILES_BALANCE",
              "MERCHANT_CATEGORY",
              "NEXT_TIER_PROGRESS",
              "ANNUAL_REWARDS_SUMMARY",
              "ANNUAL_SPENDING_SUMMARY",
              "OTHER"
            ]
          }
        },
        "consumer_banking_transaction_bank_code": {
          "typeName": "transaction_bank_code",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_transaction_bank_code"
            },
            "min": {
              "returnType": "consumer_banking_transaction_bank_code"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_transaction_bank_code",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_bank_code",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_bank_code",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_transaction_bank_code",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_bank_code",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_bank_code",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_bank_code",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "RETAIL__CLOTHING_STORE",
              "RETAIL__ELECTRONICS",
              "RETAIL__DEPARTMENT_STORE",
              "RETAIL__ONLINE_SHOPPING",
              "RETAIL__GROCERY",
              "RETAIL__CONVENIENCE_STORE",
              "RETAIL__OTHER",
              "SERVICES__RESTAURANT",
              "SERVICES__ENTERTAINMENT",
              "SERVICES__TRAVEL",
              "SERVICES__CAR_RENTAL",
              "SERVICES__HOTEL",
              "SERVICES__PROFESSIONAL",
              "SERVICES__UTILITIES",
              "SERVICES__TELECOMMUNICATIONS",
              "SERVICES__OTHER",
              "FINANCIAL__ATM_WITHDRAWAL",
              "FINANCIAL__BANK_TRANSFER",
              "FINANCIAL__LOAN_PAYMENT",
              "FINANCIAL__CREDIT_CARD_PAYMENT",
              "FINANCIAL__INVESTMENT",
              "FINANCIAL__INSURANCE_PAYMENT",
              "FINANCIAL__WIRE_TRANSFER",
              "FINANCIAL__OTHER",
              "REGULATORY__BSA_REPORTING",
              "REGULATORY__AML_THRESHOLD",
              "REGULATORY__OFAC_SCREENING",
              "REGULATORY__CTR_REPORT",
              "REGULATORY__SUSPICIOUS_ACTIVITY",
              "REGULATORY__KYC_VERIFICATION",
              "REGULATORY__PEP_TRANSACTION",
              "REGULATORY__SANCTIONS_CHECK",
              "REGULATORY__TAX_REPORTING",
              "REGULATORY__FATCA_REPORTING",
              "REGULATORY__OTHER",
              "RISK__HIGH_RISK_GEO",
              "RISK__UNUSUAL_PATTERN",
              "RISK__VELOCITY_CHECK",
              "RISK__LARGE_CASH_DEPOSIT",
              "RISK__CROSS_BORDER",
              "RISK__FIRST_TIME_MERCHANT",
              "RISK__DEVICE_ANOMALY",
              "RISK__REPEATED_DECLINED",
              "RISK__OTHER"
            ]
          }
        },
        "consumer_banking_transaction_category": {
          "typeName": "transaction_category",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_transaction_category"
            },
            "min": {
              "returnType": "consumer_banking_transaction_category"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_transaction_category",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_category",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_category",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_transaction_category",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_category",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_category",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_category",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PAYMENT",
              "DEPOSIT",
              "WITHDRAWAL",
              "FEE",
              "INTEREST",
              "TRANSFER",
              "ATM",
              "POINT_OF_SALE",
              "CARD_PAYMENT",
              "DIRECT_DEBIT",
              "STANDING_ORDER",
              "CREDIT",
              "DEBIT",
              "REVERSAL",
              "ADJUSTMENT",
              "CHECK",
              "LOAN_DISBURSEMENT",
              "LOAN_PAYMENT",
              "OTHER"
            ]
          }
        },
        "consumer_banking_transaction_mutability": {
          "typeName": "transaction_mutability",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_transaction_mutability"
            },
            "min": {
              "returnType": "consumer_banking_transaction_mutability"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_transaction_mutability",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_mutability",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_mutability",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_transaction_mutability",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_mutability",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_mutability",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_mutability",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "MUTABLE",
              "IMMUTABLE",
              "CONDITIONAL"
            ]
          }
        },
        "consumer_banking_transaction_status": {
          "typeName": "transaction_status",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_transaction_status"
            },
            "min": {
              "returnType": "consumer_banking_transaction_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_transaction_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_transaction_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PENDING",
              "BOOKED",
              "CANCELLED",
              "REJECTED",
              "REVERSED",
              "HELD",
              "EXPIRED",
              "OTHER"
            ]
          }
        },
        "consumer_banking_transaction_type": {
          "typeName": "transaction_type",
          "schemaName": "consumer_banking",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_banking_transaction_type"
            },
            "min": {
              "returnType": "consumer_banking_transaction_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_banking_transaction_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_banking_transaction_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_banking_transaction_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PURCHASE",
              "CASH_WITHDRAWAL",
              "REFUND",
              "BILL_PAYMENT",
              "SALARY",
              "SUBSCRIPTION",
              "DIVIDEND",
              "TAX_PAYMENT",
              "TAX_REFUND",
              "INTERNAL_TRANSFER",
              "EXTERNAL_TRANSFER",
              "MERCHANT_PAYMENT",
              "UTILITY_PAYMENT",
              "RENT_PAYMENT",
              "MORTGAGE_PAYMENT",
              "INVESTMENT",
              "INSURANCE_PREMIUM",
              "DONATION",
              "TRANSPORTATION",
              "FOOD_DINING",
              "HEALTHCARE",
              "EDUCATION",
              "ENTERTAINMENT",
              "TRAVEL",
              "RETAIL",
              "OTHER"
            ]
          }
        },
        "consumer_lending_account_type": {
          "typeName": "account_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_account_type"
            },
            "min": {
              "returnType": "consumer_lending_account_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_account_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_account_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_account_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_account_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_account_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_account_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_account_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "MORTGAGE",
              "INSTALLMENT",
              "REVOLVING",
              "AUTO_LOAN",
              "STUDENT_LOAN",
              "PERSONAL_LOAN",
              "CREDIT_CARD",
              "HOME_EQUITY",
              "BUSINESS_LOAN",
              "LEASE",
              "MEDICAL_DEBT",
              "COLLECTION",
              "CHARGE_ACCOUNT",
              "OTHER"
            ]
          }
        },
        "consumer_lending_action_taken": {
          "typeName": "action_taken",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_action_taken"
            },
            "min": {
              "returnType": "consumer_lending_action_taken"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_action_taken",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_action_taken",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_action_taken",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_action_taken",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_action_taken",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_action_taken",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_action_taken",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "APPROVED",
              "DENIED",
              "WITHDRAWN",
              "INCOMPLETE"
            ]
          }
        },
        "consumer_lending_adverse_action_notice_status": {
          "typeName": "adverse_action_notice_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_adverse_action_notice_status"
            },
            "min": {
              "returnType": "consumer_lending_adverse_action_notice_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_adverse_action_notice_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_adverse_action_notice_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_adverse_action_notice_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_adverse_action_notice_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_adverse_action_notice_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_adverse_action_notice_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_adverse_action_notice_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "GENERATED",
              "SENT",
              "DELIVERED",
              "FAILED",
              "PENDING",
              "READ",
              "RETURNED",
              "OTHER"
            ]
          }
        },
        "consumer_lending_analysis_type": {
          "typeName": "analysis_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_analysis_type"
            },
            "min": {
              "returnType": "consumer_lending_analysis_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_analysis_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_analysis_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_analysis_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_analysis_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_analysis_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_analysis_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_analysis_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PRICING",
              "UNDERWRITING",
              "MARKETING",
              "PRODUCT_DESIGN",
              "PORTFOLIO_REVIEW",
              "GEOGRAPHIC"
            ]
          }
        },
        "consumer_lending_asset_type": {
          "typeName": "asset_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_asset_type"
            },
            "min": {
              "returnType": "consumer_lending_asset_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_asset_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_asset_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_asset_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_asset_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_asset_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_asset_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_asset_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CHECKING_ACCOUNT",
              "SAVINGS_ACCOUNT",
              "MONEY_MARKET_ACCOUNT",
              "CERTIFICATE_OF_DEPOSIT",
              "INVESTMENT_ACCOUNT",
              "RETIREMENT_ACCOUNT",
              "STOCKS",
              "BONDS",
              "MUTUAL_FUNDS",
              "REAL_ESTATE",
              "VACANT_LAND",
              "VEHICLE",
              "BUSINESS_OWNERSHIP",
              "CRYPTOCURRENCY",
              "PRECIOUS_METALS",
              "LIFE_INSURANCE_CASH_VALUE",
              "OTHER"
            ]
          }
        },
        "consumer_lending_collateral_type": {
          "typeName": "collateral_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_collateral_type"
            },
            "min": {
              "returnType": "consumer_lending_collateral_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_collateral_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collateral_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collateral_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_collateral_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collateral_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collateral_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collateral_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "VEHICLE",
              "REAL_ESTATE",
              "DEPOSIT_ACCOUNT",
              "INVESTMENT_SECURITIES",
              "EQUIPMENT",
              "BOAT",
              "RECREATIONAL_VEHICLE",
              "MACHINERY",
              "INVENTORY",
              "ACCOUNTS_RECEIVABLE",
              "LIFE_INSURANCE_POLICY",
              "JEWELRY",
              "FARM_ASSETS",
              "OTHER"
            ]
          }
        },
        "consumer_lending_collection_action_result": {
          "typeName": "collection_action_result",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_collection_action_result"
            },
            "min": {
              "returnType": "consumer_lending_collection_action_result"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_collection_action_result",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_action_result",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_action_result",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_collection_action_result",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_action_result",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_action_result",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_action_result",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CONTACT_MADE",
              "LEFT_MESSAGE",
              "NO_ANSWER",
              "WRONG_NUMBER",
              "PROMISE_TO_PAY",
              "PARTIAL_PAYMENT",
              "DISPUTE_RAISED",
              "REFERRED_TO_LEGAL",
              "UNABLE_TO_LOCATE",
              "OTHER"
            ]
          }
        },
        "consumer_lending_collection_action_type": {
          "typeName": "collection_action_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_collection_action_type"
            },
            "min": {
              "returnType": "consumer_lending_collection_action_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_collection_action_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_action_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_action_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_collection_action_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_action_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_action_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_action_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CALL",
              "LETTER",
              "EMAIL",
              "FIELD_VISIT",
              "SMS",
              "VOICEMAIL",
              "LEGAL_NOTICE",
              "ONLINE_MESSAGE",
              "AUTOMATED_MESSAGE",
              "OTHER"
            ]
          }
        },
        "consumer_lending_collection_priority": {
          "typeName": "collection_priority",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_collection_priority"
            },
            "min": {
              "returnType": "consumer_lending_collection_priority"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_collection_priority",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_priority",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_priority",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_collection_priority",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_priority",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_priority",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_priority",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "HIGH",
              "MEDIUM",
              "LOW",
              "CRITICAL",
              "MINIMAL",
              "OTHER"
            ]
          }
        },
        "consumer_lending_collection_resolution_type": {
          "typeName": "collection_resolution_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_collection_resolution_type"
            },
            "min": {
              "returnType": "consumer_lending_collection_resolution_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_collection_resolution_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_resolution_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_resolution_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_collection_resolution_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_resolution_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_resolution_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_resolution_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PAID_IN_FULL",
              "SETTLEMENT",
              "MODIFICATION",
              "CHARGE_OFF",
              "BANKRUPTCY",
              "DEBT_CONSOLIDATION",
              "PAYMENT_PLAN",
              "LEGAL_JUDGMENT",
              "FORGIVEN",
              "OTHER"
            ]
          }
        },
        "consumer_lending_collection_status": {
          "typeName": "collection_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_collection_status"
            },
            "min": {
              "returnType": "consumer_lending_collection_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_collection_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_collection_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_collection_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "RESOLVED",
              "CHARGED_OFF",
              "NEGOTIATING",
              "SUSPENDED",
              "LEGAL_PROCEEDINGS",
              "PAYMENT_PLAN",
              "OTHER"
            ]
          }
        },
        "consumer_lending_communication_context": {
          "typeName": "communication_context",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_communication_context"
            },
            "min": {
              "returnType": "consumer_lending_communication_context"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_communication_context",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_context",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_context",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_communication_context",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_context",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_context",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_context",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PAYMENT_REMINDER",
              "STATEMENT",
              "NOTICE",
              "APPLICATION_STATUS",
              "DOCUMENT_REQUEST",
              "ACCOUNT_REVIEW",
              "COLLECTION",
              "VERIFICATION",
              "MARKETING",
              "CUSTOMER_SERVICE",
              "OTHER"
            ]
          }
        },
        "consumer_lending_communication_direction": {
          "typeName": "communication_direction",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_communication_direction"
            },
            "min": {
              "returnType": "consumer_lending_communication_direction"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_communication_direction",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_direction",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_direction",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_communication_direction",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_direction",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_direction",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_direction",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "INBOUND",
              "OUTBOUND",
              "INTERNAL",
              "OTHER"
            ]
          }
        },
        "consumer_lending_communication_status": {
          "typeName": "communication_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_communication_status"
            },
            "min": {
              "returnType": "consumer_lending_communication_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_communication_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_communication_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SENT",
              "DELIVERED",
              "FAILED",
              "RECEIVED",
              "PENDING",
              "READ",
              "PARTIALLY_DELIVERED",
              "OTHER"
            ]
          }
        },
        "consumer_lending_communication_type": {
          "typeName": "communication_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_communication_type"
            },
            "min": {
              "returnType": "consumer_lending_communication_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_communication_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_communication_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_communication_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "EMAIL",
              "LETTER",
              "PHONE_CALL",
              "TEXT_MESSAGE",
              "VOICEMAIL",
              "CHAT",
              "VIDEO_CALL",
              "FAX",
              "IN_PERSON",
              "OTHER"
            ]
          }
        },
        "consumer_lending_credit_bureau": {
          "typeName": "credit_bureau",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_credit_bureau"
            },
            "min": {
              "returnType": "consumer_lending_credit_bureau"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_credit_bureau",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_bureau",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_bureau",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_credit_bureau",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_bureau",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_bureau",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_bureau",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "EQUIFAX",
              "EXPERIAN",
              "TRANSUNION",
              "INNOVIS",
              "CLEAR_REPORT",
              "OTHER"
            ]
          }
        },
        "consumer_lending_credit_report_status": {
          "typeName": "credit_report_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_credit_report_status"
            },
            "min": {
              "returnType": "consumer_lending_credit_report_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_credit_report_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_report_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_report_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_credit_report_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_report_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_report_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_report_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "COMPLETED",
              "FAILED",
              "PENDING",
              "PARTIALLY_RETRIEVED",
              "EXPIRED",
              "UNDER_REVIEW",
              "ERROR",
              "OTHER"
            ]
          }
        },
        "consumer_lending_credit_report_type": {
          "typeName": "credit_report_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_credit_report_type"
            },
            "min": {
              "returnType": "consumer_lending_credit_report_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_credit_report_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_report_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_report_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_credit_report_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_report_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_report_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_credit_report_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "TRI_MERGE",
              "SINGLE_BUREAU",
              "MERGED_BUREAU",
              "EXPANDED",
              "CUSTOM",
              "OTHER"
            ]
          }
        },
        "consumer_lending_decision_model_type": {
          "typeName": "decision_model_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_decision_model_type"
            },
            "min": {
              "returnType": "consumer_lending_decision_model_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_decision_model_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_model_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_model_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_decision_model_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_model_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_model_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_model_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CREDIT_SCORE",
              "INCOME_VERIFICATION",
              "FRAUD_DETECTION",
              "RISK_ASSESSMENT",
              "DEBT_TO_INCOME_ANALYSIS",
              "BEHAVIORAL_SCORING",
              "MACHINE_LEARNING_PREDICTIVE",
              "ALTERNATIVE_CREDIT_SCORING",
              "EMPLOYMENT_VERIFICATION",
              "COLLATERAL_VALUATION",
              "REGULATORY_COMPLIANCE",
              "PRICING_MODEL",
              "OTHER"
            ]
          }
        },
        "consumer_lending_decision_reason_code": {
          "typeName": "decision_reason_code",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_decision_reason_code"
            },
            "min": {
              "returnType": "consumer_lending_decision_reason_code"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_decision_reason_code",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_reason_code",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_reason_code",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_decision_reason_code",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_reason_code",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_reason_code",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_reason_code",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "INSUFFICIENT_INCOME",
              "HIGH_DEBT_TO_INCOME",
              "LOW_CREDIT_SCORE",
              "INSUFFICIENT_CREDIT_HISTORY",
              "RECENT_BANKRUPTCY",
              "OUTSTANDING_COLLECTIONS",
              "INCOMPLETE_APPLICATION",
              "NEGATIVE_PAYMENT_HISTORY",
              "INSUFFICIENT_COLLATERAL",
              "EMPLOYMENT_INSTABILITY",
              "FRAUD_RISK",
              "REGULATORY_RESTRICTIONS",
              "GEOGRAPHIC_RESTRICTION",
              "UNVERIFIABLE_INFORMATION",
              "INSUFFICIENT_ASSETS",
              "AGE_REQUIREMENTS",
              "EXISTING_RELATIONSHIP",
              "RISK_TIER_INELIGIBILITY",
              "OTHER"
            ]
          }
        },
        "consumer_lending_decision_result": {
          "typeName": "decision_result",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_decision_result"
            },
            "min": {
              "returnType": "consumer_lending_decision_result"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_decision_result",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_result",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_result",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_decision_result",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_result",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_result",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_result",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "APPROVED",
              "DENIED",
              "PENDING_REVIEW",
              "SUSPENDED",
              "INCOMPLETE",
              "REFERRED",
              "COUNTER_OFFER",
              "WITHDRAWN",
              "OTHER"
            ]
          }
        },
        "consumer_lending_decision_type": {
          "typeName": "decision_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_decision_type"
            },
            "min": {
              "returnType": "consumer_lending_decision_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_decision_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_decision_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_decision_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PREQUALIFICATION",
              "INITIAL",
              "FINAL",
              "RECONSIDERATION",
              "COUNTER_OFFER",
              "CONDITIONAL",
              "ADMINISTRATIVE_REVIEW",
              "OTHER"
            ]
          }
        },
        "consumer_lending_delinquency_severity": {
          "typeName": "delinquency_severity",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_delinquency_severity"
            },
            "min": {
              "returnType": "consumer_lending_delinquency_severity"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_delinquency_severity",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_delinquency_severity",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_delinquency_severity",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_delinquency_severity",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_delinquency_severity",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_delinquency_severity",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_delinquency_severity",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "NONE",
              "MINOR",
              "MODERATE",
              "SERIOUS",
              "SEVERE",
              "CRITICAL",
              "LEGAL_ACTION",
              "BANKRUPTCY",
              "OTHER"
            ]
          }
        },
        "consumer_lending_delivery_method": {
          "typeName": "delivery_method",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_delivery_method"
            },
            "min": {
              "returnType": "consumer_lending_delivery_method"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_delivery_method",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_delivery_method",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_delivery_method",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_delivery_method",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_delivery_method",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_delivery_method",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_delivery_method",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "EMAIL",
              "MAIL",
              "PORTAL",
              "SMS",
              "PHONE",
              "FAX",
              "IN_PERSON",
              "OTHER"
            ]
          }
        },
        "consumer_lending_disbursement_option": {
          "typeName": "disbursement_option",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_disbursement_option"
            },
            "min": {
              "returnType": "consumer_lending_disbursement_option"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_disbursement_option",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disbursement_option",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disbursement_option",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_disbursement_option",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disbursement_option",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disbursement_option",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disbursement_option",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "DIRECT_DEPOSIT",
              "CHECK",
              "DEALER_DIRECT",
              "WIRE_TRANSFER",
              "CASH",
              "CREDIT_TO_ACCOUNT",
              "OTHER"
            ]
          }
        },
        "consumer_lending_disclosure_delivery_method": {
          "typeName": "disclosure_delivery_method",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_disclosure_delivery_method"
            },
            "min": {
              "returnType": "consumer_lending_disclosure_delivery_method"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_disclosure_delivery_method",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disclosure_delivery_method",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disclosure_delivery_method",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_disclosure_delivery_method",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disclosure_delivery_method",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disclosure_delivery_method",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disclosure_delivery_method",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "EMAIL",
              "MAIL",
              "IN_PERSON",
              "ELECTRONIC",
              "SMS",
              "FAX",
              "MOBILE_APP",
              "BRANCH_PICKUP",
              "OTHER"
            ]
          }
        },
        "consumer_lending_disclosure_type": {
          "typeName": "disclosure_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_disclosure_type"
            },
            "min": {
              "returnType": "consumer_lending_disclosure_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_disclosure_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disclosure_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disclosure_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_disclosure_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disclosure_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disclosure_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_disclosure_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "INITIAL_TIL",
              "LOAN_ESTIMATE",
              "CLOSING_DISCLOSURE",
              "CHANGE_IN_TERMS",
              "PERIODIC_STATEMENT",
              "PAYMENT_NOTICE",
              "INTEREST_RATE_ADJUSTMENT",
              "PRE_QUALIFICATION",
              "ADVERSE_ACTION",
              "REFINANCE_NOTICE",
              "OTHER"
            ]
          }
        },
        "consumer_lending_document_status": {
          "typeName": "document_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_document_status"
            },
            "min": {
              "returnType": "consumer_lending_document_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_document_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_document_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_document_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_document_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_document_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_document_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_document_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PENDING",
              "REVIEWED",
              "ACCEPTED",
              "REJECTED",
              "REQUIRES_REVISION",
              "IN_REVIEW",
              "ARCHIVED",
              "EXPIRED",
              "OTHER"
            ]
          }
        },
        "consumer_lending_document_type": {
          "typeName": "document_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_document_type"
            },
            "min": {
              "returnType": "consumer_lending_document_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_document_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_document_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_document_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_document_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_document_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_document_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_document_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "APPLICATION",
              "CONTRACT",
              "STATEMENT",
              "INCOME_VERIFICATION",
              "TAX_RETURN",
              "BANK_STATEMENT",
              "IDENTIFICATION",
              "PROOF_OF_ADDRESS",
              "CREDIT_REPORT",
              "COLLATERAL_DOCUMENT",
              "INSURANCE_DOCUMENT",
              "PROMISSORY_NOTE",
              "CLOSING_DISCLOSURE",
              "RECEIPT",
              "COMMUNICATION",
              "OTHER"
            ]
          }
        },
        "consumer_lending_ecoa_reason_code": {
          "typeName": "ecoa_reason_code",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_ecoa_reason_code"
            },
            "min": {
              "returnType": "consumer_lending_ecoa_reason_code"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_ecoa_reason_code",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_ecoa_reason_code",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_ecoa_reason_code",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_ecoa_reason_code",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_ecoa_reason_code",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_ecoa_reason_code",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_ecoa_reason_code",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "10",
              "11",
              "12",
              "20",
              "21",
              "22",
              "23",
              "30",
              "31",
              "32",
              "40",
              "41",
              "50",
              "51",
              "52",
              "60",
              "61",
              "62",
              "63",
              "64",
              "65"
            ]
          }
        },
        "consumer_lending_eligibility_criteria_type": {
          "typeName": "eligibility_criteria_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_eligibility_criteria_type"
            },
            "min": {
              "returnType": "consumer_lending_eligibility_criteria_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_eligibility_criteria_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_eligibility_criteria_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_eligibility_criteria_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_eligibility_criteria_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_eligibility_criteria_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_eligibility_criteria_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_eligibility_criteria_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CREDIT_SCORE",
              "INCOME",
              "DEBT_TO_INCOME_RATIO",
              "EMPLOYMENT_STATUS",
              "TIME_IN_BUSINESS",
              "AGE",
              "CITIZENSHIP",
              "EXISTING_DEBT",
              "BANKRUPTCY_HISTORY",
              "COLLATERAL_VALUE",
              "INDUSTRY",
              "GEOGRAPHIC_LOCATION",
              "EDUCATION_LEVEL",
              "NET_WORTH",
              "OTHER"
            ]
          }
        },
        "consumer_lending_fcra_reason_code": {
          "typeName": "fcra_reason_code",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_fcra_reason_code"
            },
            "min": {
              "returnType": "consumer_lending_fcra_reason_code"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_fcra_reason_code",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_fcra_reason_code",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_fcra_reason_code",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_fcra_reason_code",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_fcra_reason_code",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_fcra_reason_code",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_fcra_reason_code",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "A1",
              "A2",
              "A3",
              "A4",
              "A5",
              "A6",
              "A7",
              "A8",
              "A9",
              "B1",
              "B2",
              "B3",
              "B4",
              "C1",
              "C2",
              "C3",
              "D1",
              "D2",
              "D3"
            ]
          }
        },
        "consumer_lending_fee_type": {
          "typeName": "fee_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_fee_type"
            },
            "min": {
              "returnType": "consumer_lending_fee_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_fee_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_fee_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_fee_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_fee_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_fee_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_fee_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_fee_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "FLAT",
              "PERCENTAGE",
              "TIERED"
            ]
          }
        },
        "consumer_lending_housing_status": {
          "typeName": "housing_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_housing_status"
            },
            "min": {
              "returnType": "consumer_lending_housing_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_housing_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_housing_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_housing_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_housing_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_housing_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_housing_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_housing_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "OWN",
              "RENT",
              "LIVE_WITH_PARENTS",
              "MILITARY_HOUSING",
              "EMPLOYER_PROVIDED",
              "STUDENT_HOUSING",
              "SHARED_HOUSING",
              "TEMPORARY",
              "HOMELESS",
              "OTHER"
            ]
          }
        },
        "consumer_lending_income_type": {
          "typeName": "income_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_income_type"
            },
            "min": {
              "returnType": "consumer_lending_income_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_income_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_income_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_income_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_income_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_income_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_income_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_income_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SALARY",
              "SELF_EMPLOYMENT",
              "RENTAL_INCOME",
              "ALIMONY",
              "CHILD_SUPPORT",
              "PENSION",
              "SOCIAL_SECURITY",
              "DISABILITY_INCOME",
              "INVESTMENT_INCOME",
              "COMMISSION",
              "BONUS",
              "ROYALTIES",
              "ANNUITY",
              "MILITARY_PAY",
              "TIPS",
              "OTHER"
            ]
          }
        },
        "consumer_lending_information_method": {
          "typeName": "information_method",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_information_method"
            },
            "min": {
              "returnType": "consumer_lending_information_method"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_information_method",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_information_method",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_information_method",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_information_method",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_information_method",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_information_method",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_information_method",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SELF_REPORTED",
              "OBSERVED",
              "NOT_PROVIDED"
            ]
          }
        },
        "consumer_lending_inquiry_type": {
          "typeName": "inquiry_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_inquiry_type"
            },
            "min": {
              "returnType": "consumer_lending_inquiry_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_inquiry_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_inquiry_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_inquiry_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_inquiry_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_inquiry_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_inquiry_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_inquiry_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "HARD",
              "SOFT",
              "PRE_APPROVAL",
              "ACCOUNT_REVIEW",
              "EMPLOYMENT_VERIFICATION",
              "INSURANCE_QUOTE",
              "TENANT_SCREENING",
              "PROMOTIONAL",
              "COLLECTION",
              "FRAUD_PREVENTION",
              "OTHER"
            ]
          }
        },
        "consumer_lending_insurance_status": {
          "typeName": "insurance_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_insurance_status"
            },
            "min": {
              "returnType": "consumer_lending_insurance_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_insurance_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_insurance_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_insurance_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_insurance_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_insurance_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_insurance_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_insurance_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "LAPSED",
              "CANCELED",
              "PENDING",
              "SUSPENDED",
              "EXPIRED",
              "IN_GRACE_PERIOD",
              "OTHER"
            ]
          }
        },
        "consumer_lending_insurance_type": {
          "typeName": "insurance_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_insurance_type"
            },
            "min": {
              "returnType": "consumer_lending_insurance_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_insurance_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_insurance_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_insurance_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_insurance_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_insurance_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_insurance_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_insurance_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "AUTO",
              "HAZARD",
              "CREDIT_LIFE",
              "DISABILITY",
              "COMPREHENSIVE",
              "COLLISION",
              "PROPERTY",
              "TITLE",
              "LIFE",
              "UNEMPLOYMENT",
              "MARINE",
              "EQUIPMENT",
              "OTHER"
            ]
          }
        },
        "consumer_lending_interest_rate_type": {
          "typeName": "interest_rate_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_interest_rate_type"
            },
            "min": {
              "returnType": "consumer_lending_interest_rate_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_interest_rate_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_interest_rate_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_interest_rate_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_interest_rate_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_interest_rate_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_interest_rate_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_interest_rate_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "FIXED",
              "VARIABLE",
              "ADJUSTABLE",
              "HYBRID"
            ]
          }
        },
        "consumer_lending_liability_type": {
          "typeName": "liability_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_liability_type"
            },
            "min": {
              "returnType": "consumer_lending_liability_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_liability_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_liability_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_liability_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_liability_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_liability_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_liability_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_liability_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CREDIT_CARD",
              "AUTO_LOAN",
              "STUDENT_LOAN",
              "PERSONAL_LOAN",
              "MORTGAGE",
              "HOME_EQUITY_LOAN",
              "HOME_EQUITY_LINE_OF_CREDIT",
              "MEDICAL_DEBT",
              "BUSINESS_LOAN",
              "PERSONAL_LINE_OF_CREDIT",
              "INSTALLMENT_LOAN",
              "PAYDAY_LOAN",
              "RENT_TO_OWN",
              "ALIMONY",
              "CHILD_SUPPORT",
              "TAX_DEBT",
              "OTHER"
            ]
          }
        },
        "consumer_lending_loan_fee_status": {
          "typeName": "loan_fee_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_loan_fee_status"
            },
            "min": {
              "returnType": "consumer_lending_loan_fee_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_loan_fee_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_fee_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_fee_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_loan_fee_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_fee_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_fee_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_fee_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PENDING",
              "CHARGED",
              "WAIVED",
              "PAID",
              "PARTIALLY_PAID",
              "REVERSED",
              "DISPUTED",
              "WRITTEN_OFF",
              "OTHER"
            ]
          }
        },
        "consumer_lending_loan_fee_type": {
          "typeName": "loan_fee_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_loan_fee_type"
            },
            "min": {
              "returnType": "consumer_lending_loan_fee_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_loan_fee_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_fee_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_fee_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_loan_fee_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_fee_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_fee_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_fee_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "LATE_FEE",
              "NSF_FEE",
              "ORIGINATION_FEE",
              "PREPAYMENT_PENALTY",
              "UNDERWRITING_FEE",
              "DOCUMENTATION_FEE",
              "APPLICATION_FEE",
              "ANNUAL_FEE",
              "WIRE_TRANSFER_FEE",
              "RETURNED_CHECK_FEE",
              "MODIFICATION_FEE",
              "EXTENSION_FEE",
              "COLLECTION_FEE",
              "OTHER"
            ]
          }
        },
        "consumer_lending_loan_modification_status": {
          "typeName": "loan_modification_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_loan_modification_status"
            },
            "min": {
              "returnType": "consumer_lending_loan_modification_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_loan_modification_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_modification_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_modification_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_loan_modification_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_modification_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_modification_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_modification_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PENDING",
              "APPROVED",
              "DENIED",
              "COMPLETED",
              "IN_PROGRESS",
              "SUSPENDED",
              "PARTIAL",
              "CANCELED",
              "OTHER"
            ]
          }
        },
        "consumer_lending_loan_modification_type": {
          "typeName": "loan_modification_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_loan_modification_type"
            },
            "min": {
              "returnType": "consumer_lending_loan_modification_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_loan_modification_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_modification_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_modification_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_loan_modification_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_modification_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_modification_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_modification_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "RATE_REDUCTION",
              "TERM_EXTENSION",
              "PRINCIPAL_REDUCTION",
              "INTEREST_ONLY_PERIOD",
              "CAPITALIZATION",
              "PAYMENT_DEFERRAL",
              "FORBEARANCE",
              "WORKOUT",
              "REFINANCE",
              "OTHER"
            ]
          }
        },
        "consumer_lending_loan_payment_status": {
          "typeName": "loan_payment_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_loan_payment_status"
            },
            "min": {
              "returnType": "consumer_lending_loan_payment_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_loan_payment_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_payment_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_payment_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_loan_payment_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_payment_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_payment_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_payment_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PENDING",
              "COMPLETED",
              "RETURNED",
              "CANCELED",
              "REVERSED",
              "FAILED",
              "PARTIAL",
              "SUSPENDED",
              "OTHER"
            ]
          }
        },
        "consumer_lending_loan_type": {
          "typeName": "loan_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_loan_type"
            },
            "min": {
              "returnType": "consumer_lending_loan_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_loan_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_loan_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_loan_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PERSONAL",
              "AUTO",
              "STUDENT",
              "HOME_IMPROVEMENT",
              "DEBT_CONSOLIDATION",
              "MEDICAL",
              "BUSINESS",
              "RECREATIONAL_VEHICLE",
              "MOTORCYCLE",
              "BOAT",
              "WEDDING",
              "VACATION",
              "GREEN_ENERGY",
              "OTHER"
            ]
          }
        },
        "consumer_lending_next_collection_action_type": {
          "typeName": "next_collection_action_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_next_collection_action_type"
            },
            "min": {
              "returnType": "consumer_lending_next_collection_action_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_next_collection_action_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_next_collection_action_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_next_collection_action_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_next_collection_action_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_next_collection_action_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_next_collection_action_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_next_collection_action_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "FOLLOW_UP_CALL",
              "SEND_DEMAND_LETTER",
              "ESCALATE_TO_LEGAL",
              "SKIP_TRACE",
              "NEGOTIATE_SETTLEMENT",
              "PAYMENT_PLAN_DISCUSSION",
              "CREDIT_REPORTING",
              "ASSET_INVESTIGATION",
              "SUSPEND_COLLECTION",
              "OTHER"
            ]
          }
        },
        "consumer_lending_outcome_variable": {
          "typeName": "outcome_variable",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_outcome_variable"
            },
            "min": {
              "returnType": "consumer_lending_outcome_variable"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_outcome_variable",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_outcome_variable",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_outcome_variable",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_outcome_variable",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_outcome_variable",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_outcome_variable",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_outcome_variable",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "APPROVAL_RATE",
              "APR",
              "FEES",
              "LOAN_AMOUNT",
              "INTEREST_RATE",
              "LOAN_TERMS",
              "COLLATERAL_REQUIREMENTS"
            ]
          }
        },
        "consumer_lending_payment_arrangement_status": {
          "typeName": "payment_arrangement_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_payment_arrangement_status"
            },
            "min": {
              "returnType": "consumer_lending_payment_arrangement_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_payment_arrangement_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_arrangement_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_arrangement_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_payment_arrangement_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_arrangement_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_arrangement_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_arrangement_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "COMPLETED",
              "BROKEN",
              "SUSPENDED",
              "PENDING",
              "NEGOTIATING",
              "CANCELED",
              "OTHER"
            ]
          }
        },
        "consumer_lending_payment_frequency": {
          "typeName": "payment_frequency",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_payment_frequency"
            },
            "min": {
              "returnType": "consumer_lending_payment_frequency"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_payment_frequency",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_frequency",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_frequency",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_payment_frequency",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_frequency",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_frequency",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_frequency",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "WEEKLY",
              "BI_WEEKLY",
              "MONTHLY",
              "SEMI_MONTHLY",
              "QUARTERLY",
              "SEMI_ANNUALLY",
              "ANNUALLY",
              "CUSTOM",
              "OTHER"
            ]
          }
        },
        "consumer_lending_payment_method": {
          "typeName": "payment_method",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_payment_method"
            },
            "min": {
              "returnType": "consumer_lending_payment_method"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_payment_method",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_method",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_method",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_payment_method",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_method",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_method",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_method",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACH",
              "CHECK",
              "ONLINE",
              "CREDIT_CARD",
              "DEBIT_CARD",
              "WIRE_TRANSFER",
              "CASH",
              "MONEY_ORDER",
              "MOBILE_APP",
              "IN_PERSON",
              "AUTOMATIC",
              "OTHER"
            ]
          }
        },
        "consumer_lending_payment_schedule_status": {
          "typeName": "payment_schedule_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_payment_schedule_status"
            },
            "min": {
              "returnType": "consumer_lending_payment_schedule_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_payment_schedule_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_schedule_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_schedule_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_payment_schedule_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_schedule_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_schedule_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_schedule_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SCHEDULED",
              "PAID",
              "PAST_DUE",
              "PARTIALLY_PAID",
              "SKIPPED",
              "LATE_PROCESSED",
              "CANCELED",
              "PENDING",
              "FAILED",
              "OTHER"
            ]
          }
        },
        "consumer_lending_payment_status": {
          "typeName": "payment_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_payment_status"
            },
            "min": {
              "returnType": "consumer_lending_payment_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_payment_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_payment_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CURRENT",
              "DAYS_30_LATE",
              "DAYS_60_LATE",
              "DAYS_90_LATE",
              "DAYS_120_LATE",
              "DAYS_150_LATE",
              "CHARGED_OFF",
              "IN_COLLECTIONS",
              "SETTLED",
              "REPOSSESSION",
              "FORECLOSURE",
              "BANKRUPTCY",
              "OTHER"
            ]
          }
        },
        "consumer_lending_payment_type": {
          "typeName": "payment_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_payment_type"
            },
            "min": {
              "returnType": "consumer_lending_payment_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_payment_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_payment_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_payment_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "REGULAR",
              "EXTRA_PRINCIPAL",
              "LATE",
              "FULL_PAYOFF",
              "PARTIAL",
              "CATCH_UP",
              "PREPAYMENT",
              "REFINANCE",
              "OTHER"
            ]
          }
        },
        "consumer_lending_premium_frequency": {
          "typeName": "premium_frequency",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_premium_frequency"
            },
            "min": {
              "returnType": "consumer_lending_premium_frequency"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_premium_frequency",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_premium_frequency",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_premium_frequency",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_premium_frequency",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_premium_frequency",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_premium_frequency",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_premium_frequency",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ANNUAL",
              "MONTHLY",
              "QUARTERLY",
              "SEMI_ANNUAL",
              "ONE_TIME",
              "OTHER"
            ]
          }
        },
        "consumer_lending_protected_class": {
          "typeName": "protected_class",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_protected_class"
            },
            "min": {
              "returnType": "consumer_lending_protected_class"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_protected_class",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_protected_class",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_protected_class",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_protected_class",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_protected_class",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_protected_class",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_protected_class",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "RACE",
              "ETHNICITY",
              "SEX",
              "AGE",
              "NATIONAL_ORIGIN",
              "DISABILITY_STATUS",
              "MARITAL_STATUS",
              "RELIGION",
              "VETERAN_STATUS"
            ]
          }
        },
        "consumer_lending_public_record_status": {
          "typeName": "public_record_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_public_record_status"
            },
            "min": {
              "returnType": "consumer_lending_public_record_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_public_record_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_public_record_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_public_record_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_public_record_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_public_record_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_public_record_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_public_record_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "SATISFIED",
              "DISCHARGED",
              "SETTLED",
              "VACATED",
              "PENDING",
              "RELEASED",
              "EXPIRED",
              "OTHER"
            ]
          }
        },
        "consumer_lending_public_record_type": {
          "typeName": "public_record_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_public_record_type"
            },
            "min": {
              "returnType": "consumer_lending_public_record_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_public_record_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_public_record_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_public_record_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_public_record_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_public_record_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_public_record_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_public_record_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "BANKRUPTCY",
              "TAX_LIEN",
              "JUDGMENT",
              "FORECLOSURE",
              "REPOSSESSION",
              "WAGE_GARNISHMENT",
              "CIVIL_LAWSUIT",
              "SMALL_CLAIMS",
              "CHILD_SUPPORT_LIEN",
              "FEDERAL_TAX_LIEN",
              "STATE_TAX_LIEN",
              "OTHER"
            ]
          }
        },
        "consumer_lending_reg_b_notice_type": {
          "typeName": "reg_b_notice_type",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_reg_b_notice_type"
            },
            "min": {
              "returnType": "consumer_lending_reg_b_notice_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_reg_b_notice_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_reg_b_notice_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_reg_b_notice_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_reg_b_notice_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_reg_b_notice_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_reg_b_notice_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_reg_b_notice_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "INCOMPLETENESS",
              "COUNTEROFFER",
              "ACTION_TAKEN",
              "PRE_ADVERSE_ACTION",
              "ADVERSE_ACTION",
              "REQUEST_FOR_INFORMATION",
              "CONDITIONAL_APPROVAL"
            ]
          }
        },
        "consumer_lending_statement_delivery_method": {
          "typeName": "statement_delivery_method",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_statement_delivery_method"
            },
            "min": {
              "returnType": "consumer_lending_statement_delivery_method"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_statement_delivery_method",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_statement_delivery_method",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_statement_delivery_method",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_statement_delivery_method",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_statement_delivery_method",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_statement_delivery_method",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_statement_delivery_method",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "EMAIL",
              "MAIL",
              "PORTAL",
              "SMS",
              "MOBILE_APP",
              "FAX",
              "PRINT_AT_BRANCH",
              "OTHER"
            ]
          }
        },
        "consumer_lending_statistical_test": {
          "typeName": "statistical_test",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_statistical_test"
            },
            "min": {
              "returnType": "consumer_lending_statistical_test"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_statistical_test",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_statistical_test",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_statistical_test",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_statistical_test",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_statistical_test",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_statistical_test",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_statistical_test",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "T_TEST",
              "CHI_SQUARE",
              "REGRESSION",
              "ANOVA",
              "LOGISTIC_REGRESSION",
              "WILCOXON"
            ]
          }
        },
        "consumer_lending_valuation_source": {
          "typeName": "valuation_source",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_valuation_source"
            },
            "min": {
              "returnType": "consumer_lending_valuation_source"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_valuation_source",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_valuation_source",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_valuation_source",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_valuation_source",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_valuation_source",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_valuation_source",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_valuation_source",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "KELLEY_BLUE_BOOK",
              "NADA_GUIDES",
              "EDMUNDS",
              "BLACK_BOOK",
              "CARFAX",
              "DEALER_APPRAISAL",
              "INDEPENDENT_APPRAISAL",
              "MANHEIM",
              "OTHER"
            ]
          }
        },
        "consumer_lending_vehicle_condition": {
          "typeName": "vehicle_condition",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_vehicle_condition"
            },
            "min": {
              "returnType": "consumer_lending_vehicle_condition"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_vehicle_condition",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_vehicle_condition",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_vehicle_condition",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_vehicle_condition",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_vehicle_condition",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_vehicle_condition",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_vehicle_condition",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "NEW",
              "USED",
              "CERTIFIED_PRE_OWNED",
              "DEMO",
              "SALVAGE",
              "RECONSTRUCTED",
              "OTHER"
            ]
          }
        },
        "consumer_lending_verification_status": {
          "typeName": "verification_status",
          "schemaName": "consumer_lending",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "consumer_lending_verification_status"
            },
            "min": {
              "returnType": "consumer_lending_verification_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "consumer_lending_verification_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_verification_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_verification_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "consumer_lending_verification_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_verification_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_verification_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "consumer_lending_verification_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SELF_REPORTED",
              "VERIFIED",
              "FAILED",
              "PENDING",
              "PARTIALLY_VERIFIED",
              "UNABLE_TO_VERIFY"
            ]
          }
        },
        "date": {
          "typeName": "date",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "date"
            },
            "min": {
              "returnType": "date"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "date",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "date",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "date",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "date",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "date",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "date",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "date",
              "isInfix": true
            }
          },
          "typeRepresentation": "date"
        },
        "enterprise_account_category": {
          "typeName": "account_category",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_account_category"
            },
            "min": {
              "returnType": "enterprise_account_category"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_account_category",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_account_category",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_account_category",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_account_category",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_account_category",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_account_category",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_account_category",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PERSONAL",
              "BUSINESS"
            ]
          }
        },
        "enterprise_account_status": {
          "typeName": "account_status",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_account_status"
            },
            "min": {
              "returnType": "enterprise_account_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_account_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_account_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_account_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_account_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_account_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_account_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_account_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "PENDING",
              "INACTIVE",
              "SUSPENDED",
              "DORMANT",
              "FROZEN",
              "CLOSED",
              "ARCHIVED"
            ]
          }
        },
        "enterprise_address_relationship_type": {
          "typeName": "address_relationship_type",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_address_relationship_type"
            },
            "min": {
              "returnType": "enterprise_address_relationship_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_address_relationship_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_address_relationship_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_address_relationship_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_address_relationship_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_address_relationship_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_address_relationship_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_address_relationship_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "RESIDENTIAL",
              "MAILING",
              "BUSINESS",
              "BRANCH",
              "BILLING",
              "SHIPPING",
              "LEGAL",
              "SEASONAL",
              "VACATION",
              "PREVIOUS",
              "OTHER"
            ]
          }
        },
        "enterprise_address_type": {
          "typeName": "address_type",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_address_type"
            },
            "min": {
              "returnType": "enterprise_address_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_address_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_address_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_address_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_address_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_address_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_address_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_address_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "HOME",
              "WORK",
              "MAIL",
              "BILL",
              "SHIP"
            ]
          }
        },
        "enterprise_associate_status": {
          "typeName": "associate_status",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_associate_status"
            },
            "min": {
              "returnType": "enterprise_associate_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_associate_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_associate_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_associate_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_associate_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_associate_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_associate_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_associate_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_START",
              "ON_LEAVE",
              "TERMINATED"
            ]
          }
        },
        "enterprise_building_type": {
          "typeName": "building_type",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_building_type"
            },
            "min": {
              "returnType": "enterprise_building_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_building_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_building_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_building_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_building_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_building_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_building_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_building_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "BRANCH",
              "HEADQUARTERS",
              "OPERATIONS_CENTER",
              "DATA_CENTER",
              "ADMINISTRATIVE",
              "WAREHOUSE",
              "TRAINING_CENTER",
              "DISASTER_RECOVERY",
              "CALL_CENTER",
              "ATM_LOCATION",
              "OTHER"
            ]
          }
        },
        "enterprise_citizenship_status": {
          "typeName": "citizenship_status",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_citizenship_status"
            },
            "min": {
              "returnType": "enterprise_citizenship_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_citizenship_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_citizenship_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_citizenship_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_citizenship_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_citizenship_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_citizenship_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_citizenship_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "US_CITIZEN",
              "US_PERMANENT_RESIDENT",
              "US_TEMPORARY_RESIDENT",
              "NON_RESIDENT_ALIEN",
              "FOREIGN_NATIONAL",
              "DUAL_CITIZEN_US",
              "REFUGEE_ASYLEE",
              "TEMPORARY_PROTECTED_STATUS",
              "DACA_RECIPIENT",
              "UNDOCUMENTED",
              "NOT_SPECIFIED"
            ]
          }
        },
        "enterprise_credit_debit_indicator": {
          "typeName": "credit_debit_indicator",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_credit_debit_indicator"
            },
            "min": {
              "returnType": "enterprise_credit_debit_indicator"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_credit_debit_indicator",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_credit_debit_indicator",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_credit_debit_indicator",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_credit_debit_indicator",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_credit_debit_indicator",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_credit_debit_indicator",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_credit_debit_indicator",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CREDIT",
              "DEBIT"
            ]
          }
        },
        "enterprise_currency_code": {
          "typeName": "currency_code",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_currency_code"
            },
            "min": {
              "returnType": "enterprise_currency_code"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_currency_code",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_currency_code",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_currency_code",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_currency_code",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_currency_code",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_currency_code",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_currency_code",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "USD",
              "EUR",
              "GBP",
              "JPY",
              "AUD",
              "CAD",
              "CHF",
              "CNY",
              "HKD",
              "NZD",
              "SEK",
              "NOK",
              "DKK",
              "SGD",
              "MXN",
              "BRL",
              "INR",
              "RUB",
              "ZAR",
              "TRY",
              "KRW",
              "PLN",
              "ILS",
              "AED",
              "SAR",
              "THB",
              "MYR",
              "IDR",
              "PHP",
              "ARS"
            ]
          }
        },
        "enterprise_frequency": {
          "typeName": "frequency",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_frequency"
            },
            "min": {
              "returnType": "enterprise_frequency"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_frequency",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_frequency",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_frequency",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_frequency",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_frequency",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_frequency",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_frequency",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "DAILY",
              "WEEKLY",
              "BI_WEEKLY",
              "SEMI_MONTHLY",
              "MONTHLY",
              "QUARTERLY",
              "SEMI_ANNUALLY",
              "ANNUALLY",
              "CUSTOM",
              "IRREGULAR",
              "ONE_TIME",
              "OTHER"
            ]
          }
        },
        "enterprise_identifier_scheme": {
          "typeName": "identifier_scheme",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_identifier_scheme"
            },
            "min": {
              "returnType": "enterprise_identifier_scheme"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_identifier_scheme",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_identifier_scheme",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_identifier_scheme",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_identifier_scheme",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_identifier_scheme",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_identifier_scheme",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_identifier_scheme",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "IBAN",
              "BIC",
              "ACCOUNT_NUMBER",
              "ROUTING_NUMBER",
              "SORT_CODE",
              "CREDIT_CARD",
              "CLABE",
              "BSB",
              "IFSC",
              "CNAPS",
              "LEI",
              "TAX_ID",
              "CIF",
              "DDA",
              "PROPRIETARY",
              "PASSPORT",
              "DRIVERS_LICENSE",
              "NATIONAL_ID",
              "OTHER"
            ]
          }
        },
        "enterprise_legal_structure": {
          "typeName": "legal_structure",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_legal_structure"
            },
            "min": {
              "returnType": "enterprise_legal_structure"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_legal_structure",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_legal_structure",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_legal_structure",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_legal_structure",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_legal_structure",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_legal_structure",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_legal_structure",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SOLE_PROPRIETORSHIP",
              "GENERAL_PARTNERSHIP",
              "LIMITED_PARTNERSHIP",
              "LIMITED_LIABILITY_PARTNERSHIP",
              "LIMITED_LIABILITY_COMPANY",
              "C_CORPORATION",
              "S_CORPORATION",
              "PROFESSIONAL_CORPORATION",
              "NONPROFIT_CORPORATION",
              "BENEFIT_CORPORATION",
              "COOPERATIVE",
              "JOINT_VENTURE",
              "TRUST",
              "ESTATE",
              "ASSOCIATION",
              "GOVERNMENT_ENTITY",
              "FOREIGN_ENTITY",
              "NOT_APPLICABLE",
              "OTHER"
            ]
          }
        },
        "enterprise_marital_status": {
          "typeName": "marital_status",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_marital_status"
            },
            "min": {
              "returnType": "enterprise_marital_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_marital_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_marital_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_marital_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_marital_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_marital_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_marital_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_marital_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SINGLE",
              "MARRIED",
              "DOMESTIC_PARTNERSHIP",
              "SEPARATED",
              "DIVORCED",
              "WIDOWED",
              "NOT_SPECIFIED"
            ]
          }
        },
        "enterprise_operating_unit": {
          "typeName": "operating_unit",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_operating_unit"
            },
            "min": {
              "returnType": "enterprise_operating_unit"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_operating_unit",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_operating_unit",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_operating_unit",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_operating_unit",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_operating_unit",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_operating_unit",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_operating_unit",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "HR",
              "IT",
              "OPS",
              "RISK",
              "LEGAL",
              "CONSUMER_BANKING",
              "CONSUMER_LENDING",
              "SMALL_BUSINESS_BANKING",
              "CREDIT_CARDS",
              "MORTGAGE_SERVICES"
            ]
          }
        },
        "enterprise_party_relationship_type": {
          "typeName": "party_relationship_type",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_party_relationship_type"
            },
            "min": {
              "returnType": "enterprise_party_relationship_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_party_relationship_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_relationship_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_relationship_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_party_relationship_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_relationship_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_relationship_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_relationship_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "POWER_OF_ATTORNEY",
              "GUARDIAN",
              "TRUSTEE",
              "BENEFICIARY",
              "EXECUTOR",
              "CUSTODIAN",
              "AUTHORIZED_USER",
              "BUSINESS_PARTNER",
              "SPOUSE",
              "DEPENDENT",
              "CO_SIGNER",
              "EMPLOYER_EMPLOYEE",
              "AGENT",
              "PARENT_CHILD",
              "SIBLING",
              "CORPORATE_OFFICER",
              "MEMBER",
              "OWNER",
              "OTHER"
            ]
          }
        },
        "enterprise_party_status": {
          "typeName": "party_status",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_party_status"
            },
            "min": {
              "returnType": "enterprise_party_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_party_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_party_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING",
              "SUSPENDED",
              "DECEASED",
              "DISSOLVED"
            ]
          }
        },
        "enterprise_party_type": {
          "typeName": "party_type",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_party_type"
            },
            "min": {
              "returnType": "enterprise_party_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_party_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_party_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_party_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "INDIVIDUAL",
              "ORGANIZATION"
            ]
          }
        },
        "enterprise_relationship_status": {
          "typeName": "relationship_status",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_relationship_status"
            },
            "min": {
              "returnType": "enterprise_relationship_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_relationship_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_relationship_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_relationship_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_relationship_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_relationship_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_relationship_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_relationship_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "EMPLOYEE",
              "CONTRACTOR",
              "CONSULTANT",
              "INTERN",
              "TEMPORARY"
            ]
          }
        },
        "enterprise_switch_status": {
          "typeName": "switch_status",
          "schemaName": "enterprise",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "enterprise_switch_status"
            },
            "min": {
              "returnType": "enterprise_switch_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "enterprise_switch_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "enterprise_switch_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "enterprise_switch_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "enterprise_switch_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "enterprise_switch_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "enterprise_switch_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "enterprise_switch_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "NOT_SWITCHED",
              "SWITCH_COMPLETED"
            ]
          }
        },
        "float4": {
          "typeName": "float4",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "float8"
            },
            "max": {
              "returnType": "float4"
            },
            "min": {
              "returnType": "float4"
            },
            "stddev": {
              "returnType": "float8"
            },
            "stddev_pop": {
              "returnType": "float8"
            },
            "stddev_samp": {
              "returnType": "float8"
            },
            "sum": {
              "returnType": "float4"
            },
            "var_pop": {
              "returnType": "float8"
            },
            "var_samp": {
              "returnType": "float8"
            },
            "variance": {
              "returnType": "float8"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "float4",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "float4",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "float4",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "float4",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "float4",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "float4",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "float4",
              "isInfix": true
            }
          },
          "typeRepresentation": "float32"
        },
        "float8": {
          "typeName": "float8",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "float8"
            },
            "max": {
              "returnType": "float8"
            },
            "min": {
              "returnType": "float8"
            },
            "stddev": {
              "returnType": "float8"
            },
            "stddev_pop": {
              "returnType": "float8"
            },
            "stddev_samp": {
              "returnType": "float8"
            },
            "sum": {
              "returnType": "float8"
            },
            "var_pop": {
              "returnType": "float8"
            },
            "var_samp": {
              "returnType": "float8"
            },
            "variance": {
              "returnType": "float8"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "float8",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "float8",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "float8",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "float8",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "float8",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "float8",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "float8",
              "isInfix": true
            }
          },
          "typeRepresentation": "float64"
        },
        "inet": {
          "typeName": "inet",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "inet"
            },
            "min": {
              "returnType": "inet"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "inet",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "inet",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": true
            },
            "inet_same_family": {
              "operatorName": "inet_same_family",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": false
            },
            "network_overlap": {
              "operatorName": "network_overlap",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": false
            },
            "network_sub": {
              "operatorName": "network_sub",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": false
            },
            "network_subeq": {
              "operatorName": "network_subeq",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": false
            },
            "network_sup": {
              "operatorName": "network_sup",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": false
            },
            "network_supeq": {
              "operatorName": "network_supeq",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": false
            }
          },
          "typeRepresentation": null
        },
        "int4": {
          "typeName": "int4",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "numeric"
            },
            "bit_and": {
              "returnType": "int4"
            },
            "bit_or": {
              "returnType": "int4"
            },
            "bit_xor": {
              "returnType": "int4"
            },
            "max": {
              "returnType": "int4"
            },
            "min": {
              "returnType": "int4"
            },
            "stddev": {
              "returnType": "numeric"
            },
            "stddev_pop": {
              "returnType": "numeric"
            },
            "stddev_samp": {
              "returnType": "numeric"
            },
            "sum": {
              "returnType": "int8"
            },
            "var_pop": {
              "returnType": "numeric"
            },
            "var_samp": {
              "returnType": "numeric"
            },
            "variance": {
              "returnType": "numeric"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "int4",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "int4",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "int4",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "int4",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "int4",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "int4",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "int4",
              "isInfix": true
            }
          },
          "typeRepresentation": "int32"
        },
        "int8": {
          "typeName": "int8",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "numeric"
            },
            "bit_and": {
              "returnType": "int8"
            },
            "bit_or": {
              "returnType": "int8"
            },
            "bit_xor": {
              "returnType": "int8"
            },
            "max": {
              "returnType": "int8"
            },
            "min": {
              "returnType": "int8"
            },
            "stddev": {
              "returnType": "numeric"
            },
            "stddev_pop": {
              "returnType": "numeric"
            },
            "stddev_samp": {
              "returnType": "numeric"
            },
            "sum": {
              "returnType": "numeric"
            },
            "var_pop": {
              "returnType": "numeric"
            },
            "var_samp": {
              "returnType": "numeric"
            },
            "variance": {
              "returnType": "numeric"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "int8",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "int8",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "int8",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "int8",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "int8",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "int8",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "int8",
              "isInfix": true
            }
          },
          "typeRepresentation": "int64AsString"
        },
        "interval": {
          "typeName": "interval",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "interval"
            },
            "max": {
              "returnType": "interval"
            },
            "min": {
              "returnType": "interval"
            },
            "sum": {
              "returnType": "interval"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "interval",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "interval",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "interval",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "interval",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "interval",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "interval",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "interval",
              "isInfix": true
            }
          },
          "typeRepresentation": null
        },
        "jsonb": {
          "typeName": "jsonb",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {},
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "jsonb_contained": {
              "operatorName": "jsonb_contained",
              "operatorKind": "custom",
              "argumentType": "jsonb",
              "isInfix": false
            },
            "jsonb_contains": {
              "operatorName": "jsonb_contains",
              "operatorKind": "custom",
              "argumentType": "jsonb",
              "isInfix": false
            },
            "jsonb_exists": {
              "operatorName": "jsonb_exists",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": false
            }
          },
          "typeRepresentation": null
        },
        "mortgage_services_application_status": {
          "typeName": "application_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_application_status"
            },
            "min": {
              "returnType": "mortgage_services_application_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_application_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_application_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_application_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_application_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_application_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_application_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_application_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "DRAFT",
              "SUBMITTED",
              "IN_REVIEW",
              "ADDITIONAL_INFO_REQUIRED",
              "CONDITIONAL_APPROVAL",
              "APPROVED",
              "DENIED",
              "WITHDRAWN",
              "EXPIRED",
              "SUSPENDED"
            ]
          }
        },
        "mortgage_services_application_type": {
          "typeName": "application_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_application_type"
            },
            "min": {
              "returnType": "mortgage_services_application_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_application_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_application_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_application_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_application_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_application_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_application_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_application_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PURCHASE",
              "REFINANCE",
              "CASH_OUT",
              "CONSTRUCTION",
              "HOME_IMPROVEMENT",
              "RENOVATION",
              "REVERSE_MORTGAGE",
              "JUMBO",
              "FHA",
              "VA",
              "USDA",
              "LAND",
              "OTHER"
            ]
          }
        },
        "mortgage_services_appointment_status": {
          "typeName": "appointment_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_appointment_status"
            },
            "min": {
              "returnType": "mortgage_services_appointment_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_appointment_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appointment_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appointment_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_appointment_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appointment_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appointment_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appointment_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SCHEDULED",
              "RESCHEDULED",
              "CONFIRMED",
              "IN_PROGRESS",
              "COMPLETED",
              "CANCELLED",
              "MISSED",
              "PENDING"
            ]
          }
        },
        "mortgage_services_appraisal_status": {
          "typeName": "appraisal_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_appraisal_status"
            },
            "min": {
              "returnType": "mortgage_services_appraisal_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_appraisal_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appraisal_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appraisal_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_appraisal_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appraisal_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appraisal_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appraisal_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ORDERED",
              "ASSIGNED",
              "SCHEDULED",
              "INSPECTION_COMPLETED",
              "IN_PROGRESS",
              "SUBMITTED",
              "UNDER_REVIEW",
              "REVISION_NEEDED",
              "COMPLETED",
              "REJECTED",
              "CANCELLED",
              "EXPIRED",
              "OTHER"
            ]
          }
        },
        "mortgage_services_appraisal_type": {
          "typeName": "appraisal_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_appraisal_type"
            },
            "min": {
              "returnType": "mortgage_services_appraisal_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_appraisal_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appraisal_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appraisal_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_appraisal_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appraisal_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appraisal_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_appraisal_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "FULL_APPRAISAL",
              "DRIVE_BY",
              "DESKTOP",
              "BPO",
              "AVM",
              "APPRAISAL_UPDATE",
              "FIELD_REVIEW",
              "DESK_REVIEW",
              "RECERTIFICATION",
              "FHA_APPRAISAL",
              "VA_APPRAISAL",
              "USDA_APPRAISAL",
              "OTHER"
            ]
          }
        },
        "mortgage_services_asset_type": {
          "typeName": "asset_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_asset_type"
            },
            "min": {
              "returnType": "mortgage_services_asset_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_asset_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_asset_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_asset_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_asset_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_asset_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_asset_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_asset_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CHECKING_ACCOUNT",
              "SAVINGS_ACCOUNT",
              "MONEY_MARKET",
              "CERTIFICATE_OF_DEPOSIT",
              "BROKERAGE_ACCOUNT",
              "RETIREMENT_ACCOUNT",
              "INVESTMENT_PROPERTY",
              "PRIMARY_RESIDENCE",
              "SECONDARY_RESIDENCE",
              "OTHER_REAL_ESTATE",
              "MUTUAL_FUND",
              "STOCK_EQUITY",
              "BONDS",
              "LIFE_INSURANCE",
              "VEHICLE",
              "BUSINESS_EQUITY",
              "TRUST_ACCOUNT",
              "CRYPTOCURRENCY",
              "OTHER"
            ]
          }
        },
        "mortgage_services_borrower_type": {
          "typeName": "borrower_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_borrower_type"
            },
            "min": {
              "returnType": "mortgage_services_borrower_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_borrower_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_borrower_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_borrower_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_borrower_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_borrower_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_borrower_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_borrower_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PRIMARY",
              "CO_BORROWER",
              "GUARANTOR",
              "COSIGNER"
            ]
          }
        },
        "mortgage_services_closing_type": {
          "typeName": "closing_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_closing_type"
            },
            "min": {
              "returnType": "mortgage_services_closing_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_closing_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_closing_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_closing_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_closing_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_closing_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_closing_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_closing_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "IN_PERSON",
              "HYBRID",
              "REMOTE",
              "MAIL_AWAY",
              "ESCROW",
              "POWER_OF_ATTORNEY",
              "DRY_CLOSING",
              "WET_CLOSING"
            ]
          }
        },
        "mortgage_services_communication_direction": {
          "typeName": "communication_direction",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_communication_direction"
            },
            "min": {
              "returnType": "mortgage_services_communication_direction"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_communication_direction",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_direction",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_direction",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_communication_direction",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_direction",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_direction",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_direction",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "INBOUND",
              "OUTBOUND",
              "INTERNAL"
            ]
          }
        },
        "mortgage_services_communication_purpose": {
          "typeName": "communication_purpose",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_communication_purpose"
            },
            "min": {
              "returnType": "mortgage_services_communication_purpose"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_communication_purpose",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_purpose",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_purpose",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_communication_purpose",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_purpose",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_purpose",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_purpose",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PAYMENT_REMINDER",
              "PAYMENT_CONFIRMATION",
              "ESCROW_ANALYSIS",
              "FORBEARANCE",
              "MODIFICATION",
              "DOCUMENT_REQUEST",
              "DOCUMENT_RECEIPT",
              "STATEMENT",
              "INSURANCE",
              "TAXES",
              "DEFAULT_NOTICE",
              "FORECLOSURE",
              "LOSS_MITIGATION",
              "GENERAL_INQUIRY",
              "COMPLAINT",
              "WELCOME",
              "REGULATORY",
              "OTHER"
            ]
          }
        },
        "mortgage_services_communication_status": {
          "typeName": "communication_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_communication_status"
            },
            "min": {
              "returnType": "mortgage_services_communication_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_communication_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_communication_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SENT",
              "DELIVERED",
              "FAILED",
              "RECEIVED",
              "READ",
              "PENDING",
              "DRAFT",
              "CANCELLED",
              "RETURNED",
              "OTHER"
            ]
          }
        },
        "mortgage_services_communication_type": {
          "typeName": "communication_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_communication_type"
            },
            "min": {
              "returnType": "mortgage_services_communication_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_communication_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_communication_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_communication_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "EMAIL",
              "LETTER",
              "PHONE_CALL",
              "SMS",
              "IN_PERSON",
              "PORTAL_MESSAGE",
              "VOICEMAIL",
              "FAX",
              "VIDEO_CALL",
              "CHAT",
              "OTHER"
            ]
          }
        },
        "mortgage_services_condition_status": {
          "typeName": "condition_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_condition_status"
            },
            "min": {
              "returnType": "mortgage_services_condition_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_condition_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_condition_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_condition_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_condition_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_condition_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_condition_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_condition_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PENDING",
              "IN_PROCESS",
              "SUBMITTED",
              "ACCEPTED",
              "REJECTED",
              "WAIVED",
              "EXPIRED",
              "CLEARED",
              "OTHER"
            ]
          }
        },
        "mortgage_services_condition_type": {
          "typeName": "condition_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_condition_type"
            },
            "min": {
              "returnType": "mortgage_services_condition_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_condition_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_condition_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_condition_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_condition_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_condition_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_condition_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_condition_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PRIOR_TO_APPROVAL",
              "PRIOR_TO_CLOSING",
              "PRIOR_TO_FUNDING",
              "PRIOR_TO_DOCS",
              "AT_CLOSING",
              "POST_CLOSING",
              "UNDERWRITER_REQUIREMENT",
              "AGENCY_REQUIREMENT",
              "OTHER"
            ]
          }
        },
        "mortgage_services_credit_bureau": {
          "typeName": "credit_bureau",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_credit_bureau"
            },
            "min": {
              "returnType": "mortgage_services_credit_bureau"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_credit_bureau",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_credit_bureau",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_credit_bureau",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_credit_bureau",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_credit_bureau",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_credit_bureau",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_credit_bureau",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "EQUIFAX",
              "EXPERIAN",
              "TRANSUNION",
              "INNOVIS",
              "CLEAR_REPORT",
              "OTHER"
            ]
          }
        },
        "mortgage_services_credit_report_type": {
          "typeName": "credit_report_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_credit_report_type"
            },
            "min": {
              "returnType": "mortgage_services_credit_report_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_credit_report_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_credit_report_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_credit_report_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_credit_report_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_credit_report_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_credit_report_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_credit_report_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "TRI_MERGE",
              "SINGLE_BUREAU",
              "MERGED_BUREAU",
              "EXPANDED",
              "CUSTOM",
              "OTHER"
            ]
          }
        },
        "mortgage_services_delivery_method": {
          "typeName": "delivery_method",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_delivery_method"
            },
            "min": {
              "returnType": "mortgage_services_delivery_method"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_delivery_method",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_delivery_method",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_delivery_method",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_delivery_method",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_delivery_method",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_delivery_method",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_delivery_method",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "EMAIL",
              "MAIL",
              "IN_PERSON",
              "ELECTRONIC_PORTAL",
              "COURIER",
              "FAX",
              "OTHER"
            ]
          }
        },
        "mortgage_services_disbursement_status": {
          "typeName": "disbursement_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_disbursement_status"
            },
            "min": {
              "returnType": "mortgage_services_disbursement_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_disbursement_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disbursement_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disbursement_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_disbursement_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disbursement_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disbursement_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disbursement_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PENDING",
              "PROCESSING",
              "COMPLETED",
              "FAILED",
              "RETURNED",
              "CANCELED",
              "HOLD",
              "CLEARED",
              "VOID",
              "REISSUED",
              "PARTIAL",
              "SCHEDULED",
              "SENT",
              "OTHER"
            ]
          }
        },
        "mortgage_services_disbursement_type": {
          "typeName": "disbursement_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_disbursement_type"
            },
            "min": {
              "returnType": "mortgage_services_disbursement_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_disbursement_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disbursement_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disbursement_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_disbursement_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disbursement_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disbursement_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disbursement_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PROPERTY_TAX",
              "HOMEOWNERS_INSURANCE",
              "MORTGAGE_INSURANCE",
              "FLOOD_INSURANCE",
              "HOA_DUES",
              "HAZARD_INSURANCE",
              "CONDO_INSURANCE",
              "CITY_TAX",
              "COUNTY_TAX",
              "SCHOOL_TAX",
              "SPECIAL_ASSESSMENT",
              "GROUND_RENT",
              "ESCROW_REFUND",
              "ESCROW_SHORTAGE",
              "OTHER"
            ]
          }
        },
        "mortgage_services_disclosure_type": {
          "typeName": "disclosure_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_disclosure_type"
            },
            "min": {
              "returnType": "mortgage_services_disclosure_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_disclosure_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disclosure_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disclosure_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_disclosure_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disclosure_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disclosure_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_disclosure_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "LOAN_ESTIMATE",
              "CLOSING_DISCLOSURE",
              "CHANGE_IN_TERMS",
              "REVISED_CLOSING_DISCLOSURE",
              "CORRECTED_CLOSING_DISCLOSURE",
              "FEE_ESTIMATE",
              "INITIAL_ESCROW_STATEMENT",
              "OTHER"
            ]
          }
        },
        "mortgage_services_document_status": {
          "typeName": "document_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_document_status"
            },
            "min": {
              "returnType": "mortgage_services_document_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_document_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_document_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_document_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_document_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_document_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_document_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_document_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PENDING",
              "REVIEWED",
              "ACCEPTED",
              "REJECTED",
              "REQUIRES_REVISION",
              "IN_REVIEW",
              "ARCHIVED",
              "EXPIRED",
              "OTHER"
            ]
          }
        },
        "mortgage_services_document_type": {
          "typeName": "document_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_document_type"
            },
            "min": {
              "returnType": "mortgage_services_document_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_document_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_document_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_document_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_document_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_document_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_document_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_document_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "TAX_RETURN",
              "W2",
              "PAY_STUB",
              "BANK_STATEMENT",
              "CREDIT_REPORT",
              "ASSET_STATEMENT",
              "IDENTITY_VERIFICATION",
              "PROPERTY_APPRAISAL",
              "PURCHASE_AGREEMENT",
              "TITLE_INSURANCE",
              "CLOSING_DISCLOSURE",
              "LOAN_ESTIMATE",
              "MORTGAGE_NOTE",
              "DEED",
              "INSURANCE_PROOF",
              "LETTER_OF_EXPLANATION",
              "GIFT_LETTER",
              "SELF_EMPLOYMENT",
              "BANKRUPTCY_DISCHARGE",
              "DIVORCE_DECREE",
              "OTHER"
            ]
          }
        },
        "mortgage_services_employment_type": {
          "typeName": "employment_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_employment_type"
            },
            "min": {
              "returnType": "mortgage_services_employment_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_employment_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_employment_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_employment_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_employment_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_employment_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_employment_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_employment_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "FULL_TIME",
              "PART_TIME",
              "SELF_EMPLOYED",
              "CONTRACTOR",
              "SEASONAL",
              "COMMISSION",
              "RETIRED",
              "UNEMPLOYED",
              "MILITARY",
              "OTHER"
            ]
          }
        },
        "mortgage_services_escrow_analysis_status": {
          "typeName": "escrow_analysis_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_escrow_analysis_status"
            },
            "min": {
              "returnType": "mortgage_services_escrow_analysis_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_escrow_analysis_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_escrow_analysis_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_escrow_analysis_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_escrow_analysis_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_escrow_analysis_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_escrow_analysis_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_escrow_analysis_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PENDING",
              "COMPLETED",
              "REVIEWED",
              "APPROVED",
              "REJECTED",
              "IN_PROGRESS",
              "CANCELLED",
              "CUSTOMER_NOTIFIED",
              "ADJUSTMENT_PENDING",
              "ADJUSTMENT_APPLIED",
              "EXCEPTION",
              "EXPIRED",
              "OTHER"
            ]
          }
        },
        "mortgage_services_hardship_reason": {
          "typeName": "hardship_reason",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hardship_reason"
            },
            "min": {
              "returnType": "mortgage_services_hardship_reason"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hardship_reason",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hardship_reason",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hardship_reason",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hardship_reason",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hardship_reason",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hardship_reason",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hardship_reason",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "FINANCIAL_HARDSHIP",
              "JOB_LOSS",
              "MEDICAL_ISSUES",
              "NATURAL_DISASTER",
              "DIVORCE",
              "INCOME_REDUCTION",
              "DEATH_IN_FAMILY",
              "MILITARY_SERVICE",
              "BUSINESS_FAILURE",
              "DISABILITY",
              "INCREASED_EXPENSES",
              "RELOCATION",
              "PROPERTY_ISSUES",
              "OTHER"
            ]
          }
        },
        "mortgage_services_hmda_action_taken": {
          "typeName": "hmda_action_taken",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_action_taken"
            },
            "min": {
              "returnType": "mortgage_services_hmda_action_taken"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_action_taken",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_action_taken",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_action_taken",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_action_taken",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_action_taken",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_action_taken",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_action_taken",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8"
            ]
          }
        },
        "mortgage_services_hmda_age_group": {
          "typeName": "hmda_age_group",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_age_group"
            },
            "min": {
              "returnType": "mortgage_services_hmda_age_group"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_age_group",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_age_group",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_age_group",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_age_group",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_age_group",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_age_group",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_age_group",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9"
            ]
          }
        },
        "mortgage_services_hmda_applicant_present": {
          "typeName": "hmda_applicant_present",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_applicant_present"
            },
            "min": {
              "returnType": "mortgage_services_hmda_applicant_present"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_applicant_present",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_applicant_present",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_applicant_present",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_applicant_present",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_applicant_present",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_applicant_present",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_applicant_present",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3"
            ]
          }
        },
        "mortgage_services_hmda_applicant_type": {
          "typeName": "hmda_applicant_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_applicant_type"
            },
            "min": {
              "returnType": "mortgage_services_hmda_applicant_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_applicant_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_applicant_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_applicant_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_applicant_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_applicant_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_applicant_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_applicant_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PRIMARY",
              "CO_APPLICANT",
              "BORROWER",
              "CO_BORROWER",
              "GUARANTOR"
            ]
          }
        },
        "mortgage_services_hmda_aus": {
          "typeName": "hmda_aus",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_aus"
            },
            "min": {
              "returnType": "mortgage_services_hmda_aus"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_aus",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_aus",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_aus",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_aus",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_aus",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_aus",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_aus",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "1111"
            ]
          }
        },
        "mortgage_services_hmda_balloon_payment": {
          "typeName": "hmda_balloon_payment",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_balloon_payment"
            },
            "min": {
              "returnType": "mortgage_services_hmda_balloon_payment"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_balloon_payment",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_balloon_payment",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_balloon_payment",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_balloon_payment",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_balloon_payment",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_balloon_payment",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_balloon_payment",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2"
            ]
          }
        },
        "mortgage_services_hmda_business_or_commercial_purpose": {
          "typeName": "hmda_business_or_commercial_purpose",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_business_or_commercial_purpose"
            },
            "min": {
              "returnType": "mortgage_services_hmda_business_or_commercial_purpose"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_business_or_commercial_purpose",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_business_or_commercial_purpose",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_business_or_commercial_purpose",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_business_or_commercial_purpose",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_business_or_commercial_purpose",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_business_or_commercial_purpose",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_business_or_commercial_purpose",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "1111"
            ]
          }
        },
        "mortgage_services_hmda_collection_method": {
          "typeName": "hmda_collection_method",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_collection_method"
            },
            "min": {
              "returnType": "mortgage_services_hmda_collection_method"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_collection_method",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_collection_method",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_collection_method",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_collection_method",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_collection_method",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_collection_method",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_collection_method",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3"
            ]
          }
        },
        "mortgage_services_hmda_construction_method": {
          "typeName": "hmda_construction_method",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_construction_method"
            },
            "min": {
              "returnType": "mortgage_services_hmda_construction_method"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_construction_method",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_construction_method",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_construction_method",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_construction_method",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_construction_method",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_construction_method",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_construction_method",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2"
            ]
          }
        },
        "mortgage_services_hmda_credit_score_model": {
          "typeName": "hmda_credit_score_model",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_credit_score_model"
            },
            "min": {
              "returnType": "mortgage_services_hmda_credit_score_model"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_credit_score_model",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_credit_score_model",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_credit_score_model",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_credit_score_model",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_credit_score_model",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_credit_score_model",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_credit_score_model",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "1111"
            ]
          }
        },
        "mortgage_services_hmda_denial_reason": {
          "typeName": "hmda_denial_reason",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_denial_reason"
            },
            "min": {
              "returnType": "mortgage_services_hmda_denial_reason"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_denial_reason",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_denial_reason",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_denial_reason",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_denial_reason",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_denial_reason",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_denial_reason",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_denial_reason",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10"
            ]
          }
        },
        "mortgage_services_hmda_edit_status": {
          "typeName": "hmda_edit_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_edit_status"
            },
            "min": {
              "returnType": "mortgage_services_hmda_edit_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_edit_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_edit_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_edit_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_edit_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_edit_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_edit_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_edit_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "OPEN",
              "VERIFIED",
              "CORRECTED",
              "IN_PROGRESS",
              "WAIVED"
            ]
          }
        },
        "mortgage_services_hmda_edit_type": {
          "typeName": "hmda_edit_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_edit_type"
            },
            "min": {
              "returnType": "mortgage_services_hmda_edit_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_edit_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_edit_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_edit_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_edit_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_edit_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_edit_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_edit_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SYNTACTICAL",
              "VALIDITY",
              "QUALITY",
              "MACRO"
            ]
          }
        },
        "mortgage_services_hmda_ethnicity": {
          "typeName": "hmda_ethnicity",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_ethnicity"
            },
            "min": {
              "returnType": "mortgage_services_hmda_ethnicity"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_ethnicity",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_ethnicity",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_ethnicity",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_ethnicity",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_ethnicity",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_ethnicity",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_ethnicity",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5"
            ]
          }
        },
        "mortgage_services_hmda_ethnicity_detail": {
          "typeName": "hmda_ethnicity_detail",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_ethnicity_detail"
            },
            "min": {
              "returnType": "mortgage_services_hmda_ethnicity_detail"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_ethnicity_detail",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_ethnicity_detail",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_ethnicity_detail",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_ethnicity_detail",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_ethnicity_detail",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_ethnicity_detail",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_ethnicity_detail",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ]
          }
        },
        "mortgage_services_hmda_hoepa_status": {
          "typeName": "hmda_hoepa_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_hoepa_status"
            },
            "min": {
              "returnType": "mortgage_services_hmda_hoepa_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_hoepa_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_hoepa_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_hoepa_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_hoepa_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_hoepa_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_hoepa_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_hoepa_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3"
            ]
          }
        },
        "mortgage_services_hmda_interest_only": {
          "typeName": "hmda_interest_only",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_interest_only"
            },
            "min": {
              "returnType": "mortgage_services_hmda_interest_only"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_interest_only",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_interest_only",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_interest_only",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_interest_only",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_interest_only",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_interest_only",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_interest_only",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2"
            ]
          }
        },
        "mortgage_services_hmda_lien_status": {
          "typeName": "hmda_lien_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_lien_status"
            },
            "min": {
              "returnType": "mortgage_services_hmda_lien_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_lien_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_lien_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_lien_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_lien_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_lien_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_lien_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_lien_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ]
          }
        },
        "mortgage_services_hmda_loan_purpose": {
          "typeName": "hmda_loan_purpose",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_loan_purpose"
            },
            "min": {
              "returnType": "mortgage_services_hmda_loan_purpose"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_loan_purpose",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_loan_purpose",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_loan_purpose",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_loan_purpose",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_loan_purpose",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_loan_purpose",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_loan_purpose",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "31",
              "32",
              "OTHER"
            ]
          }
        },
        "mortgage_services_hmda_manufactured_home_type": {
          "typeName": "hmda_manufactured_home_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_manufactured_home_type"
            },
            "min": {
              "returnType": "mortgage_services_hmda_manufactured_home_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_manufactured_home_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_manufactured_home_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_manufactured_home_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_manufactured_home_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_manufactured_home_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_manufactured_home_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_manufactured_home_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3"
            ]
          }
        },
        "mortgage_services_hmda_manufactured_land_property_interest": {
          "typeName": "hmda_manufactured_land_property_interest",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_manufactured_land_property_interest"
            },
            "min": {
              "returnType": "mortgage_services_hmda_manufactured_land_property_interest"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_manufactured_land_property_interest",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_manufactured_land_property_interest",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_manufactured_land_property_interest",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_manufactured_land_property_interest",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_manufactured_land_property_interest",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_manufactured_land_property_interest",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_manufactured_land_property_interest",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5"
            ]
          }
        },
        "mortgage_services_hmda_negative_amortization": {
          "typeName": "hmda_negative_amortization",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_negative_amortization"
            },
            "min": {
              "returnType": "mortgage_services_hmda_negative_amortization"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_negative_amortization",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_negative_amortization",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_negative_amortization",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_negative_amortization",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_negative_amortization",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_negative_amortization",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_negative_amortization",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2"
            ]
          }
        },
        "mortgage_services_hmda_occupancy_type": {
          "typeName": "hmda_occupancy_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_occupancy_type"
            },
            "min": {
              "returnType": "mortgage_services_hmda_occupancy_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_occupancy_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_occupancy_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_occupancy_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_occupancy_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_occupancy_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_occupancy_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_occupancy_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3"
            ]
          }
        },
        "mortgage_services_hmda_open_end_line_of_credit": {
          "typeName": "hmda_open_end_line_of_credit",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_open_end_line_of_credit"
            },
            "min": {
              "returnType": "mortgage_services_hmda_open_end_line_of_credit"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_open_end_line_of_credit",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_open_end_line_of_credit",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_open_end_line_of_credit",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_open_end_line_of_credit",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_open_end_line_of_credit",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_open_end_line_of_credit",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_open_end_line_of_credit",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "1111"
            ]
          }
        },
        "mortgage_services_hmda_other_non_amortizing": {
          "typeName": "hmda_other_non_amortizing",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_other_non_amortizing"
            },
            "min": {
              "returnType": "mortgage_services_hmda_other_non_amortizing"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_other_non_amortizing",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_other_non_amortizing",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_other_non_amortizing",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_other_non_amortizing",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_other_non_amortizing",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_other_non_amortizing",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_other_non_amortizing",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2"
            ]
          }
        },
        "mortgage_services_hmda_preapproval": {
          "typeName": "hmda_preapproval",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_preapproval"
            },
            "min": {
              "returnType": "mortgage_services_hmda_preapproval"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_preapproval",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_preapproval",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_preapproval",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_preapproval",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_preapproval",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_preapproval",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_preapproval",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3"
            ]
          }
        },
        "mortgage_services_hmda_race": {
          "typeName": "hmda_race",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_race"
            },
            "min": {
              "returnType": "mortgage_services_hmda_race"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_race",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_race",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_race",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_race",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_race",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_race",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_race",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8"
            ]
          }
        },
        "mortgage_services_hmda_record_edit_status": {
          "typeName": "hmda_record_edit_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_record_edit_status"
            },
            "min": {
              "returnType": "mortgage_services_hmda_record_edit_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_record_edit_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_record_edit_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_record_edit_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_record_edit_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_record_edit_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_record_edit_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_record_edit_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "NOT_STARTED",
              "IN_PROGRESS",
              "VALID",
              "INVALID",
              "QUALITY_ISSUES",
              "MACRO_ISSUES"
            ]
          }
        },
        "mortgage_services_hmda_reverse_mortgage": {
          "typeName": "hmda_reverse_mortgage",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_reverse_mortgage"
            },
            "min": {
              "returnType": "mortgage_services_hmda_reverse_mortgage"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_reverse_mortgage",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_reverse_mortgage",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_reverse_mortgage",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_reverse_mortgage",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_reverse_mortgage",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_reverse_mortgage",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_reverse_mortgage",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "1111"
            ]
          }
        },
        "mortgage_services_hmda_sex": {
          "typeName": "hmda_sex",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_sex"
            },
            "min": {
              "returnType": "mortgage_services_hmda_sex"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_sex",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_sex",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_sex",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_sex",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_sex",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_sex",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_sex",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6"
            ]
          }
        },
        "mortgage_services_hmda_submission_method": {
          "typeName": "hmda_submission_method",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_submission_method"
            },
            "min": {
              "returnType": "mortgage_services_hmda_submission_method"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_submission_method",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_submission_method",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_submission_method",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_submission_method",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_submission_method",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_submission_method",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_submission_method",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3"
            ]
          }
        },
        "mortgage_services_hmda_submission_status": {
          "typeName": "hmda_submission_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_hmda_submission_status"
            },
            "min": {
              "returnType": "mortgage_services_hmda_submission_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_hmda_submission_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_submission_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_submission_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_hmda_submission_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_submission_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_submission_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_hmda_submission_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PENDING",
              "SUBMITTED",
              "ACCEPTED",
              "REJECTED",
              "EXEMPTED"
            ]
          }
        },
        "mortgage_services_income_frequency": {
          "typeName": "income_frequency",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_income_frequency"
            },
            "min": {
              "returnType": "mortgage_services_income_frequency"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_income_frequency",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_income_frequency",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_income_frequency",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_income_frequency",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_income_frequency",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_income_frequency",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_income_frequency",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "WEEKLY",
              "BI_WEEKLY",
              "SEMI_MONTHLY",
              "MONTHLY",
              "QUARTERLY",
              "SEMI_ANNUALLY",
              "ANNUALLY",
              "IRREGULAR"
            ]
          }
        },
        "mortgage_services_income_type": {
          "typeName": "income_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_income_type"
            },
            "min": {
              "returnType": "mortgage_services_income_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_income_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_income_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_income_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_income_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_income_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_income_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_income_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SALARY",
              "BONUS",
              "COMMISSION",
              "OVERTIME",
              "SELF_EMPLOYMENT",
              "RENTAL",
              "INVESTMENT",
              "RETIREMENT",
              "PENSION",
              "SOCIAL_SECURITY",
              "DISABILITY",
              "ALIMONY",
              "CHILD_SUPPORT",
              "TRUST",
              "GOVERNMENT_ASSISTANCE",
              "ROYALTIES",
              "OTHER"
            ]
          }
        },
        "mortgage_services_insurance_policy_status": {
          "typeName": "insurance_policy_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_insurance_policy_status"
            },
            "min": {
              "returnType": "mortgage_services_insurance_policy_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_insurance_policy_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_insurance_policy_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_insurance_policy_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_insurance_policy_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_insurance_policy_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_insurance_policy_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_insurance_policy_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "PENDING",
              "EXPIRED",
              "CANCELLED",
              "RENEWED",
              "LAPSED",
              "REINSTATED",
              "FORCE_PLACED",
              "UNDER_REVIEW",
              "CLAIM_IN_PROGRESS",
              "NON_RENEWAL",
              "OTHER"
            ]
          }
        },
        "mortgage_services_insurance_type": {
          "typeName": "insurance_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_insurance_type"
            },
            "min": {
              "returnType": "mortgage_services_insurance_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_insurance_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_insurance_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_insurance_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_insurance_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_insurance_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_insurance_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_insurance_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "HAZARD",
              "FLOOD",
              "WIND",
              "EARTHQUAKE",
              "PMI",
              "LENDERS_PLACED",
              "OTHER"
            ]
          }
        },
        "mortgage_services_interest_rate_type": {
          "typeName": "interest_rate_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_interest_rate_type"
            },
            "min": {
              "returnType": "mortgage_services_interest_rate_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_interest_rate_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_interest_rate_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_interest_rate_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_interest_rate_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_interest_rate_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_interest_rate_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_interest_rate_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "FIXED",
              "ADJUSTABLE",
              "HYBRID",
              "INTEREST_ONLY",
              "STEP_RATE",
              "BALLOON",
              "OTHER"
            ]
          }
        },
        "mortgage_services_liability_type": {
          "typeName": "liability_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_liability_type"
            },
            "min": {
              "returnType": "mortgage_services_liability_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_liability_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_liability_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_liability_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_liability_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_liability_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_liability_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_liability_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CREDIT_CARD",
              "AUTO_LOAN",
              "STUDENT_LOAN",
              "PERSONAL_LOAN",
              "MORTGAGE",
              "HOME_EQUITY_LOAN",
              "HOME_EQUITY_LINE_OF_CREDIT",
              "MEDICAL_DEBT",
              "BUSINESS_LOAN",
              "RETAIL_CREDIT",
              "INSTALLMENT_LOAN",
              "PAYDAY_LOAN",
              "TAX_DEBT",
              "OTHER"
            ]
          }
        },
        "mortgage_services_loan_modification_status": {
          "typeName": "loan_modification_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_loan_modification_status"
            },
            "min": {
              "returnType": "mortgage_services_loan_modification_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_loan_modification_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_modification_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_modification_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_loan_modification_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_modification_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_modification_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_modification_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PENDING",
              "APPROVED",
              "DENIED",
              "COMPLETED",
              "IN_PROGRESS",
              "SUSPENDED",
              "PARTIAL",
              "CANCELED",
              "EXPIRED",
              "TRIAL_PERIOD",
              "BORROWER_ACCEPTED",
              "BORROWER_REJECTED",
              "OTHER"
            ]
          }
        },
        "mortgage_services_loan_modification_type": {
          "typeName": "loan_modification_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_loan_modification_type"
            },
            "min": {
              "returnType": "mortgage_services_loan_modification_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_loan_modification_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_modification_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_modification_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_loan_modification_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_modification_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_modification_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_modification_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "RATE_REDUCTION",
              "TERM_EXTENSION",
              "PRINCIPAL_REDUCTION",
              "INTEREST_ONLY_PERIOD",
              "CAPITALIZATION",
              "PAYMENT_DEFERRAL",
              "FORBEARANCE",
              "WORKOUT",
              "REFINANCE",
              "PRINCIPAL_FORGIVENESS",
              "BALLOON_MODIFICATION",
              "STEP_RATE",
              "OTHER"
            ]
          }
        },
        "mortgage_services_loan_purpose": {
          "typeName": "loan_purpose",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_loan_purpose"
            },
            "min": {
              "returnType": "mortgage_services_loan_purpose"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_loan_purpose",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_purpose",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_purpose",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_loan_purpose",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_purpose",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_purpose",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_purpose",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PRIMARY_RESIDENCE",
              "SECOND_HOME",
              "INVESTMENT_PROPERTY",
              "RENTAL",
              "VACATION_HOME",
              "MULTI_FAMILY",
              "RELOCATION",
              "OTHER"
            ]
          }
        },
        "mortgage_services_loan_rate_lock_status": {
          "typeName": "loan_rate_lock_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_loan_rate_lock_status"
            },
            "min": {
              "returnType": "mortgage_services_loan_rate_lock_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_loan_rate_lock_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_rate_lock_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_rate_lock_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_loan_rate_lock_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_rate_lock_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_rate_lock_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_rate_lock_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "Active",
              "Locked",
              "Expired",
              "Closed"
            ]
          }
        },
        "mortgage_services_loan_type": {
          "typeName": "loan_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_loan_type"
            },
            "min": {
              "returnType": "mortgage_services_loan_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_loan_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_loan_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_loan_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CONVENTIONAL",
              "FHA",
              "VA",
              "USDA",
              "JUMBO",
              "CONSTRUCTION",
              "HOME_EQUITY",
              "REFINANCE",
              "REVERSE_MORTGAGE",
              "OTHER"
            ]
          }
        },
        "mortgage_services_occupancy_type": {
          "typeName": "occupancy_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_occupancy_type"
            },
            "min": {
              "returnType": "mortgage_services_occupancy_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_occupancy_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_occupancy_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_occupancy_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_occupancy_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_occupancy_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_occupancy_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_occupancy_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PRIMARY_RESIDENCE",
              "SECONDARY_RESIDENCE",
              "INVESTMENT",
              "NOT_APPLICABLE"
            ]
          }
        },
        "mortgage_services_payment_type": {
          "typeName": "payment_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_payment_type"
            },
            "min": {
              "returnType": "mortgage_services_payment_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_payment_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_payment_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_payment_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_payment_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_payment_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_payment_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_payment_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "PRINCIPAL_AND_INTEREST",
              "PRINCIPAL_ONLY",
              "INTEREST_ONLY",
              "ESCROW",
              "LATE_FEE",
              "PREPAYMENT_PENALTY",
              "FULL_PAYOFF",
              "PARTIAL_PAYMENT",
              "BIWEEKLY",
              "FORBEARANCE",
              "LOAN_MODIFICATION",
              "BALLOON",
              "SERVICING_FEE",
              "EXTENSION_FEE",
              "OTHER"
            ]
          }
        },
        "mortgage_services_property_type": {
          "typeName": "property_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_property_type"
            },
            "min": {
              "returnType": "mortgage_services_property_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_property_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_property_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_property_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_property_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_property_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_property_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_property_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SINGLE_FAMILY",
              "CONDO",
              "TOWNHOUSE",
              "MULTI_FAMILY",
              "APARTMENT_BUILDING",
              "MANUFACTURED_HOME",
              "COOPERATIVE",
              "PUD",
              "VACANT_LAND",
              "COMMERCIAL",
              "MIXED_USE",
              "FARM",
              "OTHER"
            ]
          }
        },
        "mortgage_services_relationship_type": {
          "typeName": "relationship_type",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_relationship_type"
            },
            "min": {
              "returnType": "mortgage_services_relationship_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_relationship_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_relationship_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_relationship_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_relationship_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_relationship_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_relationship_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_relationship_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SPOUSE",
              "PARENT",
              "CHILD",
              "SIBLING",
              "FRIEND",
              "BUSINESS_PARTNER",
              "OTHER"
            ]
          }
        },
        "mortgage_services_reporting_period": {
          "typeName": "reporting_period",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_reporting_period"
            },
            "min": {
              "returnType": "mortgage_services_reporting_period"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_reporting_period",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_reporting_period",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_reporting_period",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_reporting_period",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_reporting_period",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_reporting_period",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_reporting_period",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ANNUAL",
              "QUARTERLY_Q1",
              "QUARTERLY_Q2",
              "QUARTERLY_Q3"
            ]
          }
        },
        "mortgage_services_servicing_account_status": {
          "typeName": "servicing_account_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_servicing_account_status"
            },
            "min": {
              "returnType": "mortgage_services_servicing_account_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_servicing_account_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_servicing_account_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_servicing_account_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_servicing_account_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_servicing_account_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_servicing_account_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_servicing_account_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "DELINQUENT",
              "DEFAULT",
              "FORECLOSURE",
              "BANKRUPTCY",
              "PAID_OFF",
              "TRANSFERRED",
              "MODIFICATION_IN_PROCESS",
              "LOSS_MITIGATION",
              "FORBEARANCE",
              "REO",
              "SHORT_SALE",
              "CHARGE_OFF",
              "SATISFIED",
              "SUSPENDED"
            ]
          }
        },
        "mortgage_services_submission_channel": {
          "typeName": "submission_channel",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_submission_channel"
            },
            "min": {
              "returnType": "mortgage_services_submission_channel"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_submission_channel",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_submission_channel",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_submission_channel",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_submission_channel",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_submission_channel",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_submission_channel",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_submission_channel",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ONLINE",
              "MOBILE_APP",
              "BRANCH",
              "PHONE",
              "MAIL",
              "REFERRAL",
              "BROKER",
              "EMAIL",
              "OTHER"
            ]
          }
        },
        "mortgage_services_submission_status": {
          "typeName": "submission_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_submission_status"
            },
            "min": {
              "returnType": "mortgage_services_submission_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_submission_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_submission_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_submission_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_submission_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_submission_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_submission_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_submission_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15"
            ]
          }
        },
        "mortgage_services_verification_status": {
          "typeName": "verification_status",
          "schemaName": "mortgage_services",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "mortgage_services_verification_status"
            },
            "min": {
              "returnType": "mortgage_services_verification_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "mortgage_services_verification_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_verification_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_verification_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "mortgage_services_verification_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_verification_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_verification_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "mortgage_services_verification_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "VERIFIED",
              "PENDING",
              "UNVERIFIED",
              "FAILED",
              "WAIVED",
              "EXPIRED"
            ]
          }
        },
        "numeric": {
          "typeName": "numeric",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "numeric"
            },
            "max": {
              "returnType": "numeric"
            },
            "min": {
              "returnType": "numeric"
            },
            "stddev": {
              "returnType": "numeric"
            },
            "stddev_pop": {
              "returnType": "numeric"
            },
            "stddev_samp": {
              "returnType": "numeric"
            },
            "sum": {
              "returnType": "numeric"
            },
            "var_pop": {
              "returnType": "numeric"
            },
            "var_samp": {
              "returnType": "numeric"
            },
            "variance": {
              "returnType": "numeric"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "numeric",
              "isInfix": true
            }
          },
          "typeRepresentation": "bigDecimalAsString"
        },
        "security_agent_status": {
          "typeName": "agent_status",
          "schemaName": "security",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "security_agent_status"
            },
            "min": {
              "returnType": "security_agent_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "security_agent_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "security_agent_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "security_agent_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "security_agent_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "security_agent_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "security_agent_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "security_agent_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING",
              "ERROR",
              "DISCONNECTED"
            ]
          }
        },
        "security_compliance_status": {
          "typeName": "compliance_status",
          "schemaName": "security",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "security_compliance_status"
            },
            "min": {
              "returnType": "security_compliance_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "security_compliance_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "security_compliance_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "security_compliance_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "security_compliance_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "security_compliance_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "security_compliance_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "security_compliance_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "COMPLIANT",
              "NON_COMPLIANT",
              "EXCEPTION",
              "UNKNOWN"
            ]
          }
        },
        "security_entitlement_status": {
          "typeName": "entitlement_status",
          "schemaName": "security",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "security_entitlement_status"
            },
            "min": {
              "returnType": "security_entitlement_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "security_entitlement_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "security_entitlement_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "security_entitlement_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "security_entitlement_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "security_entitlement_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "security_entitlement_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "security_entitlement_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DEPRECATED",
              "DRAFT"
            ]
          }
        },
        "security_environment": {
          "typeName": "environment",
          "schemaName": "security",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "security_environment"
            },
            "min": {
              "returnType": "security_environment"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "security_environment",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "security_environment",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "security_environment",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "security_environment",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "security_environment",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "security_environment",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "security_environment",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "production",
              "preproduction",
              "qa",
              "development"
            ]
          }
        },
        "security_network_protocols": {
          "typeName": "network_protocols",
          "schemaName": "security",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "security_network_protocols"
            },
            "min": {
              "returnType": "security_network_protocols"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "security_network_protocols",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "security_network_protocols",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "security_network_protocols",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "security_network_protocols",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "security_network_protocols",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "security_network_protocols",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "security_network_protocols",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "TCP",
              "UDP",
              "ICMP",
              "HTTP2",
              "TLS",
              "QUIC",
              "SIP"
            ]
          }
        },
        "security_patch_status": {
          "typeName": "patch_status",
          "schemaName": "security",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "security_patch_status"
            },
            "min": {
              "returnType": "security_patch_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "security_patch_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "security_patch_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "security_patch_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "security_patch_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "security_patch_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "security_patch_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "security_patch_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "CURRENT",
              "UP_TO_DATE",
              "OUTDATED",
              "CRITICAL",
              "UNKNOWN"
            ]
          }
        },
        "security_permission_type": {
          "typeName": "permission_type",
          "schemaName": "security",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "security_permission_type"
            },
            "min": {
              "returnType": "security_permission_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "security_permission_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "security_permission_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "security_permission_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "security_permission_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "security_permission_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "security_permission_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "security_permission_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "READ",
              "MASKED",
              "WRITE",
              "DELETE",
              "EXECUTE",
              "ADMIN"
            ]
          }
        },
        "security_resource_type": {
          "typeName": "resource_type",
          "schemaName": "security",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "security_resource_type"
            },
            "min": {
              "returnType": "security_resource_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "security_resource_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "security_resource_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "security_resource_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "security_resource_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "security_resource_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "security_resource_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "security_resource_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "DATA",
              "APPLICATION",
              "HOST",
              "NETWORK_DEVICE"
            ]
          }
        },
        "security_risk_level": {
          "typeName": "risk_level",
          "schemaName": "security",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "security_risk_level"
            },
            "min": {
              "returnType": "security_risk_level"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "security_risk_level",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "security_risk_level",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "security_risk_level",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "security_risk_level",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "security_risk_level",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "security_risk_level",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "security_risk_level",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH",
              "CRITICAL"
            ]
          }
        },
        "security_role_status": {
          "typeName": "role_status",
          "schemaName": "security",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "security_role_status"
            },
            "min": {
              "returnType": "security_role_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "security_role_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "security_role_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "security_role_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "security_role_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "security_role_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "security_role_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "security_role_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DEPRECATED",
              "RETIRED",
              "DRAFT"
            ]
          }
        },
        "security_system_type": {
          "typeName": "system_type",
          "schemaName": "security",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "security_system_type"
            },
            "min": {
              "returnType": "security_system_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "security_system_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "security_system_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "security_system_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "security_system_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "security_system_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "security_system_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "security_system_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SERVER",
              "WORKSTATION",
              "LAPTOP",
              "VIRTUAL_MACHINE",
              "CONTAINER",
              "APPLIANCE"
            ]
          }
        },
        "security_tcp_flag_type": {
          "typeName": "tcp_flag_type",
          "schemaName": "security",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "security_tcp_flag_type"
            },
            "min": {
              "returnType": "security_tcp_flag_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "security_tcp_flag_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "security_tcp_flag_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "security_tcp_flag_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "security_tcp_flag_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "security_tcp_flag_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "security_tcp_flag_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "security_tcp_flag_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "SYN",
              "ACK",
              "FIN",
              "RST",
              "PSH",
              "URG",
              "ECE",
              "CWR"
            ]
          }
        },
        "security_threat_level_type": {
          "typeName": "threat_level_type",
          "schemaName": "security",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "security_threat_level_type"
            },
            "min": {
              "returnType": "security_threat_level_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "security_threat_level_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "security_threat_level_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "security_threat_level_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "security_threat_level_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "security_threat_level_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "security_threat_level_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "security_threat_level_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "HIGH",
              "MEDIUM",
              "LOW",
              "INFORMATIONAL",
              "UNKNOWN"
            ]
          }
        },
        "text": {
          "typeName": "text",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "text"
            },
            "min": {
              "returnType": "text"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "text",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_ilike": {
              "operatorName": "~~*",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "text",
              "isInfix": true
            },
            "_iregex": {
              "operatorName": "~*",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_like": {
              "operatorName": "~~",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_nilike": {
              "operatorName": "!~~*",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_niregex": {
              "operatorName": "!~*",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_nlike": {
              "operatorName": "!~~",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_nregex": {
              "operatorName": "!~",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_regex": {
              "operatorName": "~",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "starts_with": {
              "operatorName": "starts_with",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": false
            },
            "ts_match_tt": {
              "operatorName": "ts_match_tt",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": false
            }
          },
          "typeRepresentation": "string"
        },
        "timestamp": {
          "typeName": "timestamp",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "timestamp"
            },
            "min": {
              "returnType": "timestamp"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "timestamp",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "timestamp",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "timestamp",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "timestamp",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "timestamp",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "timestamp",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "timestamp",
              "isInfix": true
            }
          },
          "typeRepresentation": "timestamp"
        },
        "timestamptz": {
          "typeName": "timestamptz",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "timestamptz"
            },
            "min": {
              "returnType": "timestamptz"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "timestamptz",
              "isInfix": true
            }
          },
          "typeRepresentation": "timestamptz"
        },
        "uuid": {
          "typeName": "uuid",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {},
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "uuid",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "uuid",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "uuid",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "uuid",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "uuid",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "uuid",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "uuid",
              "isInfix": true
            }
          },
          "typeRepresentation": "uUID"
        },
        "varchar": {
          "typeName": "varchar",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "text"
            },
            "min": {
              "returnType": "text"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_ilike": {
              "operatorName": "~~*",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_iregex": {
              "operatorName": "~*",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_like": {
              "operatorName": "~~",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_nilike": {
              "operatorName": "!~~*",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_niregex": {
              "operatorName": "!~*",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_nlike": {
              "operatorName": "!~~",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_nregex": {
              "operatorName": "!~",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_regex": {
              "operatorName": "~",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "starts_with": {
              "operatorName": "starts_with",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": false
            },
            "ts_match_tt": {
              "operatorName": "ts_match_tt",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": false
            }
          },
          "typeRepresentation": "string"
        }
      },
      "composite": {}
    },
    "nativeOperations": {
      "queries": {},
      "mutations": {}
    }
  },
  "introspectionOptions": {
    "excludedSchemas": [
      "information_schema",
      "pg_catalog",
      "tiger",
      "crdb_internal",
      "columnar",
      "columnar_internal",
      "_timescaledb_catalog",
      "_timescaledb_functions",
      "_timescaledb_internal",
      "_timescaledb_cache",
      "_timescaledb_config",
      "timescaledb_experimental",
      "timescaledb_information",
      "_timescaledb_debug"
    ],
    "unqualifiedSchemasForTables": [
      "public"
    ],
    "unqualifiedSchemasForTypesAndProcedures": [
      "public",
      "pg_catalog",
      "tiger"
    ],
    "comparisonOperatorMapping": [
      {
        "operatorName": "=",
        "exposedName": "_eq",
        "operatorKind": "equal"
      },
      {
        "operatorName": "<=",
        "exposedName": "_lte",
        "operatorKind": "custom"
      },
      {
        "operatorName": ">",
        "exposedName": "_gt",
        "operatorKind": "custom"
      },
      {
        "operatorName": ">=",
        "exposedName": "_gte",
        "operatorKind": "custom"
      },
      {
        "operatorName": "<",
        "exposedName": "_lt",
        "operatorKind": "custom"
      },
      {
        "operatorName": "<>",
        "exposedName": "_neq",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!=",
        "exposedName": "_neq",
        "operatorKind": "custom"
      },
      {
        "operatorName": "LIKE",
        "exposedName": "_like",
        "operatorKind": "custom"
      },
      {
        "operatorName": "NOT LIKE",
        "exposedName": "_nlike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "ILIKE",
        "exposedName": "_ilike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "NOT ILIKE",
        "exposedName": "_nilike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "SIMILAR TO",
        "exposedName": "_similar",
        "operatorKind": "custom"
      },
      {
        "operatorName": "NOT SIMILAR TO",
        "exposedName": "_nsimilar",
        "operatorKind": "custom"
      },
      {
        "operatorName": "~~",
        "exposedName": "_like",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!~~",
        "exposedName": "_nlike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "~~*",
        "exposedName": "_ilike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!~~*",
        "exposedName": "_nilike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "~",
        "exposedName": "_regex",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!~",
        "exposedName": "_nregex",
        "operatorKind": "custom"
      },
      {
        "operatorName": "~*",
        "exposedName": "_iregex",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!~*",
        "exposedName": "_niregex",
        "operatorKind": "custom"
      }
    ],
    "introspectPrefixFunctionComparisonOperators": [
      "box_above",
      "box_below",
      "box_contain",
      "box_contain_pt",
      "box_contained",
      "box_left",
      "box_overabove",
      "box_overbelow",
      "box_overlap",
      "box_overleft",
      "box_overright",
      "box_right",
      "box_same",
      "circle_above",
      "circle_below",
      "circle_contain",
      "circle_contain_pt",
      "circle_contained",
      "circle_left",
      "circle_overabove",
      "circle_overbelow",
      "circle_overlap",
      "circle_overleft",
      "circle_overright",
      "circle_right",
      "circle_same",
      "contains_2d",
      "equals",
      "geography_overlaps",
      "geometry_above",
      "geometry_below",
      "geometry_contained_3d",
      "geometry_contains",
      "geometry_contains_3d",
      "geometry_contains_nd",
      "geometry_left",
      "geometry_overabove",
      "geometry_overbelow",
      "geometry_overlaps",
      "geometry_overlaps_3d",
      "geometry_overlaps_nd",
      "geometry_overleft",
      "geometry_overright",
      "geometry_right",
      "geometry_same",
      "geometry_same_3d",
      "geometry_same_nd",
      "geometry_within",
      "geometry_within_nd",
      "inet_same_family",
      "inter_lb",
      "inter_sb",
      "inter_sl",
      "is_contained_2d",
      "ishorizontal",
      "isparallel",
      "isperp",
      "isvertical",
      "jsonb_contained",
      "jsonb_contains",
      "jsonb_exists",
      "jsonb_path_exists_opr",
      "jsonb_path_match_opr",
      "line_intersect",
      "line_parallel",
      "line_perp",
      "lseg_intersect",
      "lseg_parallel",
      "lseg_perp",
      "network_overlap",
      "network_sub",
      "network_subeq",
      "network_sup",
      "network_supeq",
      "on_pb",
      "on_pl",
      "on_ppath",
      "on_ps",
      "on_sb",
      "on_sl",
      "overlaps_2d",
      "path_contain_pt",
      "path_inter",
      "point_above",
      "point_below",
      "point_horiz",
      "point_left",
      "point_right",
      "point_vert",
      "poly_above",
      "poly_below",
      "poly_contain",
      "poly_contain_pt",
      "poly_contained",
      "poly_left",
      "poly_overabove",
      "poly_overbelow",
      "poly_overlap",
      "poly_overleft",
      "poly_overright",
      "poly_right",
      "poly_same",
      "pt_contained_poly",
      "st_3dintersects",
      "st_contains",
      "st_containsproperly",
      "st_coveredby",
      "st_covers",
      "st_crosses",
      "st_disjoint",
      "st_equals",
      "st_intersects",
      "st_isvalid",
      "st_orderingequals",
      "st_overlaps",
      "st_relatematch",
      "st_touches",
      "st_within",
      "starts_with",
      "ts_match_qv",
      "ts_match_tq",
      "ts_match_tt",
      "ts_match_vq",
      "tsq_mcontained",
      "tsq_mcontains",
      "xmlexists",
      "xmlvalidate",
      "xpath_exists"
    ],
    "typeRepresentations": {
      "bit": "string",
      "bool": "boolean",
      "bpchar": "string",
      "char": "string",
      "date": "date",
      "float4": "float32",
      "float8": "float64",
      "int2": "int16",
      "int4": "int32",
      "int8": "int64AsString",
      "numeric": "bigDecimalAsString",
      "text": "string",
      "time": "time",
      "timestamp": "timestamp",
      "timestamptz": "timestamptz",
      "timetz": "timetz",
      "uuid": "uUID",
      "varchar": "string"
    }
  },
  "mutationsVersion": "v2",
  "mutationsPrefix": ""
}
